  normidna.nlp - 0, normidna.nlp
  normnfc.nlp - 0, normnfc.nlp
  normnfd.nlp - 0, normnfd.nlp
  normnfkc.nlp - 0, normnfkc.nlp
  normnfkd.nlp - 0, normnfkd.nlp
  mscorlib.resources - Embedded, ContainedInManifestFile, 
  charinfo.nlp - Embedded, ContainedInManifestFile, 
  codepages.nlp - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=PublicKey
Class <>f__AnonymousType0`1[<message>j__TPar]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: <message>j__TPar
    Void .ctor(<message>j__TPar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    <message>j__TPar message 'get ' : 
  Methods:
    get_message(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class EmptyArray`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T
  Fields:
    T[] Value : Public, Static, InitOnly
Class FXAssembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Version = 4.0.0.0 : Assembly, Static, Literal, HasDefault
Class ThisAssembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Title = mscorlib.dll : Assembly, Static, Literal, HasDefault
    System.String Description = mscorlib.dll : Assembly, Static, Literal, HasDefault
    System.String DefaultAlias = mscorlib.dll : Assembly, Static, Literal, HasDefault
    System.String Copyright = Â© Microsoft Corporation.  All rights reserved. : Assembly, Static, Literal, HasDefault
    System.String Version = 4.0.0.0 : Assembly, Static, Literal, HasDefault
    System.String InformationalVersion = 4.7.3394.0 : Assembly, Static, Literal, HasDefault
    System.String DailyBuildNumberStr = 30319 : Assembly, Static, Literal, HasDefault
    System.String BuildRevisionStr = 0 : Assembly, Static, Literal, HasDefault
    Int32 DailyBuildNumber = 30319 : Assembly, Static, Literal, HasDefault
Class AssemblyRef: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String EcmaPublicKey = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String EcmaPublicKeyToken = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String EcmaPublicKeyFull = 00000000000000000400000000000000 : Assembly, Static, Literal, HasDefault
    System.String SilverlightPublicKey = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SilverlightPublicKeyToken = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SilverlightPublicKeyFull = 0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9 : Assembly, Static, Literal, HasDefault
    System.String SilverlightPlatformPublicKey = 7cec85d7bea7798e : Assembly, Static, Literal, HasDefault
    System.String SilverlightPlatformPublicKeyToken = 7cec85d7bea7798e : Assembly, Static, Literal, HasDefault
    System.String SilverlightPlatformPublicKeyFull = 00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB : Assembly, Static, Literal, HasDefault
    System.String PlatformPublicKey = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String PlatformPublicKeyToken = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String PlatformPublicKeyFull = 00000000000000000400000000000000 : Assembly, Static, Literal, HasDefault
    System.String Mscorlib = mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemData = System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemDataOracleClient = System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String System = System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemCore = System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemNumerics = System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeRemoting = System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemThreadingTasksDataflow = System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemWindowsForms = System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemXml = System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKey = b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKeyToken = b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKeyFull = 002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKey = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKeyToken = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKeyFull = 0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9 : Assembly, Static, Literal, HasDefault
    System.String SystemComponentModelDataAnnotations = System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemConfiguration = System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemConfigurationInstall = System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDeployment = System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDesign = System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDirectoryServices = System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDrawingDesign = System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDrawing = System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemEnterpriseServices = System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemManagement = System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemMessaging = System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemNetHttp = System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemNetHttpWebRequest = System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeSerializationFormattersSoap = System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeWindowsRuntime = System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeWindowsRuntimeUIXaml = System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemSecurity = System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemServiceModelWeb = System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemServiceProcess = System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWeb = System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebAbstractions = System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebDynamicData = System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebDynamicDataDesign = System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebEntityDesign = System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemWebExtensions = System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebExtensionsDesign = System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebMobile = System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebRegularExpressions = System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebRouting = System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebServices = System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String WindowsBase = WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudio = Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudioWindowsForms = Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String VJSharpCodeProvider = VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String ASPBrowserCapsPublicKey = b7bd7678b977bd8f : Assembly, Static, Literal, HasDefault
    System.String ASPBrowserCapsFactory = ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVSDesigner = Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudioWeb = Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftWebDesign = Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVSDesignerMobile = Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftJScript = Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
Interface Microsoft.Win32.IAssemblyEnum: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetNextAssembly(IApplicationContext&(Out), IAssemblyName&(Out), UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(IAssemblyEnum&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Win32.IApplicationContext: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    SetContextNameObject(IAssemblyName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetContextNameObject(IAssemblyName&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Set(String(HasFieldMarshal), Int32, UInt32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Get(String(HasFieldMarshal), Int32&(Out), UInt32&, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDynamicDirectory(Int32&(Out), UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Win32.IAssemblyName: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetDisplayName(IntPtr, UInt32&, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetProperty(UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProperty(UInt32, IntPtr, UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Finalize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BindToObject(Object, Object, IApplicationContext, String(HasFieldMarshal), Int64, Int32, UInt32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetName(UInt32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVersion(UInt32&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEqual(IAssemblyName, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(IAssemblyName&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Win32.ASM_CACHE: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 ZAP = 1 : Public, Static, Literal, HasDefault
    UInt32 GAC = 2 : Public, Static, Literal, HasDefault
    UInt32 DOWNLOAD = 4 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.CANOF: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 PARSE_DISPLAY_NAME = 1 : Public, Static, Literal, HasDefault
    UInt32 SET_DEFAULT_VALUES = 2 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.ASM_NAME: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 PUBLIC_KEY = 0 : Public, Static, Literal, HasDefault
    UInt32 PUBLIC_KEY_TOKEN = 1 : Public, Static, Literal, HasDefault
    UInt32 HASH_VALUE = 2 : Public, Static, Literal, HasDefault
    UInt32 NAME = 3 : Public, Static, Literal, HasDefault
    UInt32 MAJOR_VERSION = 4 : Public, Static, Literal, HasDefault
    UInt32 MINOR_VERSION = 5 : Public, Static, Literal, HasDefault
    UInt32 BUILD_NUMBER = 6 : Public, Static, Literal, HasDefault
    UInt32 REVISION_NUMBER = 7 : Public, Static, Literal, HasDefault
    UInt32 CULTURE = 8 : Public, Static, Literal, HasDefault
    UInt32 PROCESSOR_ID_ARRAY = 9 : Public, Static, Literal, HasDefault
    UInt32 OSINFO_ARRAY = 10 : Public, Static, Literal, HasDefault
    UInt32 HASH_ALGID = 11 : Public, Static, Literal, HasDefault
    UInt32 ALIAS = 12 : Public, Static, Literal, HasDefault
    UInt32 CODEBASE_URL = 13 : Public, Static, Literal, HasDefault
    UInt32 CODEBASE_LASTMOD = 14 : Public, Static, Literal, HasDefault
    UInt32 NULL_PUBLIC_KEY = 15 : Public, Static, Literal, HasDefault
    UInt32 NULL_PUBLIC_KEY_TOKEN = 16 : Public, Static, Literal, HasDefault
    UInt32 CUSTOM = 17 : Public, Static, Literal, HasDefault
    UInt32 NULL_CUSTOM = 18 : Public, Static, Literal, HasDefault
    UInt32 MVID = 19 : Public, Static, Literal, HasDefault
    UInt32 _32_BIT_ONLY = 20 : Public, Static, Literal, HasDefault
    UInt32 MAX_PARAMS = 21 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.Fusion: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ReadCache(ArrayList, String, UInt32): PrivateScope, Public, Static, HideBySig
Class Microsoft.Win32.Win32Native: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Fields:
    IntPtr INVALID_HANDLE_VALUE : Assembly, Static, InitOnly
    Int32 KEY_QUERY_VALUE = 1 : Assembly, Static, Literal, HasDefault
    Int32 KEY_SET_VALUE = 2 : Assembly, Static, Literal, HasDefault
    Int32 KEY_CREATE_SUB_KEY = 4 : Assembly, Static, Literal, HasDefault
    Int32 KEY_ENUMERATE_SUB_KEYS = 8 : Assembly, Static, Literal, HasDefault
    Int32 KEY_NOTIFY = 16 : Assembly, Static, Literal, HasDefault
    Int32 KEY_CREATE_LINK = 32 : Assembly, Static, Literal, HasDefault
    Int32 KEY_READ = 131097 : Assembly, Static, Literal, HasDefault
    Int32 KEY_WRITE = 131078 : Assembly, Static, Literal, HasDefault
    Int32 KEY_WOW64_64KEY = 256 : Assembly, Static, Literal, HasDefault
    Int32 KEY_WOW64_32KEY = 512 : Assembly, Static, Literal, HasDefault
    Int32 REG_OPTION_NON_VOLATILE = 0 : Assembly, Static, Literal, HasDefault
    Int32 REG_OPTION_VOLATILE = 1 : Assembly, Static, Literal, HasDefault
    Int32 REG_OPTION_CREATE_LINK = 2 : Assembly, Static, Literal, HasDefault
    Int32 REG_OPTION_BACKUP_RESTORE = 4 : Assembly, Static, Literal, HasDefault
    Int32 REG_NONE = 0 : Assembly, Static, Literal, HasDefault
    Int32 REG_SZ = 1 : Assembly, Static, Literal, HasDefault
    Int32 REG_EXPAND_SZ = 2 : Assembly, Static, Literal, HasDefault
    Int32 REG_BINARY = 3 : Assembly, Static, Literal, HasDefault
    Int32 REG_DWORD = 4 : Assembly, Static, Literal, HasDefault
    Int32 REG_DWORD_LITTLE_ENDIAN = 4 : Assembly, Static, Literal, HasDefault
    Int32 REG_DWORD_BIG_ENDIAN = 5 : Assembly, Static, Literal, HasDefault
    Int32 REG_LINK = 6 : Assembly, Static, Literal, HasDefault
    Int32 REG_MULTI_SZ = 7 : Assembly, Static, Literal, HasDefault
    Int32 REG_RESOURCE_LIST = 8 : Assembly, Static, Literal, HasDefault
    Int32 REG_FULL_RESOURCE_DESCRIPTOR = 9 : Assembly, Static, Literal, HasDefault
    Int32 REG_RESOURCE_REQUIREMENTS_LIST = 10 : Assembly, Static, Literal, HasDefault
    Int32 REG_QWORD = 11 : Assembly, Static, Literal, HasDefault
    Int32 HWND_BROADCAST = 65535 : Assembly, Static, Literal, HasDefault
    Int32 WM_SETTINGCHANGE = 26 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPTPROTECTMEMORY_BLOCK_SIZE = 16 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPTPROTECTMEMORY_SAME_PROCESS = 0 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPTPROTECTMEMORY_CROSS_PROCESS = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPTPROTECTMEMORY_SAME_LOGON = 2 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_ANONYMOUS = 0 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_SQOS_PRESENT = 1048576 : Assembly, Static, Literal, HasDefault
    System.String MICROSOFT_KERBEROS_NAME = Kerberos : Assembly, Static, Literal, HasDefault
    UInt32 ANONYMOUS_LOGON_LUID = 998 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_ANONYMOUS_LOGON_RID = 7 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_AUTHENTICATED_USER_RID = 11 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_LOCAL_SYSTEM_RID = 18 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_BUILTIN_DOMAIN_RID = 32 : Assembly, Static, Literal, HasDefault
    UInt32 SE_PRIVILEGE_DISABLED = 0 : Assembly, Static, Literal, HasDefault
    UInt32 SE_PRIVILEGE_ENABLED_BY_DEFAULT = 1 : Assembly, Static, Literal, HasDefault
    UInt32 SE_PRIVILEGE_ENABLED = 2 : Assembly, Static, Literal, HasDefault
    UInt32 SE_PRIVILEGE_USED_FOR_ACCESS = 2147483648 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_MANDATORY = 1 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_ENABLED_BY_DEFAULT = 2 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_ENABLED = 4 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_OWNER = 8 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_USE_FOR_DENY_ONLY = 16 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_LOGON_ID = 3221225472 : Assembly, Static, Literal, HasDefault
    UInt32 SE_GROUP_RESOURCE = 536870912 : Assembly, Static, Literal, HasDefault
    UInt32 DUPLICATE_CLOSE_SOURCE = 1 : Assembly, Static, Literal, HasDefault
    UInt32 DUPLICATE_SAME_ACCESS = 2 : Assembly, Static, Literal, HasDefault
    UInt32 DUPLICATE_SAME_ATTRIBUTES = 4 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_INVALID = -1 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_UNKNOWN = 0 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_STANDARD = 1 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_DAYLIGHT = 2 : Assembly, Static, Literal, HasDefault
    Int32 MAX_PATH = 260 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANGUAGE_ID = 4 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANGUAGE_NAME = 8 : Assembly, Static, Literal, HasDefault
    Int32 MUI_PREFERRED_UI_LANGUAGES = 16 : Assembly, Static, Literal, HasDefault
    Int32 MUI_INSTALLED_LANGUAGES = 32 : Assembly, Static, Literal, HasDefault
    Int32 MUI_ALL_LANGUAGES = 64 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANG_NEUTRAL_PE_FILE = 256 : Assembly, Static, Literal, HasDefault
    Int32 MUI_NON_LANG_NEUTRAL_FILE = 512 : Assembly, Static, Literal, HasDefault
    Int32 LOAD_LIBRARY_AS_DATAFILE = 2 : Assembly, Static, Literal, HasDefault
    Int32 LOAD_STRING_MAX_LENGTH = 500 : Assembly, Static, Literal, HasDefault
    Int32 READ_CONTROL = 131072 : Assembly, Static, Literal, HasDefault
    Int32 SYNCHRONIZE = 1048576 : Assembly, Static, Literal, HasDefault
    Int32 STANDARD_RIGHTS_READ = 131072 : Assembly, Static, Literal, HasDefault
    Int32 STANDARD_RIGHTS_WRITE = 131072 : Assembly, Static, Literal, HasDefault
    Int32 SEMAPHORE_MODIFY_STATE = 2 : Assembly, Static, Literal, HasDefault
    Int32 EVENT_MODIFY_STATE = 2 : Assembly, Static, Literal, HasDefault
    Int32 MUTEX_MODIFY_STATE = 1 : Assembly, Static, Literal, HasDefault
    Int32 MUTEX_ALL_ACCESS = 2031617 : Assembly, Static, Literal, HasDefault
    Int32 LMEM_FIXED = 0 : Assembly, Static, Literal, HasDefault
    Int32 LMEM_ZEROINIT = 64 : Assembly, Static, Literal, HasDefault
    Int32 LPTR = 64 : Assembly, Static, Literal, HasDefault
    System.String KERNEL32 = kernel32.dll : Assembly, Static, Literal, HasDefault
    System.String USER32 = user32.dll : Assembly, Static, Literal, HasDefault
    System.String ADVAPI32 = advapi32.dll : Assembly, Static, Literal, HasDefault
    System.String OLE32 = ole32.dll : Assembly, Static, Literal, HasDefault
    System.String OLEAUT32 = oleaut32.dll : Assembly, Static, Literal, HasDefault
    System.String SHELL32 = shell32.dll : Assembly, Static, Literal, HasDefault
    System.String SHIM = mscoree.dll : Assembly, Static, Literal, HasDefault
    System.String CRYPT32 = crypt32.dll : Assembly, Static, Literal, HasDefault
    System.String SECUR32 = secur32.dll : Assembly, Static, Literal, HasDefault
    System.String NTDLL = ntdll.dll : Assembly, Static, Literal, HasDefault
    System.String MSCORWKS = clr.dll : Assembly, Static, Literal, HasDefault
    Int32 SEM_FAILCRITICALERRORS = 1 : Assembly, Static, Literal, HasDefault
    Int32 FIND_STARTSWITH = 1048576 : Assembly, Static, Literal, HasDefault
    Int32 FIND_ENDSWITH = 2097152 : Assembly, Static, Literal, HasDefault
    Int32 FIND_FROMSTART = 4194304 : Assembly, Static, Literal, HasDefault
    Int32 FIND_FROMEND = 8388608 : Assembly, Static, Literal, HasDefault
    Int32 STD_INPUT_HANDLE = -10 : Assembly, Static, Literal, HasDefault
    Int32 STD_OUTPUT_HANDLE = -11 : Assembly, Static, Literal, HasDefault
    Int32 STD_ERROR_HANDLE = -12 : Assembly, Static, Literal, HasDefault
    Int32 CTRL_C_EVENT = 0 : Assembly, Static, Literal, HasDefault
    Int32 CTRL_BREAK_EVENT = 1 : Assembly, Static, Literal, HasDefault
    Int32 CTRL_CLOSE_EVENT = 2 : Assembly, Static, Literal, HasDefault
    Int32 CTRL_LOGOFF_EVENT = 5 : Assembly, Static, Literal, HasDefault
    Int32 CTRL_SHUTDOWN_EVENT = 6 : Assembly, Static, Literal, HasDefault
    Int16 KEY_EVENT = 1 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_DISK = 1 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_CHAR = 2 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_PIPE = 3 : Assembly, Static, Literal, HasDefault
    Int32 REPLACEFILE_WRITE_THROUGH = 1 : Assembly, Static, Literal, HasDefault
    Int32 REPLACEFILE_IGNORE_MERGE_ERRORS = 2 : Assembly, Static, Literal, HasDefault
    UInt32 FILE_MAP_WRITE = 2 : Assembly, Static, Literal, HasDefault
    UInt32 FILE_MAP_READ = 4 : Assembly, Static, Literal, HasDefault
    Int32 FILE_ATTRIBUTE_READONLY = 1 : Assembly, Static, Literal, HasDefault
    Int32 FILE_ATTRIBUTE_DIRECTORY = 16 : Assembly, Static, Literal, HasDefault
    Int32 FILE_ATTRIBUTE_REPARSE_POINT = 1024 : Assembly, Static, Literal, HasDefault
    Int32 IO_REPARSE_TAG_MOUNT_POINT = -1610612733 : Assembly, Static, Literal, HasDefault
    Int32 PAGE_READWRITE = 4 : Assembly, Static, Literal, HasDefault
    Int32 MEM_COMMIT = 4096 : Assembly, Static, Literal, HasDefault
    Int32 MEM_RESERVE = 8192 : Assembly, Static, Literal, HasDefault
    Int32 MEM_RELEASE = 32768 : Assembly, Static, Literal, HasDefault
    Int32 MEM_FREE = 65536 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_SUCCESS = 0 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_FUNCTION = 1 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILE_NOT_FOUND = 2 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PATH_NOT_FOUND = 3 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ACCESS_DENIED = 5 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_HANDLE = 6 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_ENOUGH_MEMORY = 8 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_DATA = 13 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_DRIVE = 15 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_MORE_FILES = 18 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_READY = 21 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BAD_LENGTH = 24 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_SHARING_VIOLATION = 32 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_SUPPORTED = 50 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILE_EXISTS = 80 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_PARAMETER = 87 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BROKEN_PIPE = 109 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_CALL_NOT_IMPLEMENTED = 120 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INSUFFICIENT_BUFFER = 122 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_NAME = 123 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BAD_PATHNAME = 161 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ALREADY_EXISTS = 183 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ENVVAR_NOT_FOUND = 203 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILENAME_EXCED_RANGE = 206 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_DATA = 232 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PIPE_NOT_CONNECTED = 233 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_MORE_DATA = 234 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_DIRECTORY = 267 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_OPERATION_ABORTED = 995 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_FOUND = 1168 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_TOKEN = 1008 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_DLL_INIT_FAILED = 1114 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NON_ACCOUNT_SID = 1257 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_ALL_ASSIGNED = 1300 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_UNKNOWN_REVISION = 1305 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_OWNER = 1307 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_PRIMARY_GROUP = 1308 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_SUCH_PRIVILEGE = 1313 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PRIVILEGE_NOT_HELD = 1314 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NONE_MAPPED = 1332 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_ACL = 1336 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_SID = 1337 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_SECURITY_DESCR = 1338 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BAD_IMPERSONATION_LEVEL = 1346 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_CANT_OPEN_ANONYMOUS = 1347 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_SECURITY_ON_OBJECT = 1350 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_SUCCESS = 0 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_SOME_NOT_MAPPED = 263 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_NO_MEMORY = 3221225495 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_OBJECT_NAME_NOT_FOUND = 3221225524 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_NONE_MAPPED = 3221225587 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_INSUFFICIENT_RESOURCES = 3221225626 : Assembly, Static, Literal, HasDefault
    UInt32 STATUS_ACCESS_DENIED = 3221225506 : Assembly, Static, Literal, HasDefault
    Int32 INVALID_FILE_SIZE = -1 : Assembly, Static, Literal, HasDefault
    Int32 STATUS_ACCOUNT_RESTRICTION = -1073741714 : Assembly, Static, Literal, HasDefault
    Int32 LCID_SUPPORTED = 2 : Assembly, Static, Literal, HasDefault
    Int32 ENABLE_PROCESSED_INPUT = 1 : Assembly, Static, Literal, HasDefault
    Int32 ENABLE_LINE_INPUT = 2 : Assembly, Static, Literal, HasDefault
    Int32 ENABLE_ECHO_INPUT = 4 : Assembly, Static, Literal, HasDefault
    Int32 SHGFP_TYPE_CURRENT = 0 : Assembly, Static, Literal, HasDefault
    Int32 UOI_FLAGS = 1 : Assembly, Static, Literal, HasDefault
    Int32 WSF_VISIBLE = 1 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_FLAG_CREATE = 32768 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_FLAG_DONT_VERIFY = 16384 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_ADMINTOOLS = 48 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_CDBURN_AREA = 59 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_ADMINTOOLS = 47 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_DOCUMENTS = 46 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_MUSIC = 53 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_OEM_LINKS = 58 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_PICTURES = 54 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_STARTMENU = 22 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_PROGRAMS = 23 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_STARTUP = 24 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_DESKTOPDIRECTORY = 25 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_TEMPLATES = 45 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_VIDEO = 55 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_FONTS = 20 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_MYVIDEO = 14 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_NETHOOD = 19 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PRINTHOOD = 27 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROFILE = 40 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROGRAM_FILES_COMMONX86 = 44 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROGRAM_FILESX86 = 42 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_RESOURCES = 56 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_RESOURCES_LOCALIZED = 57 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_SYSTEMX86 = 41 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_WINDOWS = 36 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_APPDATA = 26 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COMMON_APPDATA = 35 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_LOCAL_APPDATA = 28 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_COOKIES = 33 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_FAVORITES = 6 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_HISTORY = 34 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_INTERNET_CACHE = 32 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROGRAMS = 2 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_RECENT = 8 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_SENDTO = 9 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_STARTMENU = 11 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_STARTUP = 7 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_SYSTEM = 37 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_TEMPLATES = 21 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_DESKTOPDIRECTORY = 16 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PERSONAL = 5 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROGRAM_FILES = 38 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_PROGRAM_FILES_COMMON = 43 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_DESKTOP = 0 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_DRIVES = 17 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_MYMUSIC = 13 : Assembly, Static, Literal, HasDefault
    Int32 CSIDL_MYPICTURES = 39 : Assembly, Static, Literal, HasDefault
    Int32 NameSamCompatible = 2 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = 0 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 = 1 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 = 2 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING = 3 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN = 4 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_SID = 5 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = 6 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = 16 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE = 1 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = 2 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY = 4 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT = 8 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_DISABLED = 16 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_MANDATORY = 32 : Assembly, Static, Literal, HasDefault
    Int32 CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS = 63 : Assembly, Static, Literal, HasDefault
  Methods:
    GetMessage(Int32): PrivateScope, Assembly, Static, HideBySig
    LocalAlloc_NoSafeHandle(Int32, UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LocalAlloc(Int32(In), UIntPtr(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LocalFree(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ZeroMemory(IntPtr, UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    IsWow64Process(IntPtr(In), Boolean&(Out, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetTempPath(Int32, StringBuilder(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    lstrlenA(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysAllocStringLen(String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysAllocStringByteLen(Byte[], UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysStringByteLen(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysStringLen(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysFreeString(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetACP(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetEvent(SafeWaitHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ResetEvent(SafeWaitHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateEvent(SECURITY_ATTRIBUTES, Boolean, Boolean, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    OpenEvent(Int32, Boolean, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateMutex(SECURITY_ATTRIBUTES, Boolean, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    OpenMutex(Int32, Boolean, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReleaseMutex(SafeWaitHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFullPathName(Char*, Int32, Char*, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFullPathName(String, Int32, StringBuilder(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLongPathName(Char*, Char*, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    UnmapViewOfFile(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CloseHandle(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileType(SafeFileHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetEndOfFile(SafeFileHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadFile(SafeFileHandle, Byte*, Int32, IntPtr, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadFile(SafeFileHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteFile(SafeFileHandle, Byte*, Int32, IntPtr, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteFile(SafeFileHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetDiskFreeSpaceEx(String, Int64&(Out), Int64&(Out), Int64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetDriveType(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetVolumeInformation(String, StringBuilder(Out), Int32, Int32&(Out), Int32&(Out), Int32&(Out), StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSystemDirectory(StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileSize(SafeFileHandle, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetStdHandle(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CopyFile(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateDirectory(String, SECURITY_ATTRIBUTES): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DeleteFile(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FindFirstFile(String, WIN32_FIND_DATA&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FindNextFile(SafeFindHandle, WIN32_FIND_DATA&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FindClose(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentDirectory(Int32, StringBuilder(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileAttributesEx(String, Int32, WIN32_FILE_ATTRIBUTE_DATA&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLogicalDrives(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetTempFileName(String, String, UInt32, StringBuilder(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MoveFile(String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RemoveDirectory(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetCurrentDirectory(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WideCharToMultiByte(UInt32, UInt32, Char*, Int32, Byte*, Int32, IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleCtrlHandler(ConsoleCtrlHandlerRoutine, Boolean): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetEnvironmentVariable(String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetEnvironmentVariable(String, StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetEnvironmentStrings(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FreeEnvironmentStrings(Char*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentProcessId(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetUserName(StringBuilder(Out), Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetComputerName(StringBuilder(Out), Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CoCreateGuid(Guid&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CoTaskMemAlloc(UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CoTaskMemFree(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetConsoleScreenBufferInfo(IntPtr, CONSOLE_SCREEN_BUFFER_INFO&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleTextAttribute(IntPtr, Int16): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetConsoleOutputCP(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegCreateKeyEx(SafeRegistryHandle, String, Int32, String, Int32, Int32, SECURITY_ATTRIBUTES, SafeRegistryHandle&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegDeleteKeyEx(SafeRegistryHandle, String, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegEnumKeyEx(SafeRegistryHandle, Int32, Char*, Int32&, Int32[], StringBuilder(Out), Int32[], Int64[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegEnumValue(SafeRegistryHandle, Int32, Char*, Int32&, IntPtr, Int32[], Byte[], Int32[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegOpenKeyEx(SafeRegistryHandle, String, Int32, Int32, SafeRegistryHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryInfoKey(SafeRegistryHandle, StringBuilder(Out), Int32[], IntPtr, Int32&, Int32[], Int32[], Int32&, Int32[], Int32[], Int32[], Int32[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryValueEx(SafeRegistryHandle, String, Int32[], Int32&, Byte[](Out), Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryValueEx(SafeRegistryHandle, String, Int32[], Int32&, Int32&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryValueEx(SafeRegistryHandle, String, Int32[], Int32&, Char[](Out), Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegSetValueEx(SafeRegistryHandle, String, Int32, RegistryValueKind, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegSetValueEx(SafeRegistryHandle, String, Int32, RegistryValueKind, Int32&, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegSetValueEx(SafeRegistryHandle, String, Int32, RegistryValueKind, String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ExpandEnvironmentStrings(String, StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SHGetFolderPath(IntPtr, Int32, IntPtr, Int32, StringBuilder(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetUserNameEx(Int32, StringBuilder(Out), UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetProcessWindowStation(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetUserObjectInformation(IntPtr, Int32, USEROBJECTFLAGS(HasFieldMarshal), Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SystemFunction041(SafeBSTRHandle(In, Out), UInt32(In), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptGetFipsAlgorithmMode(Boolean&(Out, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CheckTokenMembership(SafeAccessTokenHandle(In), Byte[](In), Boolean&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConvertStringSidToSid(String, IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateWellKnownSid(Int32, Byte[], Byte[](Out), UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateHandle(IntPtr(In), IntPtr(In), IntPtr(In), SafeAccessTokenHandle&(In, Out), UInt32(In), Boolean(In), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateTokenEx(SafeAccessTokenHandle(In), UInt32(In), IntPtr(In), UInt32(In), UInt32(In), SafeAccessTokenHandle&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentProcess(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetTokenInformation(IntPtr(In), UInt32(In), SafeLocalAllocHandle(In), UInt32(In), UInt32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetTokenInformation(SafeAccessTokenHandle(In), UInt32(In), SafeLocalAllocHandle(In), UInt32(In), UInt32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaOpenPolicy(String, LSA_OBJECT_ATTRIBUTES&, Int32, SafeLsaPolicyHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaLookupSids(SafeLsaPolicyHandle, Int32, IntPtr[], SafeLsaMemoryHandle&, SafeLsaMemoryHandle&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaFreeMemory(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaClose(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    OpenProcessToken(IntPtr(In), TokenAccessLevels(In), SafeAccessTokenHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateAssemblyNameObject(IAssemblyName&(Out), String, UInt32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateAssemblyEnum(IAssemblyEnum&(Out), IApplicationContext, IAssemblyName, UInt32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    QueryUnbiasedInterruptTime(UInt64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSystemInfo(SYSTEM_INFO&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FormatMessage(Int32, IntPtr, Int32, Int32, StringBuilder(Out), Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GlobalMemoryStatusEx(MEMORYSTATUSEX&): PrivateScope, Assembly, Static, HideBySig
    VirtualQuery(Void*, MEMORY_BASIC_INFORMATION&, UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    VirtualAlloc(Void*, UIntPtr, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    VirtualFree(Void*, UIntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DoesWin32MethodExist(String, String): PrivateScope, Assembly, Static, HideBySig
    lstrlenW(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SysStringLen(SafeBSTRHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFullPathNameW(Char*, UInt32, SafeHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLongPathName(String, StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLongPathNameW(SafeHandle, SafeHandle, UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLongPathNameW(String, SafeHandle, UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SafeCreateFile(String, Int32, FileShare, SECURITY_ATTRIBUTES, FileMode, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
    UnsafeCreateFile(String, Int32, FileShare, SECURITY_ATTRIBUTES, FileMode, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
    CreateFileMapping(SafeFileHandle, IntPtr, UInt32, UInt32, UInt32, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MapViewOfFile(SafeFileMappingHandle, UInt32, UInt32, UInt32, UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FlushFileBuffers(SafeFileHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetFilePointer(SafeFileHandle, Int64, SeekOrigin, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    CancelIoEx(SafeFileHandle, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetVolumeLabel(String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    QueryPerformanceCounter(Int64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    QueryPerformanceFrequency(Int64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateSemaphore(SECURITY_ATTRIBUTES, Int32, Int32, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReleaseSemaphore(SafeWaitHandle, Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetWindowsDirectory(StringBuilder(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetFileTime(SafeFileHandle, FILE_TIME*, FILE_TIME*, FILE_TIME*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LockFile(SafeFileHandle, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    UnlockFile(SafeFileHandle, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MakeHRFromErrorCode(Int32): PrivateScope, Assembly, Static, HideBySig
    ReplaceFile(String, String, String, Int32, IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DecryptFile(String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EncryptFile(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentDirectoryW(UInt32, SafeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetFileAttributes(String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DeleteVolumeMountPoint(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetErrorMode(Int32): PrivateScope, Assembly, Static, HideBySig
    CoTaskMemRealloc(IntPtr, UIntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleMode(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetConsoleMode(IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    Beep(Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleScreenBufferSize(IntPtr, COORD): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetLargestConsoleWindowSize(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FillConsoleOutputCharacter(IntPtr, Char, Int32, COORD, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FillConsoleOutputAttribute(IntPtr, Int16, Int32, COORD, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleWindowInfo(IntPtr, Boolean, SMALL_RECT*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleCursorPosition(IntPtr, COORD): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetConsoleCursorInfo(IntPtr, CONSOLE_CURSOR_INFO&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleCursorInfo(IntPtr, CONSOLE_CURSOR_INFO&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleTitle(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadConsoleInput(IntPtr, InputRecord&(Out), Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PeekConsoleInput(IntPtr, InputRecord&(Out), Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadConsoleOutput(IntPtr, CHAR_INFO*, COORD, COORD, SMALL_RECT&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadConsoleW(SafeFileHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteConsoleOutput(IntPtr, CHAR_INFO*, COORD, COORD, SMALL_RECT&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteConsoleW(SafeFileHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetKeyState(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetConsoleCP(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleCP(UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetConsoleOutputCP(UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegConnectRegistry(String, SafeRegistryHandle, SafeRegistryHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegDeleteKey(SafeRegistryHandle, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegDeleteValue(SafeRegistryHandle, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegFlushKey(SafeRegistryHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegOpenKeyEx(IntPtr, String, Int32, Int32, SafeRegistryHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryValueEx(SafeRegistryHandle, String, Int32[], Int32&, Int64&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegQueryValueEx(SafeRegistryHandle, String, Int32[], Int32&, StringBuilder(Out), Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RegSetValueEx(SafeRegistryHandle, String, Int32, RegistryValueKind, Int64&, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LocalReAlloc(IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LookupAccountName(String, String, Byte[], Int32&, StringBuilder(Out), UInt32&, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SendMessageTimeout(IntPtr, Int32, IntPtr, String, UInt32, UInt32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SystemFunction040(SafeBSTRHandle(In, Out), UInt32(In), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaNtStatusToWinError(Int32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    AdjustTokenPrivileges(SafeAccessTokenHandle(In), Boolean(In), TOKEN_PRIVILEGE&(In), UInt32(In), TOKEN_PRIVILEGE&(In, Out), UInt32&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    AllocateLocallyUniqueId(LUID&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConvertSdToStringSd(Byte[], UInt32, UInt32, IntPtr&(Out), UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConvertStringSdToSd(String, UInt32, IntPtr&(Out), UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConvertSidToStringSid(IntPtr, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateHandle(IntPtr(In), SafeAccessTokenHandle(In), IntPtr(In), SafeAccessTokenHandle&(In, Out), UInt32(In), Boolean(In), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateTokenEx(SafeAccessTokenHandle(In), TokenAccessLevels(In), IntPtr(In), SECURITY_IMPERSONATION_LEVEL(In), TokenType(In), SafeAccessTokenHandle&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    IsEqualDomainSid(Byte[], Byte[], Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentThread(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSecurityDescriptorLength(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSecurityInfoByHandle(SafeHandle, UInt32, UInt32, IntPtr&(Out), IntPtr&(Out), IntPtr&(Out), IntPtr&(Out), IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSecurityInfoByName(String, UInt32, UInt32, IntPtr&(Out), IntPtr&(Out), IntPtr&(Out), IntPtr&(Out), IntPtr&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetWindowsAccountDomainSid(Byte[], Byte[](Out), UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    IsWellKnownSid(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LookupPrivilegeValue(String(In), String(In), LUID&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaLookupNames(SafeLsaPolicyHandle, Int32, UNICODE_STRING[], SafeLsaMemoryHandle&, SafeLsaMemoryHandle&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaLookupNames2(SafeLsaPolicyHandle, Int32, Int32, UNICODE_STRING[], SafeLsaMemoryHandle&, SafeLsaMemoryHandle&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaConnectUntrusted(SafeLsaLogonProcessHandle&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaGetLogonSessionData(LUID&(In), SafeLsaReturnBufferHandle&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaLogonUser(SafeLsaLogonProcessHandle(In), UNICODE_INTPTR_STRING&(In), UInt32(In), UInt32(In), IntPtr(In), UInt32(In), IntPtr(In), TOKEN_SOURCE&(In), SafeLsaReturnBufferHandle&(In, Out), UInt32&(In, Out), LUID&(In, Out), SafeAccessTokenHandle&(In, Out), QUOTA_LIMITS&(In, Out), Int32&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaLookupAuthenticationPackage(SafeLsaLogonProcessHandle(In), UNICODE_INTPTR_STRING&(In), UInt32&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaRegisterLogonProcess(UNICODE_INTPTR_STRING&(In), SafeLsaLogonProcessHandle&(In, Out), IntPtr&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaDeregisterLogonProcess(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LsaFreeReturnBuffer(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetSecurityInfoByName(String, UInt32, UInt32, Byte[], Byte[], Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetSecurityInfoByHandle(SafeHandle, UInt32, UInt32, Byte[], Byte[], Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RtlGetVersion(RTL_OSVERSIONINFOEX&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNativeSystemInfo(SYSTEM_INFO&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class Microsoft.Win32.OAVariantLib: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Type[] ClassTypes : Assembly, Static, InitOnly
    Int32 NoValueProp = 1 : Public, Static, Literal, HasDefault
    Int32 AlphaBool = 2 : Public, Static, Literal, HasDefault
    Int32 NoUserOverride = 4 : Public, Static, Literal, HasDefault
    Int32 CalendarHijri = 8 : Public, Static, Literal, HasDefault
    Int32 LocalBool = 16 : Public, Static, Literal, HasDefault
  Methods:
    ChangeType(Variant, Type, Int16, CultureInfo): PrivateScope, Assembly, Static, HideBySig
Class Microsoft.Win32.Registry: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    Microsoft.Win32.RegistryKey CurrentUser : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey LocalMachine : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey ClassesRoot : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey Users : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey PerformanceData : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey CurrentConfig : Public, Static, InitOnly
    Microsoft.Win32.RegistryKey DynData : Public, Static, InitOnly (Obsolete)
  Methods:
    GetValue(String, String, Object): PrivateScope, Public, Static, HideBySig
    SetValue(String, String, Object): PrivateScope, Public, Static, HideBySig
    SetValue(String, String, Object, RegistryValueKind): PrivateScope, Public, Static, HideBySig
Struct Microsoft.Win32.RegistryHive: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryHive ClassesRoot = -2147483648 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive CurrentUser = -2147483647 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive LocalMachine = -2147483646 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive Users = -2147483645 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive PerformanceData = -2147483644 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive CurrentConfig = -2147483643 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryHive DynData = -2147483642 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.RegistryKey: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.IDisposable
  Fields:
    IntPtr HKEY_CLASSES_ROOT : Assembly, Static, InitOnly
    IntPtr HKEY_CURRENT_USER : Assembly, Static, InitOnly
    IntPtr HKEY_LOCAL_MACHINE : Assembly, Static, InitOnly
    IntPtr HKEY_USERS : Assembly, Static, InitOnly
    IntPtr HKEY_PERFORMANCE_DATA : Assembly, Static, InitOnly
    IntPtr HKEY_CURRENT_CONFIG : Assembly, Static, InitOnly
    IntPtr HKEY_DYN_DATA : Assembly, Static, InitOnly
  Properties:
    Int32 SubKeyCount 'get ' : 
    Microsoft.Win32.RegistryView View 'get ' : 
    Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle 'get ' : 
    Int32 ValueCount 'get ' : 
    System.String Name 'get ' : 
  Methods:
    Close(): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateSubKey(String): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions): PrivateScope, Public, HideBySig
    CreateSubKey(String, Boolean): PrivateScope, Public, HideBySig
    CreateSubKey(String, Boolean, RegistryOptions): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity): PrivateScope, Public, HideBySig
    DeleteSubKey(String): PrivateScope, Public, HideBySig
    DeleteSubKey(String, Boolean): PrivateScope, Public, HideBySig
    DeleteSubKeyTree(String): PrivateScope, Public, HideBySig
    DeleteSubKeyTree(String, Boolean): PrivateScope, Public, HideBySig
    DeleteValue(String): PrivateScope, Public, HideBySig
    DeleteValue(String, Boolean): PrivateScope, Public, HideBySig
    GetBaseKey(IntPtr): PrivateScope, Assembly, Static, HideBySig
    GetBaseKey(IntPtr, RegistryView): PrivateScope, Assembly, Static, HideBySig
    OpenBaseKey(RegistryHive, RegistryView): PrivateScope, Public, Static, HideBySig
    OpenRemoteBaseKey(RegistryHive, String): PrivateScope, Public, Static, HideBySig
    OpenRemoteBaseKey(RegistryHive, String, RegistryView): PrivateScope, Public, Static, HideBySig
    OpenSubKey(String, Boolean): PrivateScope, Public, HideBySig
    OpenSubKey(String, RegistryKeyPermissionCheck): PrivateScope, Public, HideBySig
    OpenSubKey(String, RegistryRights): PrivateScope, Public, HideBySig
    OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights): PrivateScope, Public, HideBySig
    InternalOpenSubKey(String, Boolean): PrivateScope, Assembly, HideBySig
    OpenSubKey(String): PrivateScope, Public, HideBySig
    get_SubKeyCount(): PrivateScope, Public, HideBySig, SpecialName
    get_View(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    FromHandle(SafeRegistryHandle): PrivateScope, Public, Static, HideBySig, HasSecurity
    FromHandle(SafeRegistryHandle, RegistryView): PrivateScope, Public, Static, HideBySig, HasSecurity
    InternalSubKeyCount(): PrivateScope, Assembly, HideBySig
    GetSubKeyNames(): PrivateScope, Public, HideBySig
    InternalGetSubKeyNames(): PrivateScope, Assembly, HideBySig
    get_ValueCount(): PrivateScope, Public, HideBySig, SpecialName
    InternalValueCount(): PrivateScope, Assembly, HideBySig
    GetValueNames(): PrivateScope, Public, HideBySig
    GetValue(String): PrivateScope, Public, HideBySig
    GetValue(String, Object): PrivateScope, Public, HideBySig
    GetValue(String, Object, RegistryValueOptions): PrivateScope, Public, HideBySig
    InternalGetValue(String, Object, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    GetValueKind(String): PrivateScope, Public, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    SetValue(String, Object): PrivateScope, Public, HideBySig
    SetValue(String, Object, RegistryValueKind): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetAccessControl(): PrivateScope, Public, HideBySig
    GetAccessControl(AccessControlSections): PrivateScope, Public, HideBySig
    SetAccessControl(RegistrySecurity): PrivateScope, Public, HideBySig
    Win32Error(Int32, String): PrivateScope, Assembly, HideBySig
    Win32ErrorStatic(Int32, String): PrivateScope, Assembly, Static, HideBySig
    FixupName(String): PrivateScope, Assembly, Static, HideBySig
Struct Microsoft.Win32.RegistryValueOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryValueOptions None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueOptions DoNotExpandEnvironmentNames = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.RegistryKeyPermissionCheck: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryKeyPermissionCheck Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryKeyPermissionCheck ReadSubTree = 1 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryKeyPermissionCheck ReadWriteSubTree = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.RegistryOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryOptions None = 0 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryOptions Volatile = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.RegistryValueKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryValueKind String = 1 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind ExpandString = 2 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind Binary = 3 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind DWord = 4 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind MultiString = 7 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind QWord = 11 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind Unknown = 0 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryValueKind None = -1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.RegistryView: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Microsoft.Win32.RegistryView Default = 0 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryView Registry64 = 256 : Public, Static, Literal, HasDefault
    Microsoft.Win32.RegistryView Registry32 = 512 : Public, Static, Literal, HasDefault
Class Microsoft.Win32.UnsafeNativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    GetTimeZoneInformation(TimeZoneInformation&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetDynamicTimeZoneInformation(DynamicTimeZoneInformation&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileMUIPath(Int32, String(HasFieldMarshal), StringBuilder(HasFieldMarshal), Int32&, StringBuilder(HasFieldMarshal), Int32&, Int64&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LoadString(SafeLibraryHandle, Int32, StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LoadLibraryEx(String, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FreeLibrary(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RoGetActivationFactory(String(HasFieldMarshal), Guid&(In), Object&(Out, HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class Microsoft.Win32.SafeLibraryHandle: AutoLayout, AnsiClass, Class, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeFileHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeFileMappingHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeFindHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeLocalAllocHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeBuffer
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeLocalAllocHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafePEFileHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class Microsoft.Win32.SafeHandles.SafeRegistryHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegCloseKey(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Class Microsoft.Win32.SafeHandles.SafeViewOfFileHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeWaitHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeAccessTokenHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeAccessTokenHandle InvalidHandle 'get ' : 
    Boolean IsInvalid 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_InvalidHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeLsaLogonProcessHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeBuffer
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeBuffer
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeProcessHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeThreadHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Runtime.Hosting.StrongNameHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    StrongNameErrorInfo(): PrivateScope, Public, Static, HideBySig
    StrongNameFreeBuffer(IntPtr): PrivateScope, Public, Static, HideBySig
    StrongNameGetPublicKey(String, IntPtr, Int32, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameKeyDelete(String): PrivateScope, Public, Static, HideBySig
    StrongNameKeyGen(String, Int32, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameKeyInstall(String, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureGeneration(String, String, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureGeneration(String, String, IntPtr, Int32, IntPtr&, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureSize(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureVerification(String, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureVerificationEx(String, Boolean, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameTokenFromPublicKey(IntPtr, Int32, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureSize(Byte[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameTokenFromPublicKey(Byte[], Int32, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameGetPublicKey(String, Byte[], Int32, IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    StrongNameKeyInstall(String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureGeneration(String, String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    StrongNameSignatureGeneration(String, String, Byte[], Int32, IntPtr&, Int32&(Out)): PrivateScope, Public, Static, HideBySig
Interface Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetHashFromAssemblyFile(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromAssemblyFileW(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromBlob(IntPtr(In), Int32(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromFile(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromFileW(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromHandle(IntPtr(In), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameCompareAssemblies(String(In, HasFieldMarshal), String(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameFreeBuffer(IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetBlob(String(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetBlobFromImage(IntPtr(In), Int32(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetPublicKey(String(In, HasFieldMarshal), IntPtr(In), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameHashSize(Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyDelete(String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyGen(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyGenEx(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyInstall(String(In, HasFieldMarshal), IntPtr(In), Int32(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureGeneration(String(In, HasFieldMarshal), String(In, HasFieldMarshal), IntPtr(In), Int32(In, HasFieldMarshal), IntPtr(In, Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureGenerationEx(String(In, HasFieldMarshal), String(In, HasFieldMarshal), IntPtr(In), Int32(In, HasFieldMarshal), IntPtr(In, Out), Int32&(Out, HasFieldMarshal), Int32(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureSize(IntPtr(In), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerification(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerificationEx(String(In, HasFieldMarshal), Boolean(In, HasFieldMarshal), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerificationFromImage(IntPtr(In), Int32(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromAssembly(String(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromAssemblyEx(String(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromPublicKey(IntPtr(In), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.Runtime.Hosting.IClrStrongName: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetHashFromAssemblyFile(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromAssemblyFileW(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromBlob(IntPtr(In), Int32(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromFile(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromFileW(String(In, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashFromHandle(IntPtr(In), Int32&(In, Out, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameCompareAssemblies(String(In, HasFieldMarshal), String(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameFreeBuffer(IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetBlob(String(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetBlobFromImage(IntPtr(In), Int32(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32&(In, Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameGetPublicKey(String(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameHashSize(Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyDelete(String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyGen(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyGenEx(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameKeyInstall(String(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureGeneration(String(In, HasFieldMarshal), String(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr(In, Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureGenerationEx(String(In, HasFieldMarshal), String(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr(In, Out), Int32&(Out, HasFieldMarshal), Int32(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureSize(Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerification(String(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerificationEx(String(In, HasFieldMarshal), Boolean(In, HasFieldMarshal), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameSignatureVerificationFromImage(IntPtr(In), Int32(In, HasFieldMarshal), Int32(In, HasFieldMarshal), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromAssembly(String(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromAssemblyEx(String(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StrongNameTokenFromPublicKey(Byte[](In, HasFieldMarshal), Int32(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.Reflection.ReflectionExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsEnum(Type): PrivateScope, Public, Static, HideBySig
    IsAbstract(Type): PrivateScope, Public, Static, HideBySig
    IsSealed(Type): PrivateScope, Public, Static, HideBySig
    BaseType(Type): PrivateScope, Public, Static, HideBySig
    Assembly(Type): PrivateScope, Public, Static, HideBySig
    GetTypeCode(Type): PrivateScope, Public, Static, HideBySig
    ReflectionOnly(Assembly): PrivateScope, Public, Static, HideBySig
Interface Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import, WindowsRuntime
  Methods:
    add_TracingStatusChanged(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceOperationCreation(CausalityTraceLevel, CausalitySource, Guid, UInt64, String, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceOperationCompletion(CausalityTraceLevel, CausalitySource, Guid, UInt64, AsyncCausalityStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceOperationRelation(CausalityTraceLevel, CausalitySource, Guid, UInt64, CausalityRelation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceSynchronousWorkStart(CausalityTraceLevel, CausalitySource, Guid, UInt64, CausalitySynchronousWork): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TraceSynchronousWorkCompletion(CausalityTraceLevel, CausalitySource, CausalitySynchronousWork): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    remove_TracingStatusChanged(EventRegistrationToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import, WindowsRuntime
  Properties:
    Boolean Enabled 'get ' : 
    Windows.Foundation.Diagnostics.CausalityTraceLevel TraceLevel 'get ' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TraceLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs: AutoLayout, AnsiClass, Class, Sealed, Import, WindowsRuntime, BeforeFieldInit
  :System.Runtime.InteropServices.WindowsRuntime.RuntimeClass
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs
  Properties:
    Boolean Enabled 'get ' : 
    Windows.Foundation.Diagnostics.CausalityTraceLevel TraceLevel 'get ' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TraceLevel(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Windows.Foundation.Diagnostics.CausalityRelation: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Windows.Foundation.Diagnostics.CausalityRelation AssignDelegate = 0 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityRelation Join = 1 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityRelation Choice = 2 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityRelation Cancel = 3 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityRelation Error = 4 : Public, Static, Literal, HasDefault
Struct Windows.Foundation.Diagnostics.CausalitySource: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Windows.Foundation.Diagnostics.CausalitySource Application = 0 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalitySource Library = 1 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalitySource System = 2 : Public, Static, Literal, HasDefault
Struct Windows.Foundation.Diagnostics.CausalitySynchronousWork: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Windows.Foundation.Diagnostics.CausalitySynchronousWork CompletionNotification = 0 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalitySynchronousWork ProgressNotification = 1 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalitySynchronousWork Execution = 2 : Public, Static, Literal, HasDefault
Struct Windows.Foundation.Diagnostics.CausalityTraceLevel: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Windows.Foundation.Diagnostics.CausalityTraceLevel Required = 0 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityTraceLevel Important = 1 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.CausalityTraceLevel Verbose = 2 : Public, Static, Literal, HasDefault
Struct Windows.Foundation.Diagnostics.AsyncCausalityStatus: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Windows.Foundation.Diagnostics.AsyncCausalityStatus Canceled = 2 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.AsyncCausalityStatus Completed = 1 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.AsyncCausalityStatus Error = 3 : Public, Static, Literal, HasDefault
    Windows.Foundation.Diagnostics.AsyncCausalityStatus Started = 0 : Public, Static, Literal, HasDefault
Class System.AggregateException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Exception]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[System.Exception]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Runtime.ExceptionServices.ExceptionDispatchInfo]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[System.Runtime.ExceptionServices.ExceptionDispatchInfo]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Exception] InnerExceptions 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    GetBaseException(): PrivateScope, Public, Virtual, HideBySig
    get_InnerExceptions(): PrivateScope, Public, HideBySig, SpecialName
    Handle(Func`2): PrivateScope, Public, HideBySig
    Flatten(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.AppContext: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String BaseDirectory 'get ' : 
    System.String TargetFrameworkName 'get ' : 
  Methods:
    TryGetSwitch(String, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
    get_BaseDirectory(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TargetFrameworkName(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetData(String): PrivateScope, Public, Static, HideBySig
    SetSwitch(String, Boolean): PrivateScope, Public, Static, HideBySig
    DefineSwitchDefault(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    DefineSwitchOverride(String, Boolean): PrivateScope, Assembly, Static, HideBySig
Class System.AppContextDefaultValues: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String SwitchNoAsyncCurrentCulture : Assembly, Static, InitOnly
    System.String SwitchEnforceJapaneseEraYearRanges : Assembly, Static, InitOnly
    System.String SwitchFormatJapaneseFirstYearAsANumber : Assembly, Static, InitOnly
    System.String SwitchEnforceLegacyJapaneseDateParsing : Assembly, Static, InitOnly
    System.String SwitchThrowExceptionIfDisposedCancellationTokenSource : Assembly, Static, InitOnly
    System.String SwitchPreserveEventListnerObjectIdentity : Assembly, Static, InitOnly
    System.String SwitchUseLegacyPathHandling : Assembly, Static, InitOnly
    System.String SwitchBlockLongPaths : Assembly, Static, InitOnly
    System.String SwitchDoNotAddrOfCspParentWindowHandle : Assembly, Static, InitOnly
    System.String SwitchSetActorAsReferenceWhenCopyingClaimsIdentity : Assembly, Static, InitOnly
    System.String SwitchIgnorePortablePDBsInStackTraces : Assembly, Static, InitOnly
    System.String SwitchUseNewMaxArraySize : Assembly, Static, InitOnly
    System.String SwitchUseNetCoreTimer : Assembly, Static, InitOnly
  Methods:
    PopulateDefaultValues(): PrivateScope, Public, Static, HideBySig
    TryGetSwitchOverride(String, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
Class System.AppContextSwitches: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Properties:
    Boolean NoAsyncCurrentCulture 'get ' : 
    Boolean EnforceJapaneseEraYearRanges 'get ' : 
    Boolean FormatJapaneseFirstYearAsANumber 'get ' : 
    Boolean EnforceLegacyJapaneseDateParsing 'get ' : 
    Boolean ThrowExceptionIfDisposedCancellationTokenSource 'get ' : 
    Boolean PreserveEventListnerObjectIdentity 'get ' : 
    Boolean UseLegacyPathHandling 'get ' : 
    Boolean BlockLongPaths 'get ' : 
    Boolean SetActorAsReferenceWhenCopyingClaimsIdentity 'get ' : 
    Boolean DoNotAddrOfCspParentWindowHandle 'get ' : 
    Boolean IgnorePortablePDBsInStackTraces 'get ' : 
    Boolean UseNewMaxArraySize 'get ' : 
    Boolean UseNetCoreTimer 'get ' : 
  Methods:
    get_ThrowExceptionIfDisposedCancellationTokenSource(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCachedSwitchValue(String, Int32&): PrivateScope, Assembly, Static, HideBySig
    get_NoAsyncCurrentCulture(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnforceJapaneseEraYearRanges(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FormatJapaneseFirstYearAsANumber(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EnforceLegacyJapaneseDateParsing(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PreserveEventListnerObjectIdentity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseLegacyPathHandling(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlockLongPaths(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SetActorAsReferenceWhenCopyingClaimsIdentity(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DoNotAddrOfCspParentWindowHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IgnorePortablePDBsInStackTraces(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseNewMaxArraySize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UseNetCoreTimer(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Object: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object, Object): PrivateScope, Public, Static, HideBySig
    ReferenceEquals(Object, Object): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetType(): PrivateScope, Public, HideBySig
Class System.__Canon: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface System.ICloneable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Action`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`4[T1,T2,T3,T4]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`1[TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`2[T,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`3[T1,T2,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`4[T1,T2,T3,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`5[T1,T2,T3,T4,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`5[T1,T2,T3,T4,T5]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`6[T1,T2,T3,T4,T5,T6]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`7[T1,T2,T3,T4,T5,T6,T7]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`8[T1,T2,T3,T4,T5,T6,T7,T8]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`6[T1,T2,T3,T4,T5,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`7[T1,T2,T3,T4,T5,T6,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`8[T1,T2,T3,T4,T5,T6,T7,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`9[T1,T2,T3,T4,T5,T6,T7,T8,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1,  Contravariant
  Type parameter: T2,  Contravariant
  Type parameter: T3,  Contravariant
  Type parameter: T4,  Contravariant
  Type parameter: T5,  Contravariant
  Type parameter: T6,  Contravariant
  Type parameter: T7,  Contravariant
  Type parameter: T8,  Contravariant
  Type parameter: TResult,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4, T5, T6, T7, T8): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, T5, T6, T7, T8, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Comparison`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Converter`2[TInput,TOutput]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: TInput,  Contravariant
  Type parameter: TOutput,  Covariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(TInput): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(TInput, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Predicate`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Array: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
    System.Collections.IStructuralComparable
    System.Collections.IStructuralEquatable
  Fields:
    Int32 MaxArrayLength = 2146435071 : Assembly, Static, Literal, HasDefault
    Int32 MaxByteArrayLength = 2147483591 : Assembly, Static, Literal, HasDefault
  Properties:
    Int32 Length 'get ' : 
    Int64 LongLength 'get ' : 
    Int32 Rank 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
  Methods:
    AsReadOnly(T[]): PrivateScope, Public, Static, HideBySig
    Resize(T[]&, Int32): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int32): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int32[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int64[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Int32[], Int32[]): PrivateScope, Public, Static, HideBySig
    UnsafeCreateInstance(Type, Int32): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    UnsafeCreateInstance(Type, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    UnsafeCreateInstance(Type, Int32[]): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    UnsafeCreateInstance(Type, Int32[], Int32[]): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    Copy(Array, Array, Int32): PrivateScope, Public, Static, HideBySig
    Copy(Array, Int32, Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Copy(Array, Int32, Array, Int32, Int32, Boolean): PrivateScope, Assembly, Static, HideBySig
    ConstrainedCopy(Array, Int32, Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Copy(Array, Array, Int64): PrivateScope, Public, Static, HideBySig
    Copy(Array, Int64, Array, Int64, Int64): PrivateScope, Public, Static, HideBySig
    Clear(Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetValue(Int32[]): PrivateScope, Public, HideBySig
    GetValue(Int32): PrivateScope, Public, HideBySig
    GetValue(Int32, Int32): PrivateScope, Public, HideBySig
    GetValue(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetValue(Int64): PrivateScope, Public, HideBySig
    GetValue(Int64, Int64): PrivateScope, Public, HideBySig
    GetValue(Int64, Int64, Int64): PrivateScope, Public, HideBySig
    GetValue(Int64[]): PrivateScope, Public, HideBySig
    SetValue(Object, Int32): PrivateScope, Public, HideBySig
    SetValue(Object, Int32, Int32): PrivateScope, Public, HideBySig
    SetValue(Object, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetValue(Object, Int32[]): PrivateScope, Public, HideBySig
    SetValue(Object, Int64): PrivateScope, Public, HideBySig
    SetValue(Object, Int64, Int64): PrivateScope, Public, HideBySig
    SetValue(Object, Int64, Int64, Int64): PrivateScope, Public, HideBySig
    SetValue(Object, Int64[]): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_LongLength(): PrivateScope, Public, HideBySig, SpecialName
    GetLength(Int32): PrivateScope, Public, HideBySig
    GetLongLength(Int32): PrivateScope, Public, HideBySig
    get_Rank(): PrivateScope, Public, HideBySig, SpecialName
    GetUpperBound(Int32): PrivateScope, Public, HideBySig
    GetLowerBound(Int32): PrivateScope, Public, HideBySig
    GetDataPtrOffsetInternal(): PrivateScope, Assembly, HideBySig
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CombineHashCodes(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    BinarySearch(Array, Object): PrivateScope, Public, Static, HideBySig
    BinarySearch(Array, Int32, Int32, Object): PrivateScope, Public, Static, HideBySig
    BinarySearch(Array, Object, IComparer): PrivateScope, Public, Static, HideBySig
    BinarySearch(Array, Int32, Int32, Object, IComparer): PrivateScope, Public, Static, HideBySig
    BinarySearch(T[], T): PrivateScope, Public, Static, HideBySig
    BinarySearch(T[], T, IComparer`1): PrivateScope, Public, Static, HideBySig
    BinarySearch(T[], Int32, Int32, T): PrivateScope, Public, Static, HideBySig
    BinarySearch(T[], Int32, Int32, T, IComparer`1): PrivateScope, Public, Static, HideBySig
    ConvertAll(TInput[], Converter`2): PrivateScope, Public, Static, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Array, Int64): PrivateScope, Public, HideBySig
    Empty(): PrivateScope, Public, Static, HideBySig
    Exists(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    Find(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    FindAll(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    FindIndex(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    FindIndex(T[], Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    FindIndex(T[], Int32, Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    FindLast(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    FindLastIndex(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    FindLastIndex(T[], Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    FindLastIndex(T[], Int32, Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    ForEach(T[], Action`1): PrivateScope, Public, Static, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Array, Object): PrivateScope, Public, Static, HideBySig
    IndexOf(Array, Object, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(Array, Object, Int32, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(T[], T): PrivateScope, Public, Static, HideBySig
    IndexOf(T[], T, Int32): PrivateScope, Public, Static, HideBySig
    IndexOf(T[], T, Int32, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Array, Object): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Array, Object, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(Array, Object, Int32, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(T[], T): PrivateScope, Public, Static, HideBySig
    LastIndexOf(T[], T, Int32): PrivateScope, Public, Static, HideBySig
    LastIndexOf(T[], T, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Reverse(Array): PrivateScope, Public, Static, HideBySig
    Reverse(Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Sort(Array): PrivateScope, Public, Static, HideBySig
    Sort(Array, Array): PrivateScope, Public, Static, HideBySig
    Sort(Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Sort(Array, Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Sort(Array, IComparer): PrivateScope, Public, Static, HideBySig
    Sort(Array, Array, IComparer): PrivateScope, Public, Static, HideBySig
    Sort(Array, Int32, Int32, IComparer): PrivateScope, Public, Static, HideBySig
    Sort(Array, Array, Int32, Int32, IComparer): PrivateScope, Public, Static, HideBySig
    Sort(T[]): PrivateScope, Public, Static, HideBySig
    Sort(TKey[], TValue[]): PrivateScope, Public, Static, HideBySig
    Sort(T[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Sort(TKey[], TValue[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    Sort(T[], IComparer`1): PrivateScope, Public, Static, HideBySig
    Sort(TKey[], TValue[], IComparer`1): PrivateScope, Public, Static, HideBySig
    Sort(T[], Int32, Int32, IComparer`1): PrivateScope, Public, Static, HideBySig
    Sort(TKey[], TValue[], Int32, Int32, IComparer`1): PrivateScope, Public, Static, HideBySig
    Sort(T[], Comparison`1): PrivateScope, Public, Static, HideBySig
    TrueForAll(T[], Predicate`1): PrivateScope, Public, Static, HideBySig
    Initialize(): PrivateScope, Public, HideBySig
Class System.SZArrayHelper: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Methods:
    GetEnumerator(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Assembly, HideBySig
    get_Item(Int32): PrivateScope, Assembly, HideBySig
    set_Item(Int32, T): PrivateScope, Assembly, HideBySig
Struct System.ArraySegment`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IList`1[T]
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Collections.Generic.IReadOnlyList`1[T]
    System.Collections.Generic.IReadOnlyCollection`1[T]
  Properties:
    T[] Array  'get ' : 
    Int32 Offset 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ArraySegment`1): PrivateScope, Public, HideBySig
    op_Equality(ArraySegment`1, ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ArraySegment`1, ArraySegment`1): PrivateScope, Public, Static, HideBySig, SpecialName
Interface System.IComparable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CompareTo(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IComparable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Methods:
    CompareTo(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IEquatable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Methods:
    Equals(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.ThrowHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ThrowArgumentOutOfRangeException(): PrivateScope, Assembly, Static, HideBySig
    ThrowWrongValueTypeArgumentException(Object, Type): PrivateScope, Assembly, Static, HideBySig
    ThrowKeyNotFoundException(): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentNullException(ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException(ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentOutOfRangeException(ExceptionArgument, ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowInvalidOperationException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowNotSupportedException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    IfNullAndNullsAreIllegalThenThrow(Object, ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    GetArgumentName(ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowWrongKeyTypeArgumentException(Object, Type): PrivateScope, Assembly, Static, HideBySig
    ThrowArgumentException(ExceptionResource, ExceptionArgument): PrivateScope, Assembly, Static, HideBySig
    ThrowSerializationException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowSecurityException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowUnauthorizedAccessException(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    ThrowObjectDisposedException(String, ExceptionResource): PrivateScope, Assembly, Static, HideBySig
    GetResourceName(ExceptionResource): PrivateScope, Assembly, Static, HideBySig
Struct System.ExceptionArgument: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ExceptionArgument obj = 0 : Public, Static, Literal, HasDefault
    System.ExceptionArgument dictionary = 1 : Public, Static, Literal, HasDefault
    System.ExceptionArgument dictionaryCreationThreshold = 2 : Public, Static, Literal, HasDefault
    System.ExceptionArgument array = 3 : Public, Static, Literal, HasDefault
    System.ExceptionArgument info = 4 : Public, Static, Literal, HasDefault
    System.ExceptionArgument key = 5 : Public, Static, Literal, HasDefault
    System.ExceptionArgument collection = 6 : Public, Static, Literal, HasDefault
    System.ExceptionArgument list = 7 : Public, Static, Literal, HasDefault
    System.ExceptionArgument match = 8 : Public, Static, Literal, HasDefault
    System.ExceptionArgument converter = 9 : Public, Static, Literal, HasDefault
    System.ExceptionArgument queue = 10 : Public, Static, Literal, HasDefault
    System.ExceptionArgument stack = 11 : Public, Static, Literal, HasDefault
    System.ExceptionArgument capacity = 12 : Public, Static, Literal, HasDefault
    System.ExceptionArgument index = 13 : Public, Static, Literal, HasDefault
    System.ExceptionArgument startIndex = 14 : Public, Static, Literal, HasDefault
    System.ExceptionArgument value = 15 : Public, Static, Literal, HasDefault
    System.ExceptionArgument count = 16 : Public, Static, Literal, HasDefault
    System.ExceptionArgument arrayIndex = 17 : Public, Static, Literal, HasDefault
    System.ExceptionArgument name = 18 : Public, Static, Literal, HasDefault
    System.ExceptionArgument mode = 19 : Public, Static, Literal, HasDefault
    System.ExceptionArgument item = 20 : Public, Static, Literal, HasDefault
    System.ExceptionArgument options = 21 : Public, Static, Literal, HasDefault
    System.ExceptionArgument view = 22 : Public, Static, Literal, HasDefault
    System.ExceptionArgument sourceBytesToCopy = 23 : Public, Static, Literal, HasDefault
Struct System.ExceptionResource: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ExceptionResource Argument_ImplementIComparable = 0 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidType = 1 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidArgumentForComparison = 2 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck = 3 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum = 4 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_ArrayPlusOffTooSmall = 5 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_NonZeroLowerBound = 6 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RankMultiDimNotSupported = 7 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegKeyDelHive = 8 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegKeyStrLenBug = 9 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegSetStrArrNull = 10 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegSetMismatchedKind = 11 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegSubKeyAbsent = 12 : Public, Static, Literal, HasDefault
    System.ExceptionResource Arg_RegSubKeyValueAbsent = 13 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_AddingDuplicate = 14 : Public, Static, Literal, HasDefault
    System.ExceptionResource Serialization_InvalidOnDeser = 15 : Public, Static, Literal, HasDefault
    System.ExceptionResource Serialization_MissingKeys = 16 : Public, Static, Literal, HasDefault
    System.ExceptionResource Serialization_NullKey = 17 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidArrayType = 18 : Public, Static, Literal, HasDefault
    System.ExceptionResource NotSupported_KeyCollectionSet = 19 : Public, Static, Literal, HasDefault
    System.ExceptionResource NotSupported_ValueCollectionSet = 20 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_SmallCapacity = 21 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_Index = 22 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidOffLen = 23 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_ItemNotExist = 24 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_Count = 25 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_InvalidThreshold = 26 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_ListInsert = 27 : Public, Static, Literal, HasDefault
    System.ExceptionResource NotSupported_ReadOnlyCollection = 28 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue = 29 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EmptyQueue = 30 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EnumOpCantHappen = 31 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EnumFailedVersion = 32 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EmptyStack = 33 : Public, Static, Literal, HasDefault
    System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection = 34 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EnumNotStarted = 35 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_EnumEnded = 36 : Public, Static, Literal, HasDefault
    System.ExceptionResource NotSupported_SortedListNestedWrite = 37 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_NoValue = 38 : Public, Static, Literal, HasDefault
    System.ExceptionResource InvalidOperation_RegRemoveSubKey = 39 : Public, Static, Literal, HasDefault
    System.ExceptionResource Security_RegistryPermission = 40 : Public, Static, Literal, HasDefault
    System.ExceptionResource UnauthorizedAccess_RegistryNoWrite = 41 : Public, Static, Literal, HasDefault
    System.ExceptionResource ObjectDisposed_RegKeyClosed = 42 : Public, Static, Literal, HasDefault
    System.ExceptionResource NotSupported_InComparableType = 43 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidRegistryOptionsCheck = 44 : Public, Static, Literal, HasDefault
    System.ExceptionResource Argument_InvalidRegistryViewCheck = 45 : Public, Static, Literal, HasDefault
Interface System.ITupleInternal: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Runtime.CompilerServices.ITuple
  Methods:
    ToString(StringBuilder): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashCode(IEqualityComparer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Tuple: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Create(T1): PrivateScope, Public, Static, HideBySig
    Create(T1, T2): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6, T7, T8): PrivateScope, Public, Static, HideBySig
    CombineHashCodes(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Tuple`1[T1]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
    Void .ctor(T1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
    Void .ctor(T1, T2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
    Void .ctor(T1, T2, T3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`4[T1,T2,T3,T4]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
    Void .ctor(T1, T2, T3, T4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
    T4 Item4   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    get_Item4(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`5[T1,T2,T3,T4,T5]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
    Void .ctor(T1, T2, T3, T4, T5): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
    T4 Item4   'get ' : 
    T5 Item5   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    get_Item4(): PrivateScope, Public, HideBySig, SpecialName
    get_Item5(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`6[T1,T2,T3,T4,T5,T6]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
    Void .ctor(T1, T2, T3, T4, T5, T6): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
    T4 Item4   'get ' : 
    T5 Item5   'get ' : 
    T6 Item6   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    get_Item4(): PrivateScope, Public, HideBySig, SpecialName
    get_Item5(): PrivateScope, Public, HideBySig, SpecialName
    get_Item6(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`7[T1,T2,T3,T4,T5,T6,T7]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  Type parameter: T7
    Void .ctor(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
    T4 Item4   'get ' : 
    T5 Item5   'get ' : 
    T6 Item6   'get ' : 
    T7 Item7   'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    get_Item4(): PrivateScope, Public, HideBySig, SpecialName
    get_Item5(): PrivateScope, Public, HideBySig, SpecialName
    get_Item6(): PrivateScope, Public, HideBySig, SpecialName
    get_Item7(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Tuple`8[T1,T2,T3,T4,T5,T6,T7,TRest]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  Type parameter: T7
  Type parameter: TRest
    Void .ctor(T1, T2, T3, T4, T5, T6, T7, TRest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.ITupleInternal
    System.Runtime.CompilerServices.ITuple
  Properties:
    T1 Item1   'get ' : 
    T2 Item2   'get ' : 
    T3 Item3   'get ' : 
    T4 Item4   'get ' : 
    T5 Item5   'get ' : 
    T6 Item6   'get ' : 
    T7 Item7   'get ' : 
    TRest Rest 'get ' : 
  Methods:
    get_Item1(): PrivateScope, Public, HideBySig, SpecialName
    get_Item2(): PrivateScope, Public, HideBySig, SpecialName
    get_Item3(): PrivateScope, Public, HideBySig, SpecialName
    get_Item4(): PrivateScope, Public, HideBySig, SpecialName
    get_Item5(): PrivateScope, Public, HideBySig, SpecialName
    get_Item6(): PrivateScope, Public, HideBySig, SpecialName
    get_Item7(): PrivateScope, Public, HideBySig, SpecialName
    get_Rest(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Interface System.IValueTupleInternal: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Runtime.CompilerServices.ITuple
  Methods:
    GetHashCode(IEqualityComparer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToStringEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.ValueTuple: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IEquatable`1[System.ValueTuple]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Create(): PrivateScope, Public, Static, HideBySig
    Create(T1): PrivateScope, Public, Static, HideBySig
    Create(T1, T2): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, Static, HideBySig
    Create(T1, T2, T3, T4, T5, T6, T7, T8): PrivateScope, Public, Static, HideBySig
    CombineHashCodes(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    CombineHashCodes(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Struct System.ValueTuple`1[T1]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  :System.ValueType
    Void .ctor(T1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`1[T1]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`1[T1]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  :System.ValueType
    Void .ctor(T1, T2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`2[T1,T2]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`2[T1,T2]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  :System.ValueType
    Void .ctor(T1, T2, T3): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`3[T1,T2,T3]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`3[T1,T2,T3]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`3): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`4[T1,T2,T3,T4]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  :System.ValueType
    Void .ctor(T1, T2, T3, T4): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`4[T1,T2,T3,T4]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`4[T1,T2,T3,T4]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
    T4 Item4 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`4): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`5[T1,T2,T3,T4,T5]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`5[T1,T2,T3,T4,T5]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`5[T1,T2,T3,T4,T5]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
    T4 Item4 : Public
    T5 Item5 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`5): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`5): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`6[T1,T2,T3,T4,T5,T6]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5, T6): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`6[T1,T2,T3,T4,T5,T6]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`6[T1,T2,T3,T4,T5,T6]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
    T4 Item4 : Public
    T5 Item5 : Public
    T6 Item6 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`6): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`6): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`7[T1,T2,T3,T4,T5,T6,T7]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  Type parameter: T7
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5, T6, T7): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`7[T1,T2,T3,T4,T5,T6,T7]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`7[T1,T2,T3,T4,T5,T6,T7]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
    T4 Item4 : Public
    T5 Item5 : Public
    T6 Item6 : Public
    T7 Item7 : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`7): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`7): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.ValueTuple`8[T1,T2,T3,T4,T5,T6,T7,TRest]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: T5
  Type parameter: T6
  Type parameter: T7
  Type parameter: TRest, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(T1, T2, T3, T4, T5, T6, T7, TRest): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.ValueTuple`8[T1,T2,T3,T4,T5,T6,T7,TRest]]
    System.Collections.IStructuralEquatable
    System.Collections.IStructuralComparable
    System.IComparable
    System.IComparable`1[System.ValueTuple`8[T1,T2,T3,T4,T5,T6,T7,TRest]]
    System.IValueTupleInternal
    System.Runtime.CompilerServices.ITuple
  Fields:
    T1 Item1 : Public
    T2 Item2 : Public
    T3 Item3 : Public
    T4 Item4 : Public
    T5 Item5 : Public
    T6 Item6 : Public
    T7 Item7 : Public
    TRest Rest : Public
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ValueTuple`8): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(ValueTuple`8): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.TupleExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Deconstruct(Tuple`1, T1&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`2, T1&(Out), T2&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`3, T1&(Out), T2&(Out), T3&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`4, T1&(Out), T2&(Out), T3&(Out), T4&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`5, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`6, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`7, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out), T17&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out), T17&(Out), T18&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out), T17&(Out), T18&(Out), T19&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out), T17&(Out), T18&(Out), T19&(Out), T20&(Out)): PrivateScope, Public, Static, HideBySig
    Deconstruct(Tuple`8, T1&(Out), T2&(Out), T3&(Out), T4&(Out), T5&(Out), T6&(Out), T7&(Out), T8&(Out), T9&(Out), T10&(Out), T11&(Out), T12&(Out), T13&(Out), T14&(Out), T15&(Out), T16&(Out), T17&(Out), T18&(Out), T19&(Out), T20&(Out), T21&(Out)): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`1): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`2): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`3): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`4): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`5): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`6): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`7): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToValueTuple(Tuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`1): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`2): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`3): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`4): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`5): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`6): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`7): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
    ToTuple(ValueTuple`8): PrivateScope, Public, Static, HideBySig
Class System.String: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(Char*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char*, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte*, Int32, Int32, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.ICloneable
    System.IConvertible
    System.Collections.IEnumerable
    System.IComparable`1[System.String]
    System.Collections.Generic.IEnumerable`1[System.Char]
    System.IEquatable`1[System.String]
  Fields:
    System.String Empty : Public, Static, InitOnly
  Properties:
    Char FirstChar 'get ' : 
    Char Chars [Int32] 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Chars(Int32): PrivateScope, Public, HideBySig, SpecialName
    StartsWith(String): PrivateScope, Public, HideBySig
    StartsWith(String, StringComparison): PrivateScope, Public, HideBySig
    StartsWith(String, Boolean, CultureInfo): PrivateScope, Public, HideBySig
    Join(String, String[]): PrivateScope, Public, Static, HideBySig
    Join(String, Object[]): PrivateScope, Public, Static, HideBySig
    Join(String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Join(String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    get_FirstChar(): PrivateScope, Assembly, HideBySig, SpecialName
    Join(String, String[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    nativeCompareOrdinalEx(String, Int32, String, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    nativeCompareOrdinalIgnoreCaseWC(String, SByte*): PrivateScope, Assembly, Static, HideBySig
    SmallCharToUpper(String): PrivateScope, Assembly, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(String, StringComparison): PrivateScope, Public, HideBySig
    Equals(String, String): PrivateScope, Public, Static, HideBySig
    Equals(String, String, StringComparison): PrivateScope, Public, Static, HideBySig
    op_Equality(String, String): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(String, String): PrivateScope, Public, Static, HideBySig, SpecialName
    CopyTo(Int32, Char[], Int32, Int32): PrivateScope, Public, HideBySig
    ToCharArray(): PrivateScope, Public, HideBySig
    ToCharArray(Int32, Int32): PrivateScope, Public, HideBySig
    IsNullOrEmpty(String): PrivateScope, Public, Static, HideBySig
    IsNullOrWhiteSpace(String): PrivateScope, Public, Static, HideBySig
    InternalMarvin32HashString(String, Int32, Int64): PrivateScope, Assembly, Static, HideBySig
    UseRandomizedHashing(): PrivateScope, Assembly, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetLegacyNonRandomizedHashCode(): PrivateScope, Assembly, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    Split(Char[]): PrivateScope, Public, HideBySig
    Split(Char[], Int32): PrivateScope, Public, HideBySig
    Split(Char[], StringSplitOptions): PrivateScope, Public, HideBySig
    Split(Char[], Int32, StringSplitOptions): PrivateScope, Public, HideBySig
    SplitInternal(Char[], Int32, StringSplitOptions): PrivateScope, Assembly, HideBySig
    Split(String[], StringSplitOptions): PrivateScope, Public, HideBySig
    Split(String[], Int32, StringSplitOptions): PrivateScope, Public, HideBySig
    Substring(Int32): PrivateScope, Public, HideBySig
    Substring(Int32, Int32): PrivateScope, Public, HideBySig
    Trim(Char[]): PrivateScope, Public, HideBySig
    TrimStart(Char[]): PrivateScope, Public, HideBySig
    TrimEnd(Char[]): PrivateScope, Public, HideBySig
    CreateStringFromEncoding(Byte*, Int32, Encoding): PrivateScope, Assembly, Static, HideBySig
    GetBytesFromEncoding(Byte*, Int32, Encoding): PrivateScope, Assembly, HideBySig
    ConvertToAnsi(Byte*, Int32, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    IsNormalized(): PrivateScope, Public, HideBySig
    IsNormalized(NormalizationForm): PrivateScope, Public, HideBySig
    Normalize(): PrivateScope, Public, HideBySig
    Normalize(NormalizationForm): PrivateScope, Public, HideBySig
    FastAllocateString(Int32): PrivateScope, Assembly, Static, HideBySig
    wstrcpy(Char*, Char*, Int32): PrivateScope, Assembly, Static, HideBySig
    Compare(String, String): PrivateScope, Public, Static, HideBySig
    Compare(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    Compare(String, String, StringComparison): PrivateScope, Public, Static, HideBySig
    Compare(String, String, CultureInfo, CompareOptions): PrivateScope, Public, Static, HideBySig
    Compare(String, String, Boolean, CultureInfo): PrivateScope, Public, Static, HideBySig
    Compare(String, Int32, String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Compare(String, Int32, String, Int32, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    Compare(String, Int32, String, Int32, Int32, Boolean, CultureInfo): PrivateScope, Public, Static, HideBySig
    Compare(String, Int32, String, Int32, Int32, CultureInfo, CompareOptions): PrivateScope, Public, Static, HideBySig
    Compare(String, Int32, String, Int32, Int32, StringComparison): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareOrdinal(String, String): PrivateScope, Public, Static, HideBySig
    CompareOrdinal(String, Int32, String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    EndsWith(String): PrivateScope, Public, HideBySig
    EndsWith(String, StringComparison): PrivateScope, Public, HideBySig
    EndsWith(String, Boolean, CultureInfo): PrivateScope, Public, HideBySig
    EndsWith(Char): PrivateScope, Assembly, HideBySig
    IndexOf(Char): PrivateScope, Public, HideBySig
    IndexOf(Char, Int32): PrivateScope, Public, HideBySig
    IndexOf(Char, Int32, Int32): PrivateScope, Public, HideBySig
    IndexOfAny(Char[]): PrivateScope, Public, HideBySig
    IndexOfAny(Char[], Int32): PrivateScope, Public, HideBySig
    IndexOfAny(Char[], Int32, Int32): PrivateScope, Public, HideBySig
    IndexOf(String): PrivateScope, Public, HideBySig
    IndexOf(String, Int32): PrivateScope, Public, HideBySig
    IndexOf(String, Int32, Int32): PrivateScope, Public, HideBySig
    IndexOf(String, StringComparison): PrivateScope, Public, HideBySig
    IndexOf(String, Int32, StringComparison): PrivateScope, Public, HideBySig
    IndexOf(String, Int32, Int32, StringComparison): PrivateScope, Public, HideBySig
    LastIndexOf(Char): PrivateScope, Public, HideBySig
    LastIndexOf(Char, Int32): PrivateScope, Public, HideBySig
    LastIndexOf(Char, Int32, Int32): PrivateScope, Public, HideBySig
    LastIndexOfAny(Char[]): PrivateScope, Public, HideBySig
    LastIndexOfAny(Char[], Int32): PrivateScope, Public, HideBySig
    LastIndexOfAny(Char[], Int32, Int32): PrivateScope, Public, HideBySig
    LastIndexOf(String): PrivateScope, Public, HideBySig
    LastIndexOf(String, Int32): PrivateScope, Public, HideBySig
    LastIndexOf(String, Int32, Int32): PrivateScope, Public, HideBySig
    LastIndexOf(String, StringComparison): PrivateScope, Public, HideBySig
    LastIndexOf(String, Int32, StringComparison): PrivateScope, Public, HideBySig
    LastIndexOf(String, Int32, Int32, StringComparison): PrivateScope, Public, HideBySig
    PadLeft(Int32): PrivateScope, Public, HideBySig
    PadLeft(Int32, Char): PrivateScope, Public, HideBySig
    PadRight(Int32): PrivateScope, Public, HideBySig
    PadRight(Int32, Char): PrivateScope, Public, HideBySig
    ToLower(): PrivateScope, Public, HideBySig
    ToLower(CultureInfo): PrivateScope, Public, HideBySig
    ToLowerInvariant(): PrivateScope, Public, HideBySig
    ToUpper(): PrivateScope, Public, HideBySig
    ToUpper(CultureInfo): PrivateScope, Public, HideBySig
    ToUpperInvariant(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Trim(): PrivateScope, Public, HideBySig
    Insert(Int32, String): PrivateScope, Public, HideBySig
    Replace(Char, Char): PrivateScope, Public, HideBySig
    Replace(String, String): PrivateScope, Public, HideBySig
    Remove(Int32, Int32): PrivateScope, Public, HideBySig
    Remove(Int32): PrivateScope, Public, HideBySig
    Format(String, Object): PrivateScope, Public, Static, HideBySig
    Format(String, Object, Object): PrivateScope, Public, Static, HideBySig
    Format(String, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    Format(String, Object[]): PrivateScope, Public, Static, HideBySig
    Format(IFormatProvider, String, Object): PrivateScope, Public, Static, HideBySig
    Format(IFormatProvider, String, Object, Object): PrivateScope, Public, Static, HideBySig
    Format(IFormatProvider, String, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    Format(IFormatProvider, String, Object[]): PrivateScope, Public, Static, HideBySig
    Copy(String): PrivateScope, Public, Static, HideBySig
    Concat(Object): PrivateScope, Public, Static, HideBySig
    Concat(Object, Object): PrivateScope, Public, Static, HideBySig
    Concat(Object, Object, Object): PrivateScope, Public, Static, HideBySig
    Concat(Object, Object, Object, Object): PrivateScope, Public, Static, HideBySig
    Concat(Object[]): PrivateScope, Public, Static, HideBySig
    Concat(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Concat(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Concat(String, String): PrivateScope, Public, Static, HideBySig
    Concat(String, String, String): PrivateScope, Public, Static, HideBySig
    Concat(String, String, String, String): PrivateScope, Public, Static, HideBySig
    Concat(String[]): PrivateScope, Public, Static, HideBySig
    Intern(String): PrivateScope, Public, Static, HideBySig
    IsInterned(String): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsFastSort(): PrivateScope, Assembly, HideBySig
    IsAscii(): PrivateScope, Assembly, HideBySig
    SetTrailByte(Byte): PrivateScope, Assembly, HideBySig
    TryGetTrailByte(Byte&(Out)): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    InternalCopy(String, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig
Struct System.StringSplitOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.StringSplitOptions None = 0 : Public, Static, Literal, HasDefault
    System.StringSplitOptions RemoveEmptyEntries = 1 : Public, Static, Literal, HasDefault
Class System.StringComparer: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    System.Collections.IComparer
    System.Collections.IEqualityComparer
    System.Collections.Generic.IComparer`1[System.String]
    System.Collections.Generic.IEqualityComparer`1[System.String]
  Properties:
    System.StringComparer InvariantCulture 'get ' : 
    System.StringComparer InvariantCultureIgnoreCase 'get ' : 
    System.StringComparer CurrentCulture 'get ' : 
    System.StringComparer CurrentCultureIgnoreCase 'get ' : 
    System.StringComparer Ordinal 'get ' : 
    System.StringComparer OrdinalIgnoreCase 'get ' : 
  Methods:
    get_InvariantCulture(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InvariantCultureIgnoreCase(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentCulture(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentCultureIgnoreCase(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Ordinal(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OrdinalIgnoreCase(): PrivateScope, Public, Static, HideBySig, SpecialName
    Create(CultureInfo, Boolean): PrivateScope, Public, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashCode(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.CultureAwareComparer: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.StringComparer
    Void .ctor(System.Globalization.CultureInfo, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CompareInfo, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.CompareInfo, System.Globalization.CompareOptions): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IWellKnownStringEqualityComparer
  Methods:
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig
    Equals(String, String): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.CultureAwareRandomizedComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.StringComparer
    Void .ctor(System.Globalization.CompareInfo, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IWellKnownStringEqualityComparer
  Methods:
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig
    Equals(String, String): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.OrdinalComparer: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.StringComparer
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IWellKnownStringEqualityComparer
  Methods:
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig
    Equals(String, String): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.OrdinalRandomizedComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.StringComparer
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IWellKnownStringEqualityComparer
  Methods:
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig
    Equals(String, String): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(String): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Interface System.IWellKnownStringEqualityComparer: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetRandomizedEqualityComparer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEqualityComparerForSerialization(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.StringComparison: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.StringComparison CurrentCulture = 0 : Public, Static, Literal, HasDefault
    System.StringComparison CurrentCultureIgnoreCase = 1 : Public, Static, Literal, HasDefault
    System.StringComparison InvariantCulture = 2 : Public, Static, Literal, HasDefault
    System.StringComparison InvariantCultureIgnoreCase = 3 : Public, Static, Literal, HasDefault
    System.StringComparison Ordinal = 4 : Public, Static, Literal, HasDefault
    System.StringComparison OrdinalIgnoreCase = 5 : Public, Static, Literal, HasDefault
Class System.Exception: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.InteropServices._Exception
  Fields:
    System.String _message : Assembly
    Int32 _HResult : Assembly
  Properties:
    System.String Message 'get ' : 
    System.Collections.IDictionary Data 'get ' : 
    System.Exception InnerException 'get ' : 
    System.Reflection.MethodBase TargetSite 'get ' : 
    System.String StackTrace 'get ' : 
    System.String HelpLink 'get set' : 
    System.String Source 'get set' : 
    UIntPtr IPForWatsonBuckets 'get ' : 
    System.Object WatsonBuckets 'get ' : 
    System.String RemoteStackTrace 'get ' : 
    Int32 HResult 'get set' : 
    Boolean IsTransient 'get ' : 
  Events:
    System.EventHandler`1[System.Runtime.Serialization.SafeSerializationEventArgs] SerializeObjectState: 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Data(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddExceptionDataForRestrictedErrorInfo(String, String, String, Object, Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    TryGetRestrictedLanguageErrorObject(Object&(Out)): PrivateScope, Assembly, HideBySig
    GetBaseException(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_InnerException(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TargetSite(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StackTrace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetErrorCode(Int32): PrivateScope, Assembly, HideBySig
    get_HelpLink(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HelpLink(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Source(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Source(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PrepForRemoting(): PrivateScope, Assembly, HideBySig
    InternalPreserveStackTrace(): PrivateScope, Assembly, HideBySig
    get_IPForWatsonBuckets(): PrivateScope, Assembly, HideBySig, SpecialName
    get_WatsonBuckets(): PrivateScope, Assembly, HideBySig, SpecialName
    get_RemoteStackTrace(): PrivateScope, Assembly, HideBySig, SpecialName
    SaveStackTracesFromDeepCopy(Exception, Object, Object): PrivateScope, Assembly, Static, HideBySig
    DeepCopyStackTrace(Object): PrivateScope, Assembly, HideBySig
    DeepCopyDynamicMethods(Object): PrivateScope, Assembly, HideBySig
    GetStackTracesDeepCopy(Object&(Out), Object&(Out)): PrivateScope, Assembly, HideBySig
    RestoreExceptionDispatchInfo(ExceptionDispatchInfo): PrivateScope, Assembly, HideBySig
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    InternalToString(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsTransient(): PrivateScope, Assembly, HideBySig, SpecialName
    GetMessageFromNativeResources(ExceptionMessageKind): PrivateScope, Assembly, Static, HideBySig
Struct System.DateTime: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, System.DateTimeKind, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, System.Globalization.Calendar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, System.Globalization.Calendar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, System.Globalization.Calendar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, System.Globalization.Calendar, System.DateTimeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.Runtime.Serialization.ISerializable
    System.IComparable`1[System.DateTime]
    System.IEquatable`1[System.DateTime]
  Fields:
    Boolean s_isLeapSecondsSupportedSystem : Assembly, Static, InitOnly
    System.DateTime MinValue : Public, Static, InitOnly
    System.DateTime MaxValue : Public, Static, InitOnly
    Int32 DaysTo1970 = 719162 : Assembly, Static, Literal, HasDefault
    Int64 MinTicks = 0 : Assembly, Static, Literal, HasDefault
    Int64 MaxTicks = 3155378975999999999 : Assembly, Static, Literal, HasDefault
  Properties:
    Int64 InternalTicks 'get ' : 
    System.DateTime Date 'get ' : 
    Int32 Day  'get ' : 
    System.DayOfWeek DayOfWeek 'get ' : 
    Int32 DayOfYear 'get ' : 
    Int32 Hour 'get ' : 
    System.DateTimeKind Kind 'get ' : 
    Int32 Millisecond 'get ' : 
    Int32 Minute 'get ' : 
    Int32 Month 'get ' : 
    System.DateTime Now 'get ' : 
    System.DateTime UtcNow 'get ' : 
    Int32 Second 'get ' : 
    Int64 Ticks 'get ' : 
    System.TimeSpan TimeOfDay 'get ' : 
    System.DateTime Today 'get ' : 
    Int32 Year 'get ' : 
  Methods:
    get_InternalTicks(): PrivateScope, Assembly, HideBySig, SpecialName
    Add(TimeSpan): PrivateScope, Public, HideBySig
    AddDays(Double): PrivateScope, Public, HideBySig
    AddHours(Double): PrivateScope, Public, HideBySig
    AddMilliseconds(Double): PrivateScope, Public, HideBySig
    AddMinutes(Double): PrivateScope, Public, HideBySig
    AddMonths(Int32): PrivateScope, Public, HideBySig
    AddSeconds(Double): PrivateScope, Public, HideBySig
    AddTicks(Int64): PrivateScope, Public, HideBySig
    AddYears(Int32): PrivateScope, Public, HideBySig
    Compare(DateTime, DateTime): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DaysInMonth(Int32, Int32): PrivateScope, Public, Static, HideBySig
    DoubleDateToTicks(Double): PrivateScope, Assembly, Static, HideBySig
    LegacyParseMode(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    EnableAmPmParseAdjustment(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DateTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(DateTime, DateTime): PrivateScope, Public, Static, HideBySig
    FromBinary(Int64): PrivateScope, Public, Static, HideBySig
    FromBinaryRaw(Int64): PrivateScope, Assembly, Static, HideBySig
    FromFileTime(Int64): PrivateScope, Public, Static, HideBySig
    FromFileTimeUtc(Int64): PrivateScope, Public, Static, HideBySig
    FromOADate(Double): PrivateScope, Public, Static, HideBySig
    IsDaylightSavingTime(): PrivateScope, Public, HideBySig
    SpecifyKind(DateTime, DateTimeKind): PrivateScope, Public, Static, HideBySig
    ToBinary(): PrivateScope, Public, HideBySig
    ToBinaryRaw(): PrivateScope, Assembly, HideBySig
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    GetDatePart(Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    get_DayOfWeek(): PrivateScope, Public, HideBySig, SpecialName
    get_DayOfYear(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    IsAmbiguousDaylightSavingTime(): PrivateScope, Assembly, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    get_Millisecond(): PrivateScope, Public, HideBySig, SpecialName
    get_Minute(): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    get_Now(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UtcNow(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetSystemTimeAsFileTime(): PrivateScope, Assembly, Static, HideBySig
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeOfDay(): PrivateScope, Public, HideBySig, SpecialName
    get_Today(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Year(): PrivateScope, Public, HideBySig, SpecialName
    IsLeapYear(Int32): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String[], IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    Subtract(DateTime): PrivateScope, Public, HideBySig
    Subtract(TimeSpan): PrivateScope, Public, HideBySig
    ToOADate(): PrivateScope, Public, HideBySig
    ToFileTime(): PrivateScope, Public, HideBySig
    ToFileTimeUtc(): PrivateScope, Public, HideBySig
    ToLocalTime(): PrivateScope, Public, HideBySig
    ToLocalTime(Boolean): PrivateScope, Assembly, HideBySig
    ToLongDateString(): PrivateScope, Public, HideBySig
    ToLongTimeString(): PrivateScope, Public, HideBySig
    ToShortDateString(): PrivateScope, Public, HideBySig
    ToShortTimeString(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUniversalTime(): PrivateScope, Public, HideBySig
    TryParse(String, DateTime&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, IFormatProvider, DateTimeStyles, DateTime&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime&(Out)): PrivateScope, Public, Static, HideBySig
    op_Addition(DateTime, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DateTime, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(DateTime, DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDateTimeFormats(): PrivateScope, Public, HideBySig
    GetDateTimeFormats(IFormatProvider): PrivateScope, Public, HideBySig
    GetDateTimeFormats(Char): PrivateScope, Public, HideBySig
    GetDateTimeFormats(Char, IFormatProvider): PrivateScope, Public, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryCreate(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    ValidateSystemTime(FullSystemTime&, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetSystemTimeWithLeapSecondsHandling(FullSystemTime&): PrivateScope, Assembly, Static, HideBySig
    IsLeapSecondsSupportedSystem(): PrivateScope, Assembly, Static, HideBySig
    SystemFileTimeToSystemTime(Int64, FullSystemTime&): PrivateScope, Assembly, Static, HideBySig
    SystemTimeToSystemFileTime(FullSystemTime&, Int64&): PrivateScope, Assembly, Static, HideBySig
    InternalFromFileTime(Int64): PrivateScope, Assembly, Static, HideBySig
    InternalToFileTime(Int64): PrivateScope, Assembly, Static, HideBySig
    CreateDateTimeFromSystemTime(FullSystemTime&): PrivateScope, Assembly, Static, HideBySig
    IsValidTimeWithLeapSeconds(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind): PrivateScope, Assembly, Static, HideBySig
Struct System.DateTimeKind: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.DateTimeKind Unspecified = 0 : Public, Static, Literal, HasDefault
    System.DateTimeKind Utc = 1 : Public, Static, Literal, HasDefault
    System.DateTimeKind Local = 2 : Public, Static, Literal, HasDefault
Struct System.DateTimeOffset: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, System.Globalization.Calendar, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IFormattable
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
    System.IComparable`1[System.DateTimeOffset]
    System.IEquatable`1[System.DateTimeOffset]
  Fields:
    System.DateTimeOffset MinValue : Public, Static, InitOnly
    System.DateTimeOffset MaxValue : Public, Static, InitOnly
    Int64 MaxOffset = 504000000000 : Assembly, Static, Literal, HasDefault
    Int64 MinOffset = -504000000000 : Assembly, Static, Literal, HasDefault
  Properties:
    System.DateTimeOffset Now 'get ' : 
    System.DateTimeOffset UtcNow 'get ' : 
    System.DateTime DateTime 'get ' : 
    System.DateTime UtcDateTime 'get ' : 
    System.DateTime LocalDateTime 'get ' : 
    System.DateTime Date 'get ' : 
    Int32 Day  'get ' : 
    System.DayOfWeek DayOfWeek 'get ' : 
    Int32 DayOfYear 'get ' : 
    Int32 Hour 'get ' : 
    Int32 Millisecond 'get ' : 
    Int32 Minute 'get ' : 
    Int32 Month 'get ' : 
    System.TimeSpan Offset 'get ' : 
    Int32 Second 'get ' : 
    Int64 Ticks 'get ' : 
    Int64 UtcTicks 'get ' : 
    System.TimeSpan TimeOfDay 'get ' : 
    Int32 Year 'get ' : 
  Methods:
    get_Now(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UtcNow(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DateTime(): PrivateScope, Public, HideBySig, SpecialName
    get_UtcDateTime(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalDateTime(): PrivateScope, Public, HideBySig, SpecialName
    ToOffset(TimeSpan): PrivateScope, Public, HideBySig
    get_Date(): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    get_DayOfWeek(): PrivateScope, Public, HideBySig, SpecialName
    get_DayOfYear(): PrivateScope, Public, HideBySig, SpecialName
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    get_Millisecond(): PrivateScope, Public, HideBySig, SpecialName
    get_Minute(): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    get_UtcTicks(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeOfDay(): PrivateScope, Public, HideBySig, SpecialName
    get_Year(): PrivateScope, Public, HideBySig, SpecialName
    Add(TimeSpan): PrivateScope, Public, HideBySig
    AddDays(Double): PrivateScope, Public, HideBySig
    AddHours(Double): PrivateScope, Public, HideBySig
    AddMilliseconds(Double): PrivateScope, Public, HideBySig
    AddMinutes(Double): PrivateScope, Public, HideBySig
    AddMonths(Int32): PrivateScope, Public, HideBySig
    AddSeconds(Double): PrivateScope, Public, HideBySig
    AddTicks(Int64): PrivateScope, Public, HideBySig
    AddYears(Int32): PrivateScope, Public, HideBySig
    Compare(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig
    CompareTo(DateTimeOffset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(DateTimeOffset): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    EqualsExact(DateTimeOffset): PrivateScope, Public, HideBySig
    Equals(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig
    FromFileTime(Int64): PrivateScope, Public, Static, HideBySig
    FromUnixTimeSeconds(Int64): PrivateScope, Public, Static, HideBySig
    FromUnixTimeMilliseconds(Int64): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String[], IFormatProvider, DateTimeStyles): PrivateScope, Public, Static, HideBySig
    Subtract(DateTimeOffset): PrivateScope, Public, HideBySig
    Subtract(TimeSpan): PrivateScope, Public, HideBySig
    ToFileTime(): PrivateScope, Public, HideBySig
    ToUnixTimeSeconds(): PrivateScope, Public, HideBySig
    ToUnixTimeMilliseconds(): PrivateScope, Public, HideBySig
    ToLocalTime(): PrivateScope, Public, HideBySig
    ToLocalTime(Boolean): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToUniversalTime(): PrivateScope, Public, HideBySig
    TryParse(String, DateTimeOffset&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, IFormatProvider, DateTimeStyles, DateTimeOffset&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTimeOffset&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTimeOffset&(Out)): PrivateScope, Public, Static, HideBySig
    op_Implicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(DateTimeOffset, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DateTimeOffset, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(DateTimeOffset, DateTimeOffset): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.SystemException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.OutOfMemoryException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.StackOverflowException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.DataMisalignedException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.ExecutionEngineException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit (Obsolete)
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Delegate: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Fields:
    System.Object _target : Assembly
    System.Object _methodBase : Assembly
    IntPtr _methodPtr : Assembly
    IntPtr _methodPtrAux : Assembly
  Properties:
    System.Reflection.MethodInfo Method 'get ' : 
    System.Object Target 'get ' : 
  Methods:
    DynamicInvoke(Object[]): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Combine(Delegate, Delegate): PrivateScope, Public, Static, HideBySig
    Combine(Delegate[]): PrivateScope, Public, Static, HideBySig
    GetInvocationList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    Remove(Delegate, Delegate): PrivateScope, Public, Static, HideBySig
    RemoveAll(Delegate, Delegate): PrivateScope, Public, Static, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDelegate(Type, Object, String): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Object, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Object, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Type, String): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Type, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Type, String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, MethodInfo, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Object, MethodInfo): PrivateScope, Public, Static, HideBySig
    CreateDelegate(Type, Object, MethodInfo, Boolean): PrivateScope, Public, Static, HideBySig
    op_Equality(Delegate, Delegate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Delegate, Delegate): PrivateScope, Public, Static, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDelegateNoSecurityCheck(Type, Object, RuntimeMethodHandle): PrivateScope, Assembly, Static, HideBySig
    CreateDelegateNoSecurityCheck(RuntimeType, Object, MethodInfo): PrivateScope, Assembly, Static, HideBySig
    CreateDelegate(Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    CreateDelegateInternal(RuntimeType, RuntimeMethodInfo, Object, DelegateBindingFlags, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    UnsafeCreateDelegate(RuntimeType, RuntimeMethodInfo, Object, DelegateBindingFlags): PrivateScope, Assembly, Static, HideBySig
    InternalAllocLike(Delegate): PrivateScope, Assembly, Static, HideBySig
    InternalEqualTypes(Object, Object): PrivateScope, Assembly, Static, HideBySig
    GetMulticastInvoke(): PrivateScope, Assembly, HideBySig
    GetInvokeMethod(): PrivateScope, Assembly, HideBySig
    FindMethodHandle(): PrivateScope, Assembly, HideBySig
    InternalEqualMethodHandles(Delegate, Delegate): PrivateScope, Assembly, Static, HideBySig
    AdjustTarget(Object, IntPtr): PrivateScope, Assembly, HideBySig
    GetCallStub(IntPtr): PrivateScope, Assembly, HideBySig
    GetTarget(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CompareUnmanagedFunctionPtrs(Delegate, Delegate): PrivateScope, Assembly, Static, HideBySig
Struct System.DelegateBindingFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.DelegateBindingFlags StaticMethodOnly = 1 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags InstanceMethodOnly = 2 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags OpenDelegateOnly = 4 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags ClosedDelegateOnly = 8 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags NeverCloseOverNull = 16 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags CaselessMatching = 32 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags SkipSecurityChecks = 64 : Public, Static, Literal, HasDefault
    System.DelegateBindingFlags RelaxedSignature = 128 : Public, Static, Literal, HasDefault
Class System.MulticastDelegate: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Delegate
  Methods:
    IsUnmanagedFunctionPtr(): PrivateScope, Assembly, HideBySig
    InvocationListLogicallyNull(): PrivateScope, Assembly, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    NewMulticastDelegate(Object[], Int32): PrivateScope, Assembly, HideBySig
    StoreDynamicMethod(MethodInfo): PrivateScope, Assembly, HideBySig
    GetInvocationList(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(MulticastDelegate, MulticastDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MulticastDelegate, MulticastDelegate): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    GetTarget(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.__Filters: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.__Filters Instance : Assembly, Static, InitOnly
  Methods:
    FilterAttribute(MemberInfo, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    FilterName(MemberInfo, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    FilterIgnoreCase(MemberInfo, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class System.__HResults: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 RO_E_CLOSED = -2147483629 : Assembly, Static, Literal, HasDefault
    Int32 E_BOUNDS = -2147483637 : Assembly, Static, Literal, HasDefault
    Int32 E_CHANGED_STATE = -2147483636 : Assembly, Static, Literal, HasDefault
    Int32 E_FAIL = -2147467259 : Assembly, Static, Literal, HasDefault
    Int32 E_POINTER = -2147467261 : Assembly, Static, Literal, HasDefault
    Int32 E_NOTIMPL = -2147467263 : Assembly, Static, Literal, HasDefault
    Int32 REGDB_E_CLASSNOTREG = -2147221164 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_AMBIGUOUSMATCH = -2147475171 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_APPDOMAINUNLOADED = -2146234348 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_APPLICATION = -2146232832 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ARGUMENT = -2147024809 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ARGUMENTOUTOFRANGE = -2146233086 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ARITHMETIC = -2147024362 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ARRAYTYPEMISMATCH = -2146233085 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_BADIMAGEFORMAT = -2147024885 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TYPEUNLOADED = -2146234349 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_CANNOTUNLOADAPPDOMAIN = -2146234347 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_COMEMULATE = -2146233035 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_CONTEXTMARSHAL = -2146233084 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_DATAMISALIGNED = -2146233023 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TIMEOUT = -2146233083 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_CUSTOMATTRIBUTEFORMAT = -2146232827 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_DIVIDEBYZERO = -2147352558 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_DUPLICATEWAITOBJECT = -2146233047 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_EXCEPTION = -2146233088 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_EXECUTIONENGINE = -2146233082 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_FIELDACCESS = -2146233081 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_FORMAT = -2146233033 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INDEXOUTOFRANGE = -2146233080 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INSUFFICIENTMEMORY = -2146233027 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INSUFFICIENTEXECUTIONSTACK = -2146232968 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDCAST = -2147467262 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDCOMOBJECT = -2146233049 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDFILTERCRITERIA = -2146232831 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDOLEVARIANTTYPE = -2146233039 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDOPERATION = -2146233079 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_INVALIDPROGRAM = -2146233030 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_KEYNOTFOUND = -2146232969 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MARSHALDIRECTIVE = -2146233035 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MEMBERACCESS = -2146233062 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_METHODACCESS = -2146233072 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MISSINGFIELD = -2146233071 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MISSINGMANIFESTRESOURCE = -2146233038 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MISSINGMEMBER = -2146233070 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MISSINGMETHOD = -2146233069 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MISSINGSATELLITEASSEMBLY = -2146233034 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_MULTICASTNOTSUPPORTED = -2146233068 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_NOTFINITENUMBER = -2146233048 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_PLATFORMNOTSUPPORTED = -2146233031 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_NOTSUPPORTED = -2146233067 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_NULLREFERENCE = -2147467261 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_OBJECTDISPOSED = -2146232798 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_OPERATIONCANCELED = -2146233029 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_OUTOFMEMORY = -2147024882 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_OVERFLOW = -2146233066 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_RANK = -2146233065 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_REFLECTIONTYPELOAD = -2146232830 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_RUNTIMEWRAPPED = -2146233026 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SAFEARRAYRANKMISMATCH = -2146233032 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SAFEARRAYTYPEMISMATCH = -2146233037 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SAFEHANDLEMISSINGATTRIBUTE = -2146232797 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SECURITY = -2146233078 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SERIALIZATION = -2146233076 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SEMAPHOREFULL = -2146233045 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_WAITHANDLECANNOTBEOPENED = -2146233044 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ABANDONEDMUTEX = -2146233043 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_STACKOVERFLOW = -2147023895 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SYNCHRONIZATIONLOCK = -2146233064 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_SYSTEM = -2146233087 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TARGET = -2146232829 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TARGETINVOCATION = -2146232828 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TARGETPARAMCOUNT = -2147352562 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_THREADABORTED = -2146233040 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_THREADINTERRUPTED = -2146233063 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_THREADSTATE = -2146233056 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_THREADSTOP = -2146233055 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_THREADSTART = -2146233051 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TYPEACCESS = -2146233021 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TYPEINITIALIZATION = -2146233036 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_TYPELOAD = -2146233054 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_ENTRYPOINTNOTFOUND = -2146233053 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_DLLNOTFOUND = -2146233052 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_UNAUTHORIZEDACCESS = -2147024891 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_UNSUPPORTEDFORMAT = -2146233053 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_VERIFICATION = -2146233075 : Assembly, Static, Literal, HasDefault
    Int32 COR_E_HOSTPROTECTION = -2146232768 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_MIN_GRANT_FAIL = -2146233321 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_NO_EXEC_PERM = -2146233320 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_POLICY_EXCEPTION = -2146233322 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_XMLSYNTAX = -2146233320 : Assembly, Static, Literal, HasDefault
    Int32 NTE_FAIL = -2146893792 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_CRYPTO = -2146233296 : Assembly, Static, Literal, HasDefault
    Int32 CORSEC_E_CRYPTO_UNEX_OPER = -2146233295 : Assembly, Static, Literal, HasDefault
    Int32 DISP_E_OVERFLOW = -2147352566 : Assembly, Static, Literal, HasDefault
    Int32 FUSION_E_REF_DEF_MISMATCH = -2146234304 : Assembly, Static, Literal, HasDefault
    Int32 FUSION_E_INVALID_NAME = -2146234297 : Assembly, Static, Literal, HasDefault
    Int32 TYPE_E_TYPEMISMATCH = -2147316576 : Assembly, Static, Literal, HasDefault
Struct System.LogLevel: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.LogLevel Trace = 0 : Public, Static, Literal, HasDefault
    System.LogLevel Status = 20 : Public, Static, Literal, HasDefault
    System.LogLevel Warning = 40 : Public, Static, Literal, HasDefault
    System.LogLevel Error = 50 : Public, Static, Literal, HasDefault
    System.LogLevel Panic = 100 : Public, Static, Literal, HasDefault
Struct System.SwitchStructure: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String name : Assembly
    Int32 value : Assembly
Class System.BCLDebug: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Boolean m_registryChecked IsVolatile : Assembly, Static
    Boolean m_loggingNotEnabled IsVolatile : Assembly, Static
    Boolean m_perfWarnings : Assembly, Static
    Boolean m_correctnessWarnings : Assembly, Static
    Boolean m_safeHandleStackTraces : Assembly, Static
    System.Security.PermissionSet m_MakeConsoleErrorLoggingWork IsVolatile : Assembly, Static
  Properties:
    Boolean SafeHandleStackTracesEnabled 'get ' : 
  Methods:
    Assert(Boolean, String): PrivateScope, Public, Static, HideBySig
    Log(String): PrivateScope, Public, Static, HideBySig
    Log(String, String): PrivateScope, Public, Static, HideBySig
    CheckEnabled(String): PrivateScope, Assembly, Static, HideBySig
    Log(String, LogLevel, Object[]): PrivateScope, Public, Static, HideBySig
    Trace(String, Object[]): PrivateScope, Public, Static, HideBySig
    Trace(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    DumpStack(String): PrivateScope, Public, Static, HideBySig
    ConsoleError(String): PrivateScope, Assembly, Static, HideBySig
    Perf(Boolean, String): PrivateScope, Assembly, Static, HideBySig
    Correctness(Boolean, String): PrivateScope, Assembly, Static, HideBySig
    CorrectnessEnabled(): PrivateScope, Assembly, Static, HideBySig
    get_SafeHandleStackTracesEnabled(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.MemberAccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Activator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Runtime.InteropServices._Activator
  Fields:
    Int32 LookupMask = 255 : Assembly, Static, Literal, HasDefault
    System.Reflection.BindingFlags ConLookup = 20 : Assembly, Static, Literal, HasDefault
    System.Reflection.BindingFlags ConstructorDefault = 532 : Assembly, Static, Literal, HasDefault
  Methods:
    CreateInstance(Type, BindingFlags, Binder, Object[], CultureInfo): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Object[], Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type): PrivateScope, Public, Static, HideBySig
    CreateInstance(String, String): PrivateScope, Public, Static, HideBySig
    CreateInstance(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(Type, Boolean): PrivateScope, Public, Static, HideBySig
    CreateInstance(): PrivateScope, Public, Static, HideBySig
    CreateInstanceFrom(String, String): PrivateScope, Public, Static, HideBySig
    CreateInstanceFrom(String, String, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(AppDomain, String, String): PrivateScope, Public, Static, HideBySig
    CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstanceFrom(AppDomain, String, String): PrivateScope, Public, Static, HideBySig
    CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, Static, HideBySig
    CreateInstance(ActivationContext): PrivateScope, Public, Static, HideBySig
    CreateInstance(ActivationContext, String[]): PrivateScope, Public, Static, HideBySig
    CreateComInstanceFrom(String, String): PrivateScope, Public, Static, HideBySig
    CreateComInstanceFrom(String, String, Byte[], AssemblyHashAlgorithm): PrivateScope, Public, Static, HideBySig
    GetObject(Type, String): PrivateScope, Public, Static, HideBySig
    GetObject(Type, String, Object): PrivateScope, Public, Static, HideBySig
Class System.AccessViolationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ApplicationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ResolveEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.Reflection.Assembly RequestingAssembly 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_RequestingAssembly(): PrivateScope, Public, HideBySig, SpecialName
Class System.AssemblyLoadEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.Assembly LoadedAssembly 'get ' : 
  Methods:
    get_LoadedAssembly(): PrivateScope, Public, HideBySig, SpecialName
Class System.ResolveEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ResolveEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ResolveEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.AssemblyLoadEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, AssemblyLoadEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AssemblyLoadEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.AppDomainInitializer: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.AppDomainInitializerInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.AppDomainInitializer): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    ItemInfo[] Info : Assembly
  Methods:
    Unwrap(): PrivateScope, Assembly, HideBySig
Class System.AppDomain: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System._AppDomain
    System.Security.IEvidenceFactory
  Fields:
    System.String TargetFrameworkNameAppCompatSetting = TargetFrameworkName : Assembly, Static, Literal, HasDefault
    Int32 DefaultADID = 1 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean ProfileAPICheck 'get ' : 
    Boolean IsAppXNGen 'get ' : 
    System.String[] PartialTrustVisibleAssemblies 'get set' : 
    System.AppDomainManager DomainManager 'get ' : 
    System.Security.HostSecurityManager HostSecurityManager 'get ' : 
    System.AppDomain CurrentDomain 'get ' : 
    System.Security.Policy.Evidence Evidence 'get ' : 
    System.Security.Policy.Evidence EvidenceNoDemand 'get ' : 
    System.Security.Policy.Evidence InternalEvidence 'get ' : 
    System.String FriendlyName 'get ' : 
    System.String BaseDirectory 'get ' : 
    System.String RelativeSearchPath 'get ' : 
    Boolean ShadowCopyFiles 'get ' : 
    System.ActivationContext ActivationContext 'get ' : 
    System.ApplicationIdentity ApplicationIdentity 'get ' : 
    System.Security.Policy.ApplicationTrust ApplicationTrust 'get ' : 
    System.String DynamicDirectory 'get ' : 
    System.Runtime.Remoting.DomainSpecificRemotingData RemotingData 'get ' : 
    System.AppDomainSetup FusionStore 'get ' : 
    System.AppDomainSetup SetupInformation 'get ' : 
    System.Security.PermissionSet PermissionSet 'get ' : 
    Boolean IsFullyTrusted 'get ' : 
    Boolean IsHomogenous 'get ' : 
    Boolean IsLegacyCasPolicyEnabled 'get ' : 
    Int32 Id   'get ' : 
    Boolean MonitoringIsEnabled 'get set' : 
    System.TimeSpan MonitoringTotalProcessorTime 'get ' : 
    Int64 MonitoringTotalAllocatedMemorySize 'get ' : 
    Int64 MonitoringSurvivedMemorySize 'get ' : 
    Int64 MonitoringSurvivedProcessMemorySize 'get ' : 
  Events:
    System.AssemblyLoadEventHandler AssemblyLoad: 
    System.ResolveEventHandler TypeResolve: 
    System.ResolveEventHandler ResourceResolve: 
    System.ResolveEventHandler AssemblyResolve: 
    System.ResolveEventHandler ReflectionOnlyAssemblyResolve: 
    System.EventHandler ProcessExit: 
    System.EventHandler DomainUnload: 
    System.UnhandledExceptionEventHandler UnhandledException: 
    System.EventHandler`1[System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs] FirstChanceException: 
  Methods:
    add_AssemblyLoad(AssemblyLoadEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_AssemblyLoad(AssemblyLoadEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_TypeResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_TypeResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_ResourceResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ResourceResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_AssemblyResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_AssemblyResolve(ResolveEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_ReflectionOnlyAssemblyResolve(ResolveEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ReflectionOnlyAssemblyResolve(ResolveEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_ProfileAPICheck(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IsAppXNGen(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetNativeHandle(): PrivateScope, Assembly, HideBySig
    GetTargetFrameworkName(): PrivateScope, Assembly, HideBySig
    DisableFusionUpdatesFromADManager(): PrivateScope, Assembly, HideBySig
    IsAppXModel(): PrivateScope, Assembly, Static, HideBySig
    IsAppXDesignMode(): PrivateScope, Assembly, Static, HideBySig
    CheckLoadFromSupported(): PrivateScope, Assembly, Static, HideBySig
    CheckLoadFileSupported(): PrivateScope, Assembly, Static, HideBySig
    CheckReflectionOnlyLoadSupported(): PrivateScope, Assembly, Static, HideBySig
    CheckLoadWithPartialNameSupported(StackCrawlMark): PrivateScope, Assembly, Static, HideBySig
    CheckDefinePInvokeSupported(): PrivateScope, Assembly, Static, HideBySig
    CheckLoadByteArraySupported(): PrivateScope, Assembly, Static, HideBySig
    CheckCreateDomainSupported(): PrivateScope, Assembly, Static, HideBySig
    GetAppDomainManagerType(String&(Out), String&(Out)): PrivateScope, Assembly, HideBySig
    get_PartialTrustVisibleAssemblies(): PrivateScope, Assembly, HideBySig, SpecialName
    set_PartialTrustVisibleAssemblies(String[]): PrivateScope, Assembly, HideBySig, SpecialName
    get_DomainManager(): PrivateScope, Public, HideBySig, SpecialName
    get_HostSecurityManager(): PrivateScope, Assembly, HideBySig, SpecialName
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable`1): PrivateScope, Public, HideBySig
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable`1, SecurityContextSource): PrivateScope, Public, HideBySig
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean, IEnumerable`1): PrivateScope, Public, HideBySig (Obsolete)
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Boolean, IEnumerable`1): PrivateScope, Public, HideBySig
    ApplyPolicy(String): PrivateScope, Public, HideBySig
    CreateInstance(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InternalCreateInstanceWithNoSecurity(String, String): PrivateScope, Assembly, HideBySig
    CreateInstanceFrom(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InternalCreateInstanceFromWithNoSecurity(String, String): PrivateScope, Assembly, HideBySig
    CreateComInstanceFrom(String, String): PrivateScope, Public, HideBySig
    CreateComInstanceFrom(String, String, Byte[], AssemblyHashAlgorithm): PrivateScope, Public, HideBySig
    CreateInstance(String, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateInstanceFrom(String, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, HideBySig
    InternalCreateInstanceWithNoSecurity(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Assembly, HideBySig
    CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, HideBySig
    InternalCreateInstanceFromWithNoSecurity(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Assembly, HideBySig
    Load(AssemblyName): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(Byte[], Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Load(Byte[], Byte[], Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, HasSecurity (Obsolete)
    Load(AssemblyName, Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Load(String, Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ExecuteAssembly(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ExecuteAssembly(String, Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ExecuteAssembly(String, Evidence, String[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ExecuteAssembly(String, String[]): PrivateScope, Public, HideBySig
    ExecuteAssembly(String, Evidence, String[], Byte[], AssemblyHashAlgorithm): PrivateScope, Public, HideBySig (Obsolete)
    ExecuteAssembly(String, String[], Byte[], AssemblyHashAlgorithm): PrivateScope, Public, HideBySig
    ExecuteAssemblyByName(String): PrivateScope, Public, HideBySig
    ExecuteAssemblyByName(String, Evidence): PrivateScope, Public, HideBySig (Obsolete)
    ExecuteAssemblyByName(String, Evidence, String[]): PrivateScope, Public, HideBySig (Obsolete)
    ExecuteAssemblyByName(String, String[]): PrivateScope, Public, HideBySig
    ExecuteAssemblyByName(AssemblyName, Evidence, String[]): PrivateScope, Public, HideBySig (Obsolete)
    ExecuteAssemblyByName(AssemblyName, String[]): PrivateScope, Public, HideBySig
    get_CurrentDomain(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Evidence(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName, HasSecurity
    get_EvidenceNoDemand(): PrivateScope, Assembly, HideBySig, SpecialName
    get_InternalEvidence(): PrivateScope, Assembly, HideBySig, SpecialName
    GetHostEvidence(Type): PrivateScope, Assembly, HideBySig
    get_FriendlyName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BaseDirectory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RelativeSearchPath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShadowCopyFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetAssemblies(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReflectionOnlyGetAssemblies(): PrivateScope, Public, HideBySig
    IsUnloadingForcedFinalize(): PrivateScope, Assembly, HideBySig
    IsFinalizingForUnload(): PrivateScope, Public, HideBySig
    PublishAnonymouslyHostedDynamicMethodsAssembly(RuntimeAssembly): PrivateScope, Assembly, Static, HideBySig
    AppendPrivatePath(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ClearPrivatePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ClearShadowCopyPath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetCachePath(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetData(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetData(String, Object, IPermission): PrivateScope, Public, HideBySig
    GetData(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsCompatibilitySwitchSet(String): PrivateScope, Public, HideBySig
    GetCurrentThreadId(): PrivateScope, Public, Static, HideBySig, PinvokeImpl (Obsolete)
    Unload(AppDomain): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetAppDomainPolicy(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    get_ActivationContext(): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationIdentity(): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationTrust(): PrivateScope, Public, HideBySig, SpecialName
    SetThreadPrincipal(IPrincipal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    SetPrincipalPolicy(PrincipalPolicy): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig
    DoCallBack(CrossAppDomainDelegate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DynamicDirectory(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateDomain(String, Evidence): PrivateScope, Public, Static, HideBySig
    CreateDomain(String, Evidence, String, String, Boolean): PrivateScope, Public, Static, HideBySig
    CreateDomain(String): PrivateScope, Public, Static, HideBySig
    Pause(): PrivateScope, Assembly, Static, HideBySig
    Resume(): PrivateScope, Assembly, Static, HideBySig
    nExecuteAssembly(RuntimeAssembly, String[]): PrivateScope, Assembly, HideBySig
    CreateRemotingData(): PrivateScope, Assembly, HideBySig
    get_RemotingData(): PrivateScope, Assembly, HideBySig, SpecialName
    add_ProcessExit(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_ProcessExit(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_DomainUnload(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DomainUnload(EventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_UnhandledException(UnhandledExceptionEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_UnhandledException(UnhandledExceptionEventHandler): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_FirstChanceException(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_FirstChanceException(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_FusionStore(): PrivateScope, Assembly, HideBySig, SpecialName
    GetRuntimeAssembly(Assembly): PrivateScope, Assembly, Static, HideBySig
    GetIdForUnload(AppDomain): PrivateScope, Assembly, Static, HideBySig
    IsDomainIdValid(Int32): PrivateScope, Assembly, Static, HideBySig
    GetDefaultDomain(): PrivateScope, Assembly, Static, HideBySig
    GetThreadPrincipal(): PrivateScope, Assembly, HideBySig
    CreateDefaultContext(): PrivateScope, Assembly, HideBySig
    GetDefaultContext(): PrivateScope, Assembly, HideBySig
    CheckDomainCreationEvidence(AppDomainSetup, Evidence): PrivateScope, Assembly, Static, HideBySig
    CreateDomain(String, Evidence, AppDomainSetup): PrivateScope, Public, Static, HideBySig, HasSecurity
    InternalCreateDomain(String, Evidence, AppDomainSetup): PrivateScope, Assembly, Static, HideBySig
    CreateDomain(String, Evidence, AppDomainSetup, PermissionSet, StrongName[]): PrivateScope, Public, Static, HideBySig
    CreateDomain(String, Evidence, String, String, Boolean, AppDomainInitializer, String[]): PrivateScope, Public, Static, HideBySig
    NormalizePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetFusionContext(): PrivateScope, Assembly, HideBySig
    GetSecurityDescriptor(): PrivateScope, Assembly, HideBySig
    nCreateDomain(String, AppDomainSetup, Evidence, Evidence, IntPtr): PrivateScope, Assembly, Static, HideBySig
    nCreateInstance(String, AppDomainSetup, Evidence, Evidence, IntPtr): PrivateScope, Assembly, Static, HideBySig
    UpdateLoaderOptimization(LoaderOptimization): PrivateScope, Assembly, HideBySig
    SetShadowCopyPath(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetShadowCopyFiles(): PrivateScope, Public, HideBySig (Obsolete)
    SetDynamicBase(String): PrivateScope, Public, HideBySig (Obsolete)
    get_SetupInformation(): PrivateScope, Public, HideBySig, SpecialName
    InternalSetShadowCopyPath(String): PrivateScope, Assembly, HideBySig
    InternalSetShadowCopyFiles(): PrivateScope, Assembly, HideBySig
    InternalSetCachePath(String): PrivateScope, Assembly, HideBySig
    InternalSetPrivateBinPath(String): PrivateScope, Assembly, HideBySig
    InternalSetDynamicBase(String): PrivateScope, Assembly, HideBySig
    IsStringInterned(String): PrivateScope, Assembly, HideBySig
    GetOrInternString(String): PrivateScope, Assembly, HideBySig
    get_PermissionSet(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFullyTrusted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHomogenous(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLegacyCasPolicyEnabled(): PrivateScope, Assembly, HideBySig, SpecialName
    GetHomogenousGrantSet(Evidence): PrivateScope, Assembly, HideBySig
    nUnload(Int32): PrivateScope, Assembly, Static, HideBySig
    CreateInstanceAndUnwrap(String, String): PrivateScope, Public, HideBySig
    CreateInstanceAndUnwrap(String, String, Object[]): PrivateScope, Public, HideBySig
    CreateInstanceAndUnwrap(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, HideBySig (Obsolete)
    CreateInstanceAndUnwrap(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, HideBySig
    CreateInstanceFromAndUnwrap(String, String): PrivateScope, Public, HideBySig
    CreateInstanceFromAndUnwrap(String, String, Object[]): PrivateScope, Public, HideBySig
    CreateInstanceFromAndUnwrap(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, HideBySig (Obsolete)
    CreateInstanceFromAndUnwrap(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[]): PrivateScope, Public, HideBySig
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    GetId(): PrivateScope, Assembly, HideBySig
    IsDefaultAppDomain(): PrivateScope, Public, HideBySig
    get_MonitoringIsEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_MonitoringIsEnabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MonitoringTotalProcessorTime(): PrivateScope, Public, HideBySig, SpecialName
    get_MonitoringTotalAllocatedMemorySize(): PrivateScope, Public, HideBySig, SpecialName
    get_MonitoringSurvivedMemorySize(): PrivateScope, Public, HideBySig, SpecialName
    get_MonitoringSurvivedProcessMemorySize(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.CrossAppDomainDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.AppDomainHandle: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct System.AppDomainManagerInitializationOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.AppDomainManagerInitializationOptions None = 0 : Public, Static, Literal, HasDefault
    System.AppDomainManagerInitializationOptions RegisterWithHost = 1 : Public, Static, Literal, HasDefault
Class System.AppDomainManager: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.MarshalByRefObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.AppDomainManagerInitializationOptions InitializationFlags 'get set' : 
    System.Runtime.Hosting.ApplicationActivator ApplicationActivator 'get ' : 
    System.Security.HostSecurityManager HostSecurityManager 'get ' : 
    System.Threading.HostExecutionContextManager HostExecutionContextManager 'get ' : 
    System.Reflection.Assembly EntryAssembly 'get ' : 
    System.AppDomainManager CurrentAppDomainManager 'get ' : 
  Methods:
    CreateDomain(String, Evidence, AppDomainSetup): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InitializeNewDomain(AppDomainSetup): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_InitializationFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_InitializationFlags(AppDomainManagerInitializationOptions): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationActivator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HostSecurityManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HostExecutionContextManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EntryAssembly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentAppDomainManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CheckSecuritySettings(SecurityState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RegisterWithHost(): PrivateScope, Assembly, HideBySig
Class System.AppDomainPauseManager: NotPublic
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.AppDomainPauseManager Instance 'get ' : 
    Boolean IsPaused 'get ' : 
    System.Threading.ManualResetEvent ResumeEvent 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Pausing(): PrivateScope, Public, HideBySig
    Paused(): PrivateScope, Public, HideBySig
    Resuming(): PrivateScope, Public, HideBySig
    Resumed(): PrivateScope, Public, HideBySig
    get_IsPaused(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ResumeEvent(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_ResumeEvent(ManualResetEvent): PrivateScope, Assembly, Static, HideBySig, SpecialName
Interface System._AppDomain: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Security.Policy.Evidence Evidence 'get ' : 
    System.String FriendlyName 'get ' : 
    System.String BaseDirectory 'get ' : 
    System.String RelativeSearchPath 'get ' : 
    Boolean ShadowCopyFiles 'get ' : 
    System.String DynamicDirectory 'get ' : 
  Events:
    System.EventHandler DomainUnload: 
    System.AssemblyLoadEventHandler AssemblyLoad: 
    System.EventHandler ProcessExit: 
    System.ResolveEventHandler TypeResolve: 
    System.ResolveEventHandler ResourceResolve: 
    System.ResolveEventHandler AssemblyResolve: 
    System.UnhandledExceptionEventHandler UnhandledException: 
  Methods:
    GetTypeInfoCount(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTypeInfo(UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIDsOfNames(Guid&(In), IntPtr, UInt32, UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Invoke(UInt32, Guid&(In), UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLifetimeService(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Evidence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_DomainUnload(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DomainUnload(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_AssemblyLoad(AssemblyLoadEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_AssemblyLoad(AssemblyLoadEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_ProcessExit(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ProcessExit(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_TypeResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_TypeResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_ResourceResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_ResourceResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_AssemblyResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_AssemblyResolve(ResolveEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_UnhandledException(UnhandledExceptionEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_UnhandledException(UnhandledExceptionEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstance(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstanceFrom(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstance(String, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstanceFrom(String, String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(AssemblyName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(Byte[], Byte[], Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(AssemblyName, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Load(String, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExecuteAssembly(String, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExecuteAssembly(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ExecuteAssembly(String, Evidence, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_FriendlyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BaseDirectory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RelativeSearchPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShadowCopyFiles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetAssemblies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AppendPrivatePath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearPrivatePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetShadowCopyPath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearShadowCopyPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCachePath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetData(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetData(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAppDomainPolicy(PolicyLevel): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetThreadPrincipal(IPrincipal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPrincipalPolicy(PrincipalPolicy): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoCallBack(CrossAppDomainDelegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DynamicDirectory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.AppDomainSetup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.AppDomainSetup, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ActivationContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Hosting.ActivationArguments): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IAppDomainSetup
  Fields:
    System.Globalization.AppDomainSortingSetupInfo _AppDomainSortingSetupInfo : Assembly, NotSerialized
  Properties:
    System.String[] Value 'get ' : 
    System.String AppDomainManagerAssembly 'get set' : 
    System.String AppDomainManagerType 'get set' : 
    System.String[] PartialTrustVisibleAssemblies 'get set' : 
    System.String ApplicationBase 'get set' : 
    System.String ApplicationBaseKey 'get ' : 
    System.String ConfigurationFile 'get set' : 
    System.String ConfigurationFileInternal 'get ' : 
    System.String ConfigurationFileKey 'get ' : 
    System.String TargetFrameworkName 'get set' : 
    Boolean CheckedForTargetFrameworkName 'get set' : 
    System.String DynamicBase 'get set' : 
    System.String DynamicBaseKey 'get ' : 
    Boolean DisallowPublisherPolicy 'get set' : 
    Boolean DisallowBindingRedirects 'get set' : 
    Boolean DisallowCodeDownload 'get set' : 
    Boolean DisallowApplicationBaseProbing 'get set' : 
    System.String DeveloperPath 'get set' : 
    System.String DisallowPublisherPolicyKey 'get ' : 
    System.String DisallowCodeDownloadKey 'get ' : 
    System.String DisallowBindingRedirectsKey 'get ' : 
    System.String DeveloperPathKey 'get ' : 
    System.String DisallowAppBaseProbingKey 'get ' : 
    System.String ApplicationName 'get set' : 
    System.String ApplicationNameKey 'get ' : 
    System.AppDomainInitializer AppDomainInitializer 'get set' : 
    System.String[] AppDomainInitializerArguments 'get set' : 
    System.Runtime.Hosting.ActivationArguments ActivationArguments 'get set' : 
    System.Security.Policy.ApplicationTrust ApplicationTrust 'get set' : 
    System.String PrivateBinPath 'get set' : 
    System.String PrivateBinPathKey 'get ' : 
    System.String PrivateBinPathProbe 'get set' : 
    System.String PrivateBinPathProbeKey 'get ' : 
    System.String ShadowCopyDirectories 'get set' : 
    System.String ShadowCopyDirectoriesKey 'get ' : 
    System.String ShadowCopyFiles 'get set' : 
    System.String ShadowCopyFilesKey 'get ' : 
    System.String CachePath 'get set' : 
    System.String CachePathKey 'get ' : 
    System.String LicenseFile 'get set' : 
    System.LoaderOptimization LoaderOptimization 'get set' : 
    System.String LoaderOptimizationKey 'get ' : 
    System.String ConfigurationExtension 'get ' : 
    System.String PrivateBinPathEnvironmentVariable 'get ' : 
    System.String RuntimeConfigurationFile 'get ' : 
    System.String MachineConfigKey 'get ' : 
    System.String HostBindingKey 'get ' : 
    Boolean SandboxInterop 'get set' : 
  Methods:
    SetupDefaults(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, HideBySig
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
    GetUnsecureApplicationBase(): PrivateScope, Assembly, HideBySig
    get_AppDomainManagerAssembly(): PrivateScope, Public, HideBySig, SpecialName
    set_AppDomainManagerAssembly(String): PrivateScope, Public, HideBySig, SpecialName
    get_AppDomainManagerType(): PrivateScope, Public, HideBySig, SpecialName
    set_AppDomainManagerType(String): PrivateScope, Public, HideBySig, SpecialName
    get_PartialTrustVisibleAssemblies(): PrivateScope, Public, HideBySig, SpecialName
    set_PartialTrustVisibleAssemblies(String[]): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationBase(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ApplicationBase(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ApplicationBaseKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ConfigurationFile(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConfigurationFile(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConfigurationFileInternal(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ConfigurationFileKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetConfigurationBytes(): PrivateScope, Public, HideBySig
    SetConfigurationBytes(Byte[]): PrivateScope, Public, HideBySig
    GetCompatibilityFlags(): PrivateScope, Assembly, HideBySig
    SetCompatibilitySwitches(IEnumerable`1): PrivateScope, Public, HideBySig
    get_TargetFrameworkName(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetFrameworkName(String): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedForTargetFrameworkName(): PrivateScope, Assembly, HideBySig, SpecialName
    set_CheckedForTargetFrameworkName(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    SetNativeFunction(String, Int32, IntPtr): PrivateScope, Public, HideBySig
    get_DynamicBase(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DynamicBase(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DynamicBaseKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DisallowPublisherPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_DisallowPublisherPolicy(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisallowBindingRedirects(): PrivateScope, Public, HideBySig, SpecialName
    set_DisallowBindingRedirects(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisallowCodeDownload(): PrivateScope, Public, HideBySig, SpecialName
    set_DisallowCodeDownload(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DisallowApplicationBaseProbing(): PrivateScope, Public, HideBySig, SpecialName
    set_DisallowApplicationBaseProbing(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DeveloperPath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DeveloperPath(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_DisallowPublisherPolicyKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DisallowCodeDownloadKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DisallowBindingRedirectsKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DeveloperPathKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DisallowAppBaseProbingKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ApplicationName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ApplicationName(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ApplicationNameKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_AppDomainInitializer(): PrivateScope, Public, HideBySig, SpecialName
    set_AppDomainInitializer(AppDomainInitializer): PrivateScope, Public, HideBySig, SpecialName
    get_AppDomainInitializerArguments(): PrivateScope, Public, HideBySig, SpecialName
    set_AppDomainInitializerArguments(String[]): PrivateScope, Public, HideBySig, SpecialName
    get_ActivationArguments(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivationArguments(ActivationArguments): PrivateScope, Public, HideBySig, SpecialName
    InternalGetApplicationTrust(): PrivateScope, Assembly, HideBySig
    InternalSetApplicationTrust(ApplicationTrust): PrivateScope, Assembly, HideBySig
    get_ApplicationTrust(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationTrust(ApplicationTrust): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PrivateBinPath(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrivateBinPathKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_PrivateBinPathProbe(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PrivateBinPathProbe(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrivateBinPathProbeKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ShadowCopyDirectories(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ShadowCopyDirectories(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShadowCopyDirectoriesKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ShadowCopyFiles(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ShadowCopyFiles(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShadowCopyFilesKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_CachePath(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CachePath(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CachePathKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_LicenseFile(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LicenseFile(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LoaderOptimization(): PrivateScope, Public, HideBySig, SpecialName
    set_LoaderOptimization(LoaderOptimization): PrivateScope, Public, HideBySig, SpecialName
    get_LoaderOptimizationKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ConfigurationExtension(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_PrivateBinPathEnvironmentVariable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_RuntimeConfigurationFile(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MachineConfigKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_HostBindingKey(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    UpdateContextPropertyIfNeeded(LoaderInformation, String, String, IntPtr, AppDomainSetup): PrivateScope, Assembly, HideBySig
    UpdateBooleanContextPropertyIfNeeded(LoaderInformation, String, IntPtr, AppDomainSetup): PrivateScope, Assembly, HideBySig
    ByteArraysAreDifferent(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    UpdateByteArrayContextPropertyIfNeeded(Byte[], Byte[], String, IntPtr): PrivateScope, Assembly, Static, HideBySig
    SetupFusionContext(IntPtr, AppDomainSetup): PrivateScope, Assembly, HideBySig
    UpdateContextProperty(IntPtr, String, Object): PrivateScope, Assembly, Static, HideBySig
    Locate(String): PrivateScope, Assembly, Static, HideBySig
    get_SandboxInterop(): PrivateScope, Public, HideBySig, SpecialName
    set_SandboxInterop(Boolean): PrivateScope, Public, HideBySig, SpecialName
Interface System.IAppDomainSetup: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String ApplicationBase 'get set' : 
    System.String ApplicationName 'get set' : 
    System.String CachePath 'get set' : 
    System.String ConfigurationFile 'get set' : 
    System.String DynamicBase 'get set' : 
    System.String LicenseFile 'get set' : 
    System.String PrivateBinPath 'get set' : 
    System.String PrivateBinPathProbe 'get set' : 
    System.String ShadowCopyDirectories 'get set' : 
    System.String ShadowCopyFiles 'get set' : 
  Methods:
    get_ApplicationBase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ApplicationBase(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ApplicationName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ApplicationName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CachePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CachePath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ConfigurationFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ConfigurationFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DynamicBase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DynamicBase(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LicenseFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LicenseFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PrivateBinPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PrivateBinPath(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PrivateBinPathProbe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PrivateBinPathProbe(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShadowCopyDirectories(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ShadowCopyDirectories(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShadowCopyFiles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ShadowCopyFiles(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct System.LoaderOptimization: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.LoaderOptimization NotSpecified = 0 : Public, Static, Literal, HasDefault
    System.LoaderOptimization SingleDomain = 1 : Public, Static, Literal, HasDefault
    System.LoaderOptimization MultiDomain = 2 : Public, Static, Literal, HasDefault
    System.LoaderOptimization MultiDomainHost = 3 : Public, Static, Literal, HasDefault
    System.LoaderOptimization DomainMask = 3 : Public, Static, Literal, HasDefault (Obsolete)
    System.LoaderOptimization DisallowBindings = 4 : Public, Static, Literal, HasDefault (Obsolete)
Class System.LoaderOptimizationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.LoaderOptimization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte _val : Assembly
  Properties:
    System.LoaderOptimization Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class System.AppDomainUnloadedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ActivationContext: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.ApplicationIdentity): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ApplicationIdentity, System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.Runtime.Serialization.ISerializable
  Properties:
    System.ApplicationIdentity Identity 'get ' : 
    ContextForm Form 'get ' : 
    Byte[] ApplicationManifestBytes 'get ' : 
    Byte[] DeploymentManifestBytes 'get ' : 
    System.String[] ManifestPaths 'get ' : 
    System.String ApplicationDirectory 'get ' : 
    System.String DataDirectory 'get ' : 
    System.Deployment.Internal.Isolation.Manifest.ICMS ActivationContextData 'get ' : 
    System.Deployment.Internal.Isolation.Manifest.ICMS DeploymentComponentManifest 'get ' : 
    System.Deployment.Internal.Isolation.Manifest.ICMS ApplicationComponentManifest 'get ' : 
    ApplicationStateDisposition LastApplicationStateResult 'get ' : 
  Methods:
    CreatePartialActivationContext(ApplicationIdentity): PrivateScope, Public, Static, HideBySig
    CreatePartialActivationContext(ApplicationIdentity, String[]): PrivateScope, Public, Static, HideBySig
    get_Identity(): PrivateScope, Public, HideBySig, SpecialName
    get_Form(): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationManifestBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_DeploymentManifestBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_ManifestPaths(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ApplicationDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DataDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ActivationContextData(): PrivateScope, Assembly, HideBySig, SpecialName
    get_DeploymentComponentManifest(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ApplicationComponentManifest(): PrivateScope, Assembly, HideBySig, SpecialName
    get_LastApplicationStateResult(): PrivateScope, Assembly, HideBySig, SpecialName
    GetComponentManifest(IDefinitionIdentity): PrivateScope, Assembly, HideBySig
    GetDeploymentManifestBytes(): PrivateScope, Assembly, HideBySig
    GetApplicationManifestBytes(): PrivateScope, Assembly, HideBySig
    PrepareForExecution(): PrivateScope, Assembly, HideBySig
    SetApplicationState(ApplicationState): PrivateScope, Assembly, HideBySig
Class System.ApplicationIdentity: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Deployment.Internal.Isolation.IDefinitionAppId): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    System.String FullName 'get ' : 
    System.String CodeBase 'get ' : 
    System.Deployment.Internal.Isolation.IDefinitionAppId Identity 'get ' : 
  Methods:
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    get_CodeBase(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Identity(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.ApplicationId: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.String, System.Version, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] m_publicKeyToken : Assembly
  Properties:
    Byte[] PublicKeyToken 'get ' : 
    System.String Name 'get ' : 
    System.Version Version 'get ' : 
    System.String ProcessorArchitecture 'get ' : 
    System.String Culture 'get ' : 
  Methods:
    get_PublicKeyToken(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessorArchitecture(): PrivateScope, Public, HideBySig, SpecialName
    get_Culture(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.ArgumentException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.String ParamName 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParamName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.ArgumentNullException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArgumentException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ArgumentOutOfRangeException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArgumentException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.Object ActualValue 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ActualValue(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Struct System.ArgIterator: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.RuntimeArgumentHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.RuntimeArgumentHandle, Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetNextArg(): PrivateScope, Public, HideBySig
    GetNextArg(RuntimeTypeHandle): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    GetRemainingCount(): PrivateScope, Public, HideBySig
    GetNextArgType(): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Class System.ArithmeticException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ArrayTypeMismatchException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.AsyncCallback: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IAsyncResult, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Attribute: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    System.Runtime.InteropServices._Attribute
  Properties:
    System.Object TypeId 'get ' : 
  Methods:
    GetCustomAttributes(MemberInfo, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(MemberInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(MemberInfo): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(MemberInfo, Boolean): PrivateScope, Public, Static, HideBySig
    IsDefined(MemberInfo, Type): PrivateScope, Public, Static, HideBySig
    IsDefined(MemberInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(MemberInfo, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(MemberInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(ParameterInfo): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(ParameterInfo, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(ParameterInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(ParameterInfo, Boolean): PrivateScope, Public, Static, HideBySig
    IsDefined(ParameterInfo, Type): PrivateScope, Public, Static, HideBySig
    IsDefined(ParameterInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(ParameterInfo, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(ParameterInfo, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Module, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Module): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Module, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Module, Type, Boolean): PrivateScope, Public, Static, HideBySig
    IsDefined(Module, Type): PrivateScope, Public, Static, HideBySig
    IsDefined(Module, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Module, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Module, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Assembly, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Assembly, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Assembly): PrivateScope, Public, Static, HideBySig
    GetCustomAttributes(Assembly, Boolean): PrivateScope, Public, Static, HideBySig
    IsDefined(Assembly, Type): PrivateScope, Public, Static, HideBySig
    IsDefined(Assembly, Type, Boolean): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Assembly, Type): PrivateScope, Public, Static, HideBySig
    GetCustomAttribute(Assembly, Type, Boolean): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_TypeId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Match(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDefaultAttribute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.AttributeTargets: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.AttributeTargets Assembly = 1 : Public, Static, Literal, HasDefault
    System.AttributeTargets Module = 2 : Public, Static, Literal, HasDefault
    System.AttributeTargets Class = 4 : Public, Static, Literal, HasDefault
    System.AttributeTargets Struct = 8 : Public, Static, Literal, HasDefault
    System.AttributeTargets Enum = 16 : Public, Static, Literal, HasDefault
    System.AttributeTargets Constructor = 32 : Public, Static, Literal, HasDefault
    System.AttributeTargets Method = 64 : Public, Static, Literal, HasDefault
    System.AttributeTargets Property = 128 : Public, Static, Literal, HasDefault
    System.AttributeTargets Field = 256 : Public, Static, Literal, HasDefault
    System.AttributeTargets Event = 512 : Public, Static, Literal, HasDefault
    System.AttributeTargets Interface = 1024 : Public, Static, Literal, HasDefault
    System.AttributeTargets Parameter = 2048 : Public, Static, Literal, HasDefault
    System.AttributeTargets Delegate = 4096 : Public, Static, Literal, HasDefault
    System.AttributeTargets ReturnValue = 8192 : Public, Static, Literal, HasDefault
    System.AttributeTargets GenericParameter = 16384 : Public, Static, Literal, HasDefault
    System.AttributeTargets All = 32767 : Public, Static, Literal, HasDefault
Class System.AttributeUsageAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.AttributeTargets): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.AttributeTargets, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.AttributeTargets m_attributeTarget : Assembly
    Boolean m_allowMultiple : Assembly
    Boolean m_inherited : Assembly
    System.AttributeUsageAttribute Default : Assembly, Static
  Properties:
    System.AttributeTargets ValidOn 'get ' : 
    Boolean AllowMultiple 'get set' : 
    Boolean Inherited 'get set' : 
  Methods:
    get_ValidOn(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowMultiple(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowMultiple(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Inherited(): PrivateScope, Public, HideBySig, SpecialName
    set_Inherited(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class System.BadImageFormatException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.String FileName 'get ' : 
    System.String FusionLog 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_FusionLog(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.BitConverter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Boolean IsLittleEndian : Public, Static, InitOnly
  Methods:
    GetBytes(Boolean): PrivateScope, Public, Static, HideBySig
    GetBytes(Char): PrivateScope, Public, Static, HideBySig
    GetBytes(Int16): PrivateScope, Public, Static, HideBySig
    GetBytes(Int32): PrivateScope, Public, Static, HideBySig
    GetBytes(Int64): PrivateScope, Public, Static, HideBySig
    GetBytes(UInt16): PrivateScope, Public, Static, HideBySig
    GetBytes(UInt32): PrivateScope, Public, Static, HideBySig
    GetBytes(UInt64): PrivateScope, Public, Static, HideBySig
    GetBytes(Single): PrivateScope, Public, Static, HideBySig
    GetBytes(Double): PrivateScope, Public, Static, HideBySig
    ToChar(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToInt16(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToInt32(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToInt64(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToUInt16(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToUInt32(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToUInt64(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToSingle(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToDouble(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToString(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ToString(Byte[]): PrivateScope, Public, Static, HideBySig
    ToString(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    ToBoolean(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    DoubleToInt64Bits(Double): PrivateScope, Public, Static, HideBySig
    Int64BitsToDouble(Int64): PrivateScope, Public, Static, HideBySig
Struct System.Boolean: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IConvertible
    System.IComparable`1[System.Boolean]
    System.IEquatable`1[System.Boolean]
  Fields:
    System.String TrueString : Public, Static, InitOnly
    System.String FalseString : Public, Static, InitOnly
    Int32 True = 1 : Assembly, Static, Literal, HasDefault
    Int32 False = 0 : Assembly, Static, Literal, HasDefault
    System.String TrueLiteral = True : Assembly, Static, Literal, HasDefault
    System.String FalseLiteral = False : Assembly, Static, Literal, HasDefault
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, Boolean&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Buffer: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    BlockCopy(Array, Int32, Array, Int32, Int32): PrivateScope, Public, Static, HideBySig
    InternalBlockCopy(Array, Int32, Array, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    IndexOfByte(Byte*, Byte, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetByte(Array, Int32): PrivateScope, Public, Static, HideBySig
    SetByte(Array, Int32, Byte): PrivateScope, Public, Static, HideBySig
    ByteLength(Array): PrivateScope, Public, Static, HideBySig
    ZeroMemory(Byte*, Int64): PrivateScope, Assembly, Static, HideBySig
    Memcpy(Byte[], Int32, Byte*, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    Memcpy(Byte*, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    Memcpy(Byte*, Byte*, Int32): PrivateScope, Assembly, Static, HideBySig
    Memmove(Byte*, Byte*, UInt32): PrivateScope, Assembly, Static, HideBySig
    MemoryCopy(Void*, Void*, Int64, Int64): PrivateScope, Public, Static, HideBySig
    MemoryCopy(Void*, Void*, UInt64, UInt64): PrivateScope, Public, Static, HideBySig
Struct System.Byte: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Byte]
    System.IEquatable`1[System.Byte]
  Fields:
    Byte MaxValue = 255 : Public, Static, Literal, HasDefault
    Byte MinValue = 0 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Byte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Byte&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Byte&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.CannotUnloadAppDomainException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Char: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IConvertible
    System.IComparable`1[System.Char]
    System.IEquatable`1[System.Char]
  Fields:
    Char m_value : Assembly
    Char MaxValue = ï¿¿ : Public, Static, Literal, HasDefault
    Char MinValue =   : Public, Static, Literal, HasDefault
    Int32 UNICODE_PLANE00_END = 65535 : Assembly, Static, Literal, HasDefault
    Int32 UNICODE_PLANE01_START = 65536 : Assembly, Static, Literal, HasDefault
    Int32 UNICODE_PLANE16_END = 1114111 : Assembly, Static, Literal, HasDefault
    Int32 HIGH_SURROGATE_START = 55296 : Assembly, Static, Literal, HasDefault
    Int32 LOW_SURROGATE_END = 57343 : Assembly, Static, Literal, HasDefault
  Methods:
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Char): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(Char): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, Char&(Out)): PrivateScope, Public, Static, HideBySig
    IsDigit(Char): PrivateScope, Public, Static, HideBySig
    CheckLetter(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsLetter(Char): PrivateScope, Public, Static, HideBySig
    IsWhiteSpace(Char): PrivateScope, Public, Static, HideBySig
    IsUpper(Char): PrivateScope, Public, Static, HideBySig
    IsLower(Char): PrivateScope, Public, Static, HideBySig
    CheckPunctuation(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsPunctuation(Char): PrivateScope, Public, Static, HideBySig
    CheckLetterOrDigit(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsLetterOrDigit(Char): PrivateScope, Public, Static, HideBySig
    ToUpper(Char, CultureInfo): PrivateScope, Public, Static, HideBySig
    ToUpper(Char): PrivateScope, Public, Static, HideBySig
    ToUpperInvariant(Char): PrivateScope, Public, Static, HideBySig
    ToLower(Char, CultureInfo): PrivateScope, Public, Static, HideBySig
    ToLower(Char): PrivateScope, Public, Static, HideBySig
    ToLowerInvariant(Char): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsControl(Char): PrivateScope, Public, Static, HideBySig
    IsControl(String, Int32): PrivateScope, Public, Static, HideBySig
    IsDigit(String, Int32): PrivateScope, Public, Static, HideBySig
    IsLetter(String, Int32): PrivateScope, Public, Static, HideBySig
    IsLetterOrDigit(String, Int32): PrivateScope, Public, Static, HideBySig
    IsLower(String, Int32): PrivateScope, Public, Static, HideBySig
    CheckNumber(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsNumber(Char): PrivateScope, Public, Static, HideBySig
    IsNumber(String, Int32): PrivateScope, Public, Static, HideBySig
    IsPunctuation(String, Int32): PrivateScope, Public, Static, HideBySig
    CheckSeparator(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsSeparator(Char): PrivateScope, Public, Static, HideBySig
    IsSeparator(String, Int32): PrivateScope, Public, Static, HideBySig
    IsSurrogate(Char): PrivateScope, Public, Static, HideBySig
    IsSurrogate(String, Int32): PrivateScope, Public, Static, HideBySig
    CheckSymbol(UnicodeCategory): PrivateScope, Assembly, Static, HideBySig
    IsSymbol(Char): PrivateScope, Public, Static, HideBySig
    IsSymbol(String, Int32): PrivateScope, Public, Static, HideBySig
    IsUpper(String, Int32): PrivateScope, Public, Static, HideBySig
    IsWhiteSpace(String, Int32): PrivateScope, Public, Static, HideBySig
    GetUnicodeCategory(Char): PrivateScope, Public, Static, HideBySig
    GetUnicodeCategory(String, Int32): PrivateScope, Public, Static, HideBySig
    GetNumericValue(Char): PrivateScope, Public, Static, HideBySig
    GetNumericValue(String, Int32): PrivateScope, Public, Static, HideBySig
    IsHighSurrogate(Char): PrivateScope, Public, Static, HideBySig
    IsHighSurrogate(String, Int32): PrivateScope, Public, Static, HideBySig
    IsLowSurrogate(Char): PrivateScope, Public, Static, HideBySig
    IsLowSurrogate(String, Int32): PrivateScope, Public, Static, HideBySig
    IsSurrogatePair(String, Int32): PrivateScope, Public, Static, HideBySig
    IsSurrogatePair(Char, Char): PrivateScope, Public, Static, HideBySig
    ConvertFromUtf32(Int32): PrivateScope, Public, Static, HideBySig
    ConvertToUtf32(Char, Char): PrivateScope, Public, Static, HideBySig
    ConvertToUtf32(String, Int32): PrivateScope, Public, Static, HideBySig
Class System.CharEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
    System.ICloneable
    System.Collections.Generic.IEnumerator`1[System.Char]
    System.IDisposable
  Properties:
    Char Current 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.ConfigEvents: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConfigEvents StartDocument = 0 : Public, Static, Literal, HasDefault
    System.ConfigEvents StartDTD = 1 : Public, Static, Literal, HasDefault
    System.ConfigEvents EndDTD = 2 : Public, Static, Literal, HasDefault
    System.ConfigEvents StartDTDSubset = 3 : Public, Static, Literal, HasDefault
    System.ConfigEvents EndDTDSubset = 4 : Public, Static, Literal, HasDefault
    System.ConfigEvents EndProlog = 5 : Public, Static, Literal, HasDefault
    System.ConfigEvents StartEntity = 6 : Public, Static, Literal, HasDefault
    System.ConfigEvents EndEntity = 7 : Public, Static, Literal, HasDefault
    System.ConfigEvents EndDocument = 8 : Public, Static, Literal, HasDefault
    System.ConfigEvents DataAvailable = 9 : Public, Static, Literal, HasDefault
    System.ConfigEvents LastEvent = 9 : Public, Static, Literal, HasDefault
Struct System.ConfigNodeType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConfigNodeType Element = 1 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Attribute = 2 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Pi = 3 : Public, Static, Literal, HasDefault
    System.ConfigNodeType XmlDecl = 4 : Public, Static, Literal, HasDefault
    System.ConfigNodeType DocType = 5 : Public, Static, Literal, HasDefault
    System.ConfigNodeType DTDAttribute = 6 : Public, Static, Literal, HasDefault
    System.ConfigNodeType EntityDecl = 7 : Public, Static, Literal, HasDefault
    System.ConfigNodeType ElementDecl = 8 : Public, Static, Literal, HasDefault
    System.ConfigNodeType AttlistDecl = 9 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Notation = 10 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Group = 11 : Public, Static, Literal, HasDefault
    System.ConfigNodeType IncludeSect = 12 : Public, Static, Literal, HasDefault
    System.ConfigNodeType PCData = 13 : Public, Static, Literal, HasDefault
    System.ConfigNodeType CData = 14 : Public, Static, Literal, HasDefault
    System.ConfigNodeType IgnoreSect = 15 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Comment = 16 : Public, Static, Literal, HasDefault
    System.ConfigNodeType EntityRef = 17 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Whitespace = 18 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Name = 19 : Public, Static, Literal, HasDefault
    System.ConfigNodeType NMToken = 20 : Public, Static, Literal, HasDefault
    System.ConfigNodeType String = 21 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Peref = 22 : Public, Static, Literal, HasDefault
    System.ConfigNodeType Model = 23 : Public, Static, Literal, HasDefault
    System.ConfigNodeType ATTDef = 24 : Public, Static, Literal, HasDefault
    System.ConfigNodeType ATTType = 25 : Public, Static, Literal, HasDefault
    System.ConfigNodeType ATTPresence = 26 : Public, Static, Literal, HasDefault
    System.ConfigNodeType DTDSubset = 27 : Public, Static, Literal, HasDefault
    System.ConfigNodeType LastNodeType = 28 : Public, Static, Literal, HasDefault
Struct System.ConfigNodeSubType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConfigNodeSubType Version = 28 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Encoding = 29 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Standalone = 30 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType NS = 31 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType XMLSpace = 32 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType XMLLang = 33 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType System = 34 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Public = 35 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType NData = 36 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtCData = 37 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtId = 38 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtIdref = 39 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtIdrefs = 40 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtEntity = 41 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtEntities = 42 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtNmToken = 43 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtNmTokens = 44 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtNotation = 45 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtRequired = 46 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtImplied = 47 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType AtFixed = 48 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType PentityDecl = 49 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Empty = 50 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Any = 51 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Mixed = 52 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Sequence = 53 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Choice = 54 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Star = 55 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Plus = 56 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType Questionmark = 57 : Public, Static, Literal, HasDefault
    System.ConfigNodeSubType LastSubNodeType = 58 : Public, Static, Literal, HasDefault
Class System.BaseConfigHandler: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    NotifyEvent(ConfigEvents): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginChildren(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndChildren(Int32, Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Error(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateNode(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateAttribute(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RunParser(String): PrivateScope, Assembly, HideBySig
Class System.ConfigTreeParser: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.BaseConfigHandler
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Parse(String, String, Boolean): PrivateScope, Assembly, HideBySig
    NotifyEvent(ConfigEvents): PrivateScope, Public, Virtual, HideBySig
    BeginChildren(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    EndChildren(Int32, Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Error(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    CreateNode(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    CreateAttribute(Int32, ConfigNodeSubType, ConfigNodeType, Int32, String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Parse(String, String): PrivateScope, Assembly, HideBySig
Class System.ConfigNode: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.ConfigNode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String Value 'get set' : 
    System.ConfigNode Parent 'get ' : 
    System.Collections.Generic.List`1[System.ConfigNode] Children 'get ' : 
    System.Collections.Generic.List`1[System.Collections.DictionaryEntry] Attributes 'get ' : 
  Methods:
    get_Name(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Value(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_Parent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Children(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Assembly, HideBySig, SpecialName
    AddChild(ConfigNode): PrivateScope, Assembly, HideBySig
    AddAttribute(String, String): PrivateScope, Assembly, HideBySig
    ReplaceAttribute(Int32, String, String): PrivateScope, Assembly, HideBySig
Class System.CLSCompliantAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsCompliant 'get ' : 
  Methods:
    get_IsCompliant(): PrivateScope, Public, HideBySig, SpecialName
Class System.TypeUnloadedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.CompatibilitySwitches: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsCompatibilityBehaviorDefined 'get ' : 
    Boolean IsAppEarlierThanSilverlight4 'get ' : 
    Boolean IsAppEarlierThanWindowsPhone8 'get ' : 
    Boolean IsAppEarlierThanWindowsPhoneMango 'get ' : 
    Boolean IsNetFx40TimeSpanLegacyFormatMode 'get ' : 
    Boolean IsNetFx40LegacySecurityPolicy 'get ' : 
    Boolean IsNetFx45LegacyManagedDeflateStream 'get ' : 
  Methods:
    InitializeSwitches(): PrivateScope, Assembly, Static, HideBySig
    get_IsCompatibilityBehaviorDefined(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsAppEarlierThanSilverlight4(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsAppEarlierThanWindowsPhone8(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsAppEarlierThanWindowsPhoneMango(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNetFx40TimeSpanLegacyFormatMode(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNetFx40LegacySecurityPolicy(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNetFx45LegacyManagedDeflateStream(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.__ComObject: AutoLayout, AnsiClass, Class, Public
  :System.MarshalByRefObject
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetIUnknown(Boolean&(Out)): PrivateScope, Assembly, HideBySig
    GetData(Object): PrivateScope, Assembly, HideBySig
    SetData(Object, Object): PrivateScope, Assembly, HideBySig
    ReleaseAllData(): PrivateScope, Assembly, HideBySig
    GetEventProvider(RuntimeType): PrivateScope, Assembly, HideBySig
    ReleaseSelf(): PrivateScope, Assembly, HideBySig
    FinalReleaseSelf(): PrivateScope, Assembly, HideBySig
Class System.Console: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean IsInputRedirected 'get ' : 
    Boolean IsOutputRedirected 'get ' : 
    Boolean IsErrorRedirected 'get ' : 
    System.IO.TextReader In 'get ' : 
    System.IO.TextWriter Out 'get ' : 
    System.IO.TextWriter Error 'get ' : 
    System.Text.Encoding InputEncoding 'get set' : 
    System.Text.Encoding OutputEncoding 'get set' : 
    System.ConsoleColor BackgroundColor 'get set' : 
    System.ConsoleColor ForegroundColor 'get set' : 
    Int32 BufferHeight 'get set' : 
    Int32 BufferWidth 'get set' : 
    Int32 WindowHeight 'get set' : 
    Int32 WindowWidth 'get set' : 
    Int32 LargestWindowWidth 'get ' : 
    Int32 LargestWindowHeight 'get ' : 
    Int32 WindowLeft 'get set' : 
    Int32 WindowTop 'get set' : 
    Int32 CursorLeft 'get set' : 
    Int32 CursorTop 'get set' : 
    Int32 CursorSize 'get set' : 
    Boolean CursorVisible 'get set' : 
    System.String Title 'get set' : 
    Boolean KeyAvailable 'get ' : 
    Boolean NumberLock 'get ' : 
    Boolean CapsLock 'get ' : 
    Boolean TreatControlCAsInput 'get set' : 
  Events:
    System.ConsoleCancelEventHandler CancelKeyPress: 
  Methods:
    get_IsInputRedirected(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsOutputRedirected(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsErrorRedirected(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_In(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    get_Out(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    get_Error(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    get_InputEncoding(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_InputEncoding(Encoding): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OutputEncoding(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_OutputEncoding(Encoding): PrivateScope, Public, Static, HideBySig, SpecialName
    Beep(): PrivateScope, Public, Static, HideBySig, HasSecurity
    Beep(Int32, Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    Clear(): PrivateScope, Public, Static, HideBySig
    get_BackgroundColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BackgroundColor(ConsoleColor): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForegroundColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ForegroundColor(ConsoleColor): PrivateScope, Public, Static, HideBySig, SpecialName
    ResetColor(): PrivateScope, Public, Static, HideBySig
    MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    MoveBufferArea(Int32, Int32, Int32, Int32, Int32, Int32, Char, ConsoleColor, ConsoleColor): PrivateScope, Public, Static, HideBySig
    get_BufferHeight(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BufferHeight(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BufferWidth(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BufferWidth(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    SetBufferSize(Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_WindowHeight(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowHeight(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WindowWidth(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowWidth(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    SetWindowSize(Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_LargestWindowWidth(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LargestWindowHeight(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WindowLeft(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowLeft(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WindowTop(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WindowTop(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    SetWindowPosition(Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_CursorLeft(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CursorLeft(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CursorTop(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CursorTop(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    SetCursorPosition(Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_CursorSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CursorSize(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CursorVisible(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CursorVisible(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, Static, HideBySig, SpecialName
    ReadKey(): PrivateScope, Public, Static, HideBySig, HasSecurity
    ReadKey(Boolean): PrivateScope, Public, Static, HideBySig, HasSecurity
    get_KeyAvailable(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    get_NumberLock(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CapsLock(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TreatControlCAsInput(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_TreatControlCAsInput(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    add_CancelKeyPress(ConsoleCancelEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_CancelKeyPress(ConsoleCancelEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    OpenStandardError(): PrivateScope, Public, Static, HideBySig, HasSecurity
    OpenStandardError(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    OpenStandardInput(): PrivateScope, Public, Static, HideBySig, HasSecurity
    OpenStandardInput(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    OpenStandardOutput(): PrivateScope, Public, Static, HideBySig, HasSecurity
    OpenStandardOutput(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetIn(TextReader): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetOut(TextWriter): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetError(TextWriter): PrivateScope, Public, Static, HideBySig, HasSecurity
    Read(): PrivateScope, Public, Static, HideBySig, HasSecurity
    ReadLine(): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Boolean): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Char): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Char[]): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Char[], Int32, Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Decimal): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Double): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Single): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(UInt32): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Int64): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(UInt64): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String, Object, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String, Object, Object, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    WriteLine(String, Object[]): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String, Object, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String, Object, Object, Object, Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String, Object[]): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Boolean): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Char): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Char[]): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Char[], Int32, Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Double): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Decimal): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Single): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(UInt32): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Int64): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(UInt64): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Object): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(String): PrivateScope, Public, Static, HideBySig, HasSecurity
Class System.ConsoleCancelEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ConsoleCancelEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ConsoleCancelEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.ConsoleCancelEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.ConsoleSpecialKey): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Cancel 'get set' : 
    System.ConsoleSpecialKey SpecialKey 'get ' : 
  Methods:
    get_Cancel(): PrivateScope, Public, HideBySig, SpecialName
    set_Cancel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SpecialKey(): PrivateScope, Public, HideBySig, SpecialName
Struct System.ConsoleColor: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConsoleColor Black = 0 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkBlue = 1 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkGreen = 2 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkCyan = 3 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkRed = 4 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkMagenta = 5 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkYellow = 6 : Public, Static, Literal, HasDefault
    System.ConsoleColor Gray = 7 : Public, Static, Literal, HasDefault
    System.ConsoleColor DarkGray = 8 : Public, Static, Literal, HasDefault
    System.ConsoleColor Blue = 9 : Public, Static, Literal, HasDefault
    System.ConsoleColor Green = 10 : Public, Static, Literal, HasDefault
    System.ConsoleColor Cyan = 11 : Public, Static, Literal, HasDefault
    System.ConsoleColor Red = 12 : Public, Static, Literal, HasDefault
    System.ConsoleColor Magenta = 13 : Public, Static, Literal, HasDefault
    System.ConsoleColor Yellow = 14 : Public, Static, Literal, HasDefault
    System.ConsoleColor White = 15 : Public, Static, Literal, HasDefault
Struct System.ConsoleKey: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConsoleKey Backspace = 8 : Public, Static, Literal, HasDefault
    System.ConsoleKey Tab = 9 : Public, Static, Literal, HasDefault
    System.ConsoleKey Clear = 12 : Public, Static, Literal, HasDefault
    System.ConsoleKey Enter = 13 : Public, Static, Literal, HasDefault
    System.ConsoleKey Pause = 19 : Public, Static, Literal, HasDefault
    System.ConsoleKey Escape = 27 : Public, Static, Literal, HasDefault
    System.ConsoleKey Spacebar = 32 : Public, Static, Literal, HasDefault
    System.ConsoleKey PageUp = 33 : Public, Static, Literal, HasDefault
    System.ConsoleKey PageDown = 34 : Public, Static, Literal, HasDefault
    System.ConsoleKey End = 35 : Public, Static, Literal, HasDefault
    System.ConsoleKey Home = 36 : Public, Static, Literal, HasDefault
    System.ConsoleKey LeftArrow = 37 : Public, Static, Literal, HasDefault
    System.ConsoleKey UpArrow = 38 : Public, Static, Literal, HasDefault
    System.ConsoleKey RightArrow = 39 : Public, Static, Literal, HasDefault
    System.ConsoleKey DownArrow = 40 : Public, Static, Literal, HasDefault
    System.ConsoleKey Select = 41 : Public, Static, Literal, HasDefault
    System.ConsoleKey Print = 42 : Public, Static, Literal, HasDefault
    System.ConsoleKey Execute = 43 : Public, Static, Literal, HasDefault
    System.ConsoleKey PrintScreen = 44 : Public, Static, Literal, HasDefault
    System.ConsoleKey Insert = 45 : Public, Static, Literal, HasDefault
    System.ConsoleKey Delete = 46 : Public, Static, Literal, HasDefault
    System.ConsoleKey Help = 47 : Public, Static, Literal, HasDefault
    System.ConsoleKey D0 = 48 : Public, Static, Literal, HasDefault
    System.ConsoleKey D1 = 49 : Public, Static, Literal, HasDefault
    System.ConsoleKey D2 = 50 : Public, Static, Literal, HasDefault
    System.ConsoleKey D3 = 51 : Public, Static, Literal, HasDefault
    System.ConsoleKey D4 = 52 : Public, Static, Literal, HasDefault
    System.ConsoleKey D5 = 53 : Public, Static, Literal, HasDefault
    System.ConsoleKey D6 = 54 : Public, Static, Literal, HasDefault
    System.ConsoleKey D7 = 55 : Public, Static, Literal, HasDefault
    System.ConsoleKey D8 = 56 : Public, Static, Literal, HasDefault
    System.ConsoleKey D9 = 57 : Public, Static, Literal, HasDefault
    System.ConsoleKey A = 65 : Public, Static, Literal, HasDefault
    System.ConsoleKey B = 66 : Public, Static, Literal, HasDefault
    System.ConsoleKey C = 67 : Public, Static, Literal, HasDefault
    System.ConsoleKey D = 68 : Public, Static, Literal, HasDefault
    System.ConsoleKey E = 69 : Public, Static, Literal, HasDefault
    System.ConsoleKey F = 70 : Public, Static, Literal, HasDefault
    System.ConsoleKey G = 71 : Public, Static, Literal, HasDefault
    System.ConsoleKey H = 72 : Public, Static, Literal, HasDefault
    System.ConsoleKey I = 73 : Public, Static, Literal, HasDefault
    System.ConsoleKey J = 74 : Public, Static, Literal, HasDefault
    System.ConsoleKey K = 75 : Public, Static, Literal, HasDefault
    System.ConsoleKey L = 76 : Public, Static, Literal, HasDefault
    System.ConsoleKey M = 77 : Public, Static, Literal, HasDefault
    System.ConsoleKey N = 78 : Public, Static, Literal, HasDefault
    System.ConsoleKey O = 79 : Public, Static, Literal, HasDefault
    System.ConsoleKey P = 80 : Public, Static, Literal, HasDefault
    System.ConsoleKey Q = 81 : Public, Static, Literal, HasDefault
    System.ConsoleKey R = 82 : Public, Static, Literal, HasDefault
    System.ConsoleKey S = 83 : Public, Static, Literal, HasDefault
    System.ConsoleKey T = 84 : Public, Static, Literal, HasDefault
    System.ConsoleKey U = 85 : Public, Static, Literal, HasDefault
    System.ConsoleKey V = 86 : Public, Static, Literal, HasDefault
    System.ConsoleKey W = 87 : Public, Static, Literal, HasDefault
    System.ConsoleKey X = 88 : Public, Static, Literal, HasDefault
    System.ConsoleKey Y = 89 : Public, Static, Literal, HasDefault
    System.ConsoleKey Z = 90 : Public, Static, Literal, HasDefault
    System.ConsoleKey LeftWindows = 91 : Public, Static, Literal, HasDefault
    System.ConsoleKey RightWindows = 92 : Public, Static, Literal, HasDefault
    System.ConsoleKey Applications = 93 : Public, Static, Literal, HasDefault
    System.ConsoleKey Sleep = 95 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad0 = 96 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad1 = 97 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad2 = 98 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad3 = 99 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad4 = 100 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad5 = 101 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad6 = 102 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad7 = 103 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad8 = 104 : Public, Static, Literal, HasDefault
    System.ConsoleKey NumPad9 = 105 : Public, Static, Literal, HasDefault
    System.ConsoleKey Multiply = 106 : Public, Static, Literal, HasDefault
    System.ConsoleKey Add = 107 : Public, Static, Literal, HasDefault
    System.ConsoleKey Separator = 108 : Public, Static, Literal, HasDefault
    System.ConsoleKey Subtract = 109 : Public, Static, Literal, HasDefault
    System.ConsoleKey Decimal = 110 : Public, Static, Literal, HasDefault
    System.ConsoleKey Divide = 111 : Public, Static, Literal, HasDefault
    System.ConsoleKey F1 = 112 : Public, Static, Literal, HasDefault
    System.ConsoleKey F2 = 113 : Public, Static, Literal, HasDefault
    System.ConsoleKey F3 = 114 : Public, Static, Literal, HasDefault
    System.ConsoleKey F4 = 115 : Public, Static, Literal, HasDefault
    System.ConsoleKey F5 = 116 : Public, Static, Literal, HasDefault
    System.ConsoleKey F6 = 117 : Public, Static, Literal, HasDefault
    System.ConsoleKey F7 = 118 : Public, Static, Literal, HasDefault
    System.ConsoleKey F8 = 119 : Public, Static, Literal, HasDefault
    System.ConsoleKey F9 = 120 : Public, Static, Literal, HasDefault
    System.ConsoleKey F10 = 121 : Public, Static, Literal, HasDefault
    System.ConsoleKey F11 = 122 : Public, Static, Literal, HasDefault
    System.ConsoleKey F12 = 123 : Public, Static, Literal, HasDefault
    System.ConsoleKey F13 = 124 : Public, Static, Literal, HasDefault
    System.ConsoleKey F14 = 125 : Public, Static, Literal, HasDefault
    System.ConsoleKey F15 = 126 : Public, Static, Literal, HasDefault
    System.ConsoleKey F16 = 127 : Public, Static, Literal, HasDefault
    System.ConsoleKey F17 = 128 : Public, Static, Literal, HasDefault
    System.ConsoleKey F18 = 129 : Public, Static, Literal, HasDefault
    System.ConsoleKey F19 = 130 : Public, Static, Literal, HasDefault
    System.ConsoleKey F20 = 131 : Public, Static, Literal, HasDefault
    System.ConsoleKey F21 = 132 : Public, Static, Literal, HasDefault
    System.ConsoleKey F22 = 133 : Public, Static, Literal, HasDefault
    System.ConsoleKey F23 = 134 : Public, Static, Literal, HasDefault
    System.ConsoleKey F24 = 135 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserBack = 166 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserForward = 167 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserRefresh = 168 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserStop = 169 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserSearch = 170 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserFavorites = 171 : Public, Static, Literal, HasDefault
    System.ConsoleKey BrowserHome = 172 : Public, Static, Literal, HasDefault
    System.ConsoleKey VolumeMute = 173 : Public, Static, Literal, HasDefault
    System.ConsoleKey VolumeDown = 174 : Public, Static, Literal, HasDefault
    System.ConsoleKey VolumeUp = 175 : Public, Static, Literal, HasDefault
    System.ConsoleKey MediaNext = 176 : Public, Static, Literal, HasDefault
    System.ConsoleKey MediaPrevious = 177 : Public, Static, Literal, HasDefault
    System.ConsoleKey MediaStop = 178 : Public, Static, Literal, HasDefault
    System.ConsoleKey MediaPlay = 179 : Public, Static, Literal, HasDefault
    System.ConsoleKey LaunchMail = 180 : Public, Static, Literal, HasDefault
    System.ConsoleKey LaunchMediaSelect = 181 : Public, Static, Literal, HasDefault
    System.ConsoleKey LaunchApp1 = 182 : Public, Static, Literal, HasDefault
    System.ConsoleKey LaunchApp2 = 183 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem1 = 186 : Public, Static, Literal, HasDefault
    System.ConsoleKey OemPlus = 187 : Public, Static, Literal, HasDefault
    System.ConsoleKey OemComma = 188 : Public, Static, Literal, HasDefault
    System.ConsoleKey OemMinus = 189 : Public, Static, Literal, HasDefault
    System.ConsoleKey OemPeriod = 190 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem2 = 191 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem3 = 192 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem4 = 219 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem5 = 220 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem6 = 221 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem7 = 222 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem8 = 223 : Public, Static, Literal, HasDefault
    System.ConsoleKey Oem102 = 226 : Public, Static, Literal, HasDefault
    System.ConsoleKey Process = 229 : Public, Static, Literal, HasDefault
    System.ConsoleKey Packet = 231 : Public, Static, Literal, HasDefault
    System.ConsoleKey Attention = 246 : Public, Static, Literal, HasDefault
    System.ConsoleKey CrSel = 247 : Public, Static, Literal, HasDefault
    System.ConsoleKey ExSel = 248 : Public, Static, Literal, HasDefault
    System.ConsoleKey EraseEndOfFile = 249 : Public, Static, Literal, HasDefault
    System.ConsoleKey Play = 250 : Public, Static, Literal, HasDefault
    System.ConsoleKey Zoom = 251 : Public, Static, Literal, HasDefault
    System.ConsoleKey NoName = 252 : Public, Static, Literal, HasDefault
    System.ConsoleKey Pa1 = 253 : Public, Static, Literal, HasDefault
    System.ConsoleKey OemClear = 254 : Public, Static, Literal, HasDefault
Struct System.ConsoleKeyInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char, System.ConsoleKey, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char KeyChar 'get ' : 
    System.ConsoleKey Key 'get ' : 
    System.ConsoleModifiers Modifiers 'get ' : 
  Methods:
    get_KeyChar(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_Modifiers(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ConsoleKeyInfo): PrivateScope, Public, HideBySig
    op_Equality(ConsoleKeyInfo, ConsoleKeyInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ConsoleKeyInfo, ConsoleKeyInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct System.ConsoleModifiers: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConsoleModifiers Alt = 1 : Public, Static, Literal, HasDefault
    System.ConsoleModifiers Shift = 2 : Public, Static, Literal, HasDefault
    System.ConsoleModifiers Control = 4 : Public, Static, Literal, HasDefault
Struct System.ConsoleSpecialKey: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ConsoleSpecialKey ControlC = 0 : Public, Static, Literal, HasDefault
    System.ConsoleSpecialKey ControlBreak = 1 : Public, Static, Literal, HasDefault
Class System.ContextMarshalException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Base64FormattingOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Base64FormattingOptions None = 0 : Public, Static, Literal, HasDefault
    System.Base64FormattingOptions InsertLineBreaks = 1 : Public, Static, Literal, HasDefault
Class System.Convert: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.RuntimeType[] ConvertTypes : Assembly, Static, InitOnly
    Char[] base64Table : Assembly, Static, InitOnly
    System.Object DBNull : Public, Static, InitOnly
  Methods:
    GetTypeCode(Object): PrivateScope, Public, Static, HideBySig
    IsDBNull(Object): PrivateScope, Public, Static, HideBySig
    ChangeType(Object, TypeCode): PrivateScope, Public, Static, HideBySig
    ChangeType(Object, TypeCode, IFormatProvider): PrivateScope, Public, Static, HideBySig
    DefaultToType(IConvertible, Type, IFormatProvider): PrivateScope, Assembly, Static, HideBySig
    ChangeType(Object, Type): PrivateScope, Public, Static, HideBySig
    ChangeType(Object, Type, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToBoolean(Object): PrivateScope, Public, Static, HideBySig
    ToBoolean(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToBoolean(Boolean): PrivateScope, Public, Static, HideBySig
    ToBoolean(SByte): PrivateScope, Public, Static, HideBySig
    ToBoolean(Char): PrivateScope, Public, Static, HideBySig
    ToBoolean(Byte): PrivateScope, Public, Static, HideBySig
    ToBoolean(Int16): PrivateScope, Public, Static, HideBySig
    ToBoolean(UInt16): PrivateScope, Public, Static, HideBySig
    ToBoolean(Int32): PrivateScope, Public, Static, HideBySig
    ToBoolean(UInt32): PrivateScope, Public, Static, HideBySig
    ToBoolean(Int64): PrivateScope, Public, Static, HideBySig
    ToBoolean(UInt64): PrivateScope, Public, Static, HideBySig
    ToBoolean(String): PrivateScope, Public, Static, HideBySig
    ToBoolean(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToBoolean(Single): PrivateScope, Public, Static, HideBySig
    ToBoolean(Double): PrivateScope, Public, Static, HideBySig
    ToBoolean(Decimal): PrivateScope, Public, Static, HideBySig
    ToBoolean(DateTime): PrivateScope, Public, Static, HideBySig
    ToChar(Object): PrivateScope, Public, Static, HideBySig
    ToChar(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToChar(Boolean): PrivateScope, Public, Static, HideBySig
    ToChar(Char): PrivateScope, Public, Static, HideBySig
    ToChar(SByte): PrivateScope, Public, Static, HideBySig
    ToChar(Byte): PrivateScope, Public, Static, HideBySig
    ToChar(Int16): PrivateScope, Public, Static, HideBySig
    ToChar(UInt16): PrivateScope, Public, Static, HideBySig
    ToChar(Int32): PrivateScope, Public, Static, HideBySig
    ToChar(UInt32): PrivateScope, Public, Static, HideBySig
    ToChar(Int64): PrivateScope, Public, Static, HideBySig
    ToChar(UInt64): PrivateScope, Public, Static, HideBySig
    ToChar(String): PrivateScope, Public, Static, HideBySig
    ToChar(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToChar(Single): PrivateScope, Public, Static, HideBySig
    ToChar(Double): PrivateScope, Public, Static, HideBySig
    ToChar(Decimal): PrivateScope, Public, Static, HideBySig
    ToChar(DateTime): PrivateScope, Public, Static, HideBySig
    ToSByte(Object): PrivateScope, Public, Static, HideBySig
    ToSByte(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToSByte(Boolean): PrivateScope, Public, Static, HideBySig
    ToSByte(SByte): PrivateScope, Public, Static, HideBySig
    ToSByte(Char): PrivateScope, Public, Static, HideBySig
    ToSByte(Byte): PrivateScope, Public, Static, HideBySig
    ToSByte(Int16): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt16): PrivateScope, Public, Static, HideBySig
    ToSByte(Int32): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt32): PrivateScope, Public, Static, HideBySig
    ToSByte(Int64): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt64): PrivateScope, Public, Static, HideBySig
    ToSByte(Single): PrivateScope, Public, Static, HideBySig
    ToSByte(Double): PrivateScope, Public, Static, HideBySig
    ToSByte(Decimal): PrivateScope, Public, Static, HideBySig
    ToSByte(String): PrivateScope, Public, Static, HideBySig
    ToSByte(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToSByte(DateTime): PrivateScope, Public, Static, HideBySig
    ToByte(Object): PrivateScope, Public, Static, HideBySig
    ToByte(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToByte(Boolean): PrivateScope, Public, Static, HideBySig
    ToByte(Byte): PrivateScope, Public, Static, HideBySig
    ToByte(Char): PrivateScope, Public, Static, HideBySig
    ToByte(SByte): PrivateScope, Public, Static, HideBySig
    ToByte(Int16): PrivateScope, Public, Static, HideBySig
    ToByte(UInt16): PrivateScope, Public, Static, HideBySig
    ToByte(Int32): PrivateScope, Public, Static, HideBySig
    ToByte(UInt32): PrivateScope, Public, Static, HideBySig
    ToByte(Int64): PrivateScope, Public, Static, HideBySig
    ToByte(UInt64): PrivateScope, Public, Static, HideBySig
    ToByte(Single): PrivateScope, Public, Static, HideBySig
    ToByte(Double): PrivateScope, Public, Static, HideBySig
    ToByte(Decimal): PrivateScope, Public, Static, HideBySig
    ToByte(String): PrivateScope, Public, Static, HideBySig
    ToByte(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToByte(DateTime): PrivateScope, Public, Static, HideBySig
    ToInt16(Object): PrivateScope, Public, Static, HideBySig
    ToInt16(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt16(Boolean): PrivateScope, Public, Static, HideBySig
    ToInt16(Char): PrivateScope, Public, Static, HideBySig
    ToInt16(SByte): PrivateScope, Public, Static, HideBySig
    ToInt16(Byte): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt16): PrivateScope, Public, Static, HideBySig
    ToInt16(Int32): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt32): PrivateScope, Public, Static, HideBySig
    ToInt16(Int16): PrivateScope, Public, Static, HideBySig
    ToInt16(Int64): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt16(Single): PrivateScope, Public, Static, HideBySig
    ToInt16(Double): PrivateScope, Public, Static, HideBySig
    ToInt16(Decimal): PrivateScope, Public, Static, HideBySig
    ToInt16(String): PrivateScope, Public, Static, HideBySig
    ToInt16(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt16(DateTime): PrivateScope, Public, Static, HideBySig
    ToUInt16(Object): PrivateScope, Public, Static, HideBySig
    ToUInt16(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt16(Boolean): PrivateScope, Public, Static, HideBySig
    ToUInt16(Char): PrivateScope, Public, Static, HideBySig
    ToUInt16(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt16(Byte): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt16(UInt16): PrivateScope, Public, Static, HideBySig
    ToUInt16(UInt32): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int64): PrivateScope, Public, Static, HideBySig
    ToUInt16(UInt64): PrivateScope, Public, Static, HideBySig
    ToUInt16(Single): PrivateScope, Public, Static, HideBySig
    ToUInt16(Double): PrivateScope, Public, Static, HideBySig
    ToUInt16(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt16(String): PrivateScope, Public, Static, HideBySig
    ToUInt16(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt16(DateTime): PrivateScope, Public, Static, HideBySig
    ToInt32(Object): PrivateScope, Public, Static, HideBySig
    ToInt32(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt32(Boolean): PrivateScope, Public, Static, HideBySig
    ToInt32(Char): PrivateScope, Public, Static, HideBySig
    ToInt32(SByte): PrivateScope, Public, Static, HideBySig
    ToInt32(Byte): PrivateScope, Public, Static, HideBySig
    ToInt32(Int16): PrivateScope, Public, Static, HideBySig
    ToInt32(UInt16): PrivateScope, Public, Static, HideBySig
    ToInt32(UInt32): PrivateScope, Public, Static, HideBySig
    ToInt32(Int32): PrivateScope, Public, Static, HideBySig
    ToInt32(Int64): PrivateScope, Public, Static, HideBySig
    ToInt32(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt32(Single): PrivateScope, Public, Static, HideBySig
    ToInt32(Double): PrivateScope, Public, Static, HideBySig
    ToInt32(Decimal): PrivateScope, Public, Static, HideBySig
    ToInt32(String): PrivateScope, Public, Static, HideBySig
    ToInt32(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt32(DateTime): PrivateScope, Public, Static, HideBySig
    ToUInt32(Object): PrivateScope, Public, Static, HideBySig
    ToUInt32(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt32(Boolean): PrivateScope, Public, Static, HideBySig
    ToUInt32(Char): PrivateScope, Public, Static, HideBySig
    ToUInt32(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt32(Byte): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt32(UInt16): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt32(UInt32): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int64): PrivateScope, Public, Static, HideBySig
    ToUInt32(UInt64): PrivateScope, Public, Static, HideBySig
    ToUInt32(Single): PrivateScope, Public, Static, HideBySig
    ToUInt32(Double): PrivateScope, Public, Static, HideBySig
    ToUInt32(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt32(String): PrivateScope, Public, Static, HideBySig
    ToUInt32(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt32(DateTime): PrivateScope, Public, Static, HideBySig
    ToInt64(Object): PrivateScope, Public, Static, HideBySig
    ToInt64(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt64(Boolean): PrivateScope, Public, Static, HideBySig
    ToInt64(Char): PrivateScope, Public, Static, HideBySig
    ToInt64(SByte): PrivateScope, Public, Static, HideBySig
    ToInt64(Byte): PrivateScope, Public, Static, HideBySig
    ToInt64(Int16): PrivateScope, Public, Static, HideBySig
    ToInt64(UInt16): PrivateScope, Public, Static, HideBySig
    ToInt64(Int32): PrivateScope, Public, Static, HideBySig
    ToInt64(UInt32): PrivateScope, Public, Static, HideBySig
    ToInt64(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt64(Int64): PrivateScope, Public, Static, HideBySig
    ToInt64(Single): PrivateScope, Public, Static, HideBySig
    ToInt64(Double): PrivateScope, Public, Static, HideBySig
    ToInt64(Decimal): PrivateScope, Public, Static, HideBySig
    ToInt64(String): PrivateScope, Public, Static, HideBySig
    ToInt64(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToInt64(DateTime): PrivateScope, Public, Static, HideBySig
    ToUInt64(Object): PrivateScope, Public, Static, HideBySig
    ToUInt64(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt64(Boolean): PrivateScope, Public, Static, HideBySig
    ToUInt64(Char): PrivateScope, Public, Static, HideBySig
    ToUInt64(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt64(Byte): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt64(UInt16): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt64(UInt32): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int64): PrivateScope, Public, Static, HideBySig
    ToUInt64(UInt64): PrivateScope, Public, Static, HideBySig
    ToUInt64(Single): PrivateScope, Public, Static, HideBySig
    ToUInt64(Double): PrivateScope, Public, Static, HideBySig
    ToUInt64(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt64(String): PrivateScope, Public, Static, HideBySig
    ToUInt64(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToUInt64(DateTime): PrivateScope, Public, Static, HideBySig
    ToSingle(Object): PrivateScope, Public, Static, HideBySig
    ToSingle(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToSingle(SByte): PrivateScope, Public, Static, HideBySig
    ToSingle(Byte): PrivateScope, Public, Static, HideBySig
    ToSingle(Char): PrivateScope, Public, Static, HideBySig
    ToSingle(Int16): PrivateScope, Public, Static, HideBySig
    ToSingle(UInt16): PrivateScope, Public, Static, HideBySig
    ToSingle(Int32): PrivateScope, Public, Static, HideBySig
    ToSingle(UInt32): PrivateScope, Public, Static, HideBySig
    ToSingle(Int64): PrivateScope, Public, Static, HideBySig
    ToSingle(UInt64): PrivateScope, Public, Static, HideBySig
    ToSingle(Single): PrivateScope, Public, Static, HideBySig
    ToSingle(Double): PrivateScope, Public, Static, HideBySig
    ToSingle(Decimal): PrivateScope, Public, Static, HideBySig
    ToSingle(String): PrivateScope, Public, Static, HideBySig
    ToSingle(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToSingle(Boolean): PrivateScope, Public, Static, HideBySig
    ToSingle(DateTime): PrivateScope, Public, Static, HideBySig
    ToDouble(Object): PrivateScope, Public, Static, HideBySig
    ToDouble(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDouble(SByte): PrivateScope, Public, Static, HideBySig
    ToDouble(Byte): PrivateScope, Public, Static, HideBySig
    ToDouble(Int16): PrivateScope, Public, Static, HideBySig
    ToDouble(Char): PrivateScope, Public, Static, HideBySig
    ToDouble(UInt16): PrivateScope, Public, Static, HideBySig
    ToDouble(Int32): PrivateScope, Public, Static, HideBySig
    ToDouble(UInt32): PrivateScope, Public, Static, HideBySig
    ToDouble(Int64): PrivateScope, Public, Static, HideBySig
    ToDouble(UInt64): PrivateScope, Public, Static, HideBySig
    ToDouble(Single): PrivateScope, Public, Static, HideBySig
    ToDouble(Double): PrivateScope, Public, Static, HideBySig
    ToDouble(Decimal): PrivateScope, Public, Static, HideBySig
    ToDouble(String): PrivateScope, Public, Static, HideBySig
    ToDouble(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDouble(Boolean): PrivateScope, Public, Static, HideBySig
    ToDouble(DateTime): PrivateScope, Public, Static, HideBySig
    ToDecimal(Object): PrivateScope, Public, Static, HideBySig
    ToDecimal(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDecimal(SByte): PrivateScope, Public, Static, HideBySig
    ToDecimal(Byte): PrivateScope, Public, Static, HideBySig
    ToDecimal(Char): PrivateScope, Public, Static, HideBySig
    ToDecimal(Int16): PrivateScope, Public, Static, HideBySig
    ToDecimal(UInt16): PrivateScope, Public, Static, HideBySig
    ToDecimal(Int32): PrivateScope, Public, Static, HideBySig
    ToDecimal(UInt32): PrivateScope, Public, Static, HideBySig
    ToDecimal(Int64): PrivateScope, Public, Static, HideBySig
    ToDecimal(UInt64): PrivateScope, Public, Static, HideBySig
    ToDecimal(Single): PrivateScope, Public, Static, HideBySig
    ToDecimal(Double): PrivateScope, Public, Static, HideBySig
    ToDecimal(String): PrivateScope, Public, Static, HideBySig
    ToDecimal(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDecimal(Decimal): PrivateScope, Public, Static, HideBySig
    ToDecimal(Boolean): PrivateScope, Public, Static, HideBySig
    ToDecimal(DateTime): PrivateScope, Public, Static, HideBySig
    ToDateTime(DateTime): PrivateScope, Public, Static, HideBySig
    ToDateTime(Object): PrivateScope, Public, Static, HideBySig
    ToDateTime(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDateTime(String): PrivateScope, Public, Static, HideBySig
    ToDateTime(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToDateTime(SByte): PrivateScope, Public, Static, HideBySig
    ToDateTime(Byte): PrivateScope, Public, Static, HideBySig
    ToDateTime(Int16): PrivateScope, Public, Static, HideBySig
    ToDateTime(UInt16): PrivateScope, Public, Static, HideBySig
    ToDateTime(Int32): PrivateScope, Public, Static, HideBySig
    ToDateTime(UInt32): PrivateScope, Public, Static, HideBySig
    ToDateTime(Int64): PrivateScope, Public, Static, HideBySig
    ToDateTime(UInt64): PrivateScope, Public, Static, HideBySig
    ToDateTime(Boolean): PrivateScope, Public, Static, HideBySig
    ToDateTime(Char): PrivateScope, Public, Static, HideBySig
    ToDateTime(Single): PrivateScope, Public, Static, HideBySig
    ToDateTime(Double): PrivateScope, Public, Static, HideBySig
    ToDateTime(Decimal): PrivateScope, Public, Static, HideBySig
    ToString(Object): PrivateScope, Public, Static, HideBySig
    ToString(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Boolean): PrivateScope, Public, Static, HideBySig
    ToString(Boolean, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Char): PrivateScope, Public, Static, HideBySig
    ToString(Char, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(SByte): PrivateScope, Public, Static, HideBySig
    ToString(SByte, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Byte): PrivateScope, Public, Static, HideBySig
    ToString(Byte, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Int16): PrivateScope, Public, Static, HideBySig
    ToString(Int16, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(UInt16): PrivateScope, Public, Static, HideBySig
    ToString(UInt16, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int32, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(UInt32): PrivateScope, Public, Static, HideBySig
    ToString(UInt32, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Int64): PrivateScope, Public, Static, HideBySig
    ToString(Int64, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(UInt64): PrivateScope, Public, Static, HideBySig
    ToString(UInt64, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Single): PrivateScope, Public, Static, HideBySig
    ToString(Single, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Double): PrivateScope, Public, Static, HideBySig
    ToString(Double, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Decimal): PrivateScope, Public, Static, HideBySig
    ToString(Decimal, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(DateTime): PrivateScope, Public, Static, HideBySig
    ToString(DateTime, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(String): PrivateScope, Public, Static, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToByte(String, Int32): PrivateScope, Public, Static, HideBySig
    ToSByte(String, Int32): PrivateScope, Public, Static, HideBySig
    ToInt16(String, Int32): PrivateScope, Public, Static, HideBySig
    ToUInt16(String, Int32): PrivateScope, Public, Static, HideBySig
    ToInt32(String, Int32): PrivateScope, Public, Static, HideBySig
    ToUInt32(String, Int32): PrivateScope, Public, Static, HideBySig
    ToInt64(String, Int32): PrivateScope, Public, Static, HideBySig
    ToUInt64(String, Int32): PrivateScope, Public, Static, HideBySig
    ToString(Byte, Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int16, Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int32, Int32): PrivateScope, Public, Static, HideBySig
    ToString(Int64, Int32): PrivateScope, Public, Static, HideBySig
    ToBase64String(Byte[]): PrivateScope, Public, Static, HideBySig
    ToBase64String(Byte[], Base64FormattingOptions): PrivateScope, Public, Static, HideBySig
    ToBase64String(Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ToBase64String(Byte[], Int32, Int32, Base64FormattingOptions): PrivateScope, Public, Static, HideBySig
    ToBase64CharArray(Byte[], Int32, Int32, Char[], Int32): PrivateScope, Public, Static, HideBySig
    ToBase64CharArray(Byte[], Int32, Int32, Char[], Int32, Base64FormattingOptions): PrivateScope, Public, Static, HideBySig
    FromBase64String(String): PrivateScope, Public, Static, HideBySig
    FromBase64CharArray(Char[], Int32, Int32): PrivateScope, Public, Static, HideBySig
Class System.ContextBoundObject: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.MarshalByRefObject
Class System.ContextStaticAttribute: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Currency: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Decimal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 m_value : Assembly
  Methods:
    FromOACurrency(Int64): PrivateScope, Public, Static, HideBySig
    ToOACurrency(): PrivateScope, Public, HideBySig
    ToDecimal(Currency): PrivateScope, Public, Static, HideBySig
Class System.CurrentSystemTimeZone: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.TimeZone
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String StandardName 'get ' : 
    System.String DaylightName 'get ' : 
  Methods:
    get_StandardName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DaylightName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetUtcOffsetFromUniversalTime(DateTime, Boolean&): PrivateScope, Assembly, HideBySig
    ToLocalTime(DateTime): PrivateScope, Public, Virtual, HideBySig
    GetDaylightChanges(Int32): PrivateScope, Public, Virtual, HideBySig
    GetUtcOffset(DateTime): PrivateScope, Public, Virtual, HideBySig
    nativeGetTimeZoneMinuteOffset(): PrivateScope, Assembly, Static, HideBySig
    nativeGetDaylightName(): PrivateScope, Assembly, Static, HideBySig
    nativeGetStandardName(): PrivateScope, Assembly, Static, HideBySig
    nativeGetDaylightChanges(Int32): PrivateScope, Assembly, Static, HideBySig
Struct System.DayOfWeek: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.DayOfWeek Sunday = 0 : Public, Static, Literal, HasDefault
    System.DayOfWeek Monday = 1 : Public, Static, Literal, HasDefault
    System.DayOfWeek Tuesday = 2 : Public, Static, Literal, HasDefault
    System.DayOfWeek Wednesday = 3 : Public, Static, Literal, HasDefault
    System.DayOfWeek Thursday = 4 : Public, Static, Literal, HasDefault
    System.DayOfWeek Friday = 5 : Public, Static, Literal, HasDefault
    System.DayOfWeek Saturday = 6 : Public, Static, Literal, HasDefault
Class System.DBNull: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.IConvertible
  Fields:
    System.DBNull Value : Public, Static, InitOnly
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Decimal: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Currency): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Boolean, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
    System.IComparable
    System.IConvertible
    System.Runtime.Serialization.IDeserializationCallback
    System.IComparable`1[System.Decimal]
    System.IEquatable`1[System.Decimal]
  Fields:
    System.Decimal Zero : Public, Static, InitOnly
    System.Decimal One : Public, Static, InitOnly
    System.Decimal MinusOne : Public, Static, InitOnly
    System.Decimal MaxValue : Public, Static, InitOnly
    System.Decimal MinValue : Public, Static, InitOnly
  Methods:
    ToOACurrency(Decimal): PrivateScope, Public, Static, HideBySig
    FromOACurrency(Int64): PrivateScope, Public, Static, HideBySig
    Abs(Decimal): PrivateScope, Assembly, Static, HideBySig
    Add(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Ceiling(Decimal): PrivateScope, Public, Static, HideBySig
    Compare(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Decimal): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Floor(Decimal): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Decimal&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Decimal&(Out)): PrivateScope, Public, Static, HideBySig
    GetBits(Decimal): PrivateScope, Public, Static, HideBySig
    GetBytes(Decimal, Byte[]): PrivateScope, Assembly, Static, HideBySig
    ToDecimal(Byte[]): PrivateScope, Assembly, Static, HideBySig
    Max(Decimal, Decimal): PrivateScope, Assembly, Static, HideBySig
    Min(Decimal, Decimal): PrivateScope, Assembly, Static, HideBySig
    Remainder(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Multiply(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Negate(Decimal): PrivateScope, Public, Static, HideBySig
    Round(Decimal): PrivateScope, Public, Static, HideBySig
    Round(Decimal, Int32): PrivateScope, Public, Static, HideBySig
    Round(Decimal, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Round(Decimal, Int32, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Subtract(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    ToByte(Decimal): PrivateScope, Public, Static, HideBySig
    ToSByte(Decimal): PrivateScope, Public, Static, HideBySig
    ToInt16(Decimal): PrivateScope, Public, Static, HideBySig
    ToCurrency(Decimal): PrivateScope, Assembly, Static, HideBySig
    ToDouble(Decimal): PrivateScope, Public, Static, HideBySig
    FCallToInt32(Decimal): PrivateScope, Assembly, Static, HideBySig
    ToInt32(Decimal): PrivateScope, Public, Static, HideBySig
    ToInt64(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt16(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt32(Decimal): PrivateScope, Public, Static, HideBySig
    ToUInt64(Decimal): PrivateScope, Public, Static, HideBySig
    ToSingle(Decimal): PrivateScope, Public, Static, HideBySig
    Truncate(Decimal): PrivateScope, Public, Static, HideBySig
    op_Implicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Char): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryPlus(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Decrement(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Modulus(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Decimal, Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.DefaultBinder: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Reflection.Binder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertPrimitiveObjectToType(Object, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    BindToMethod(BindingFlags, MethodBase[], Object[]&, ParameterModifier[], CultureInfo, String[], Object&(Out)): PrivateScope, Public, Virtual, HideBySig
    BindToField(BindingFlags, FieldInfo[], Object, CultureInfo): PrivateScope, Public, Virtual, HideBySig
    SelectMethod(BindingFlags, MethodBase[], Type[], ParameterModifier[]): PrivateScope, Public, Virtual, HideBySig
    SelectProperty(BindingFlags, PropertyInfo[], Type, Type[], ParameterModifier[]): PrivateScope, Public, Virtual, HideBySig
    ChangeType(Object, Type, CultureInfo): PrivateScope, Public, Virtual, HideBySig
    ReorderArgumentArray(Object[]&, Object): PrivateScope, Public, Virtual, HideBySig
    ExactBinding(MethodBase[], Type[], ParameterModifier[]): PrivateScope, Public, Static, HideBySig
    ExactPropertyBinding(PropertyInfo[], Type, Type[], ParameterModifier[]): PrivateScope, Public, Static, HideBySig
    CompareMethodSigAndName(MethodBase, MethodBase): PrivateScope, Assembly, Static, HideBySig
    GetHierarchyDepth(Type): PrivateScope, Assembly, Static, HideBySig
    FindMostDerivedNewSlotMeth(MethodBase[], Int32): PrivateScope, Assembly, Static, HideBySig
Class System.DelegateSerializationHolder: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  Interfaces:
    System.Runtime.Serialization.IObjectReference
    System.Runtime.Serialization.ISerializable
  Methods:
    GetDelegateSerializationInfo(SerializationInfo, Type, Object, MethodInfo, Int32): PrivateScope, Assembly, Static, HideBySig
    GetRealObject(StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.DivideByZeroException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArithmeticException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Double: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Double]
    System.IEquatable`1[System.Double]
  Fields:
    Double m_value : Assembly
    Double NegativeZero : Assembly, Static
    Double MinValue = -1,79769313486232E+308 : Public, Static, Literal, HasDefault
    Double MaxValue = 1,79769313486232E+308 : Public, Static, Literal, HasDefault
    Double Epsilon = 4,94065645841247E-324 : Public, Static, Literal, HasDefault
    Double NegativeInfinity = -â : Public, Static, Literal, HasDefault
    Double PositiveInfinity = â : Public, Static, Literal, HasDefault
    Double NaN = NaN : Public, Static, Literal, HasDefault
  Methods:
    IsInfinity(Double): PrivateScope, Public, Static, HideBySig
    IsPositiveInfinity(Double): PrivateScope, Public, Static, HideBySig
    IsNegativeInfinity(Double): PrivateScope, Public, Static, HideBySig
    IsNegative(Double): PrivateScope, Assembly, Static, HideBySig
    IsNaN(Double): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Double, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Double&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Double&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.DuplicateWaitObjectException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArgumentException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Empty: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    System.Empty Value : Public, Static, InitOnly
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Enum: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
  Methods:
    ToUInt64(Object): PrivateScope, Assembly, Static, HideBySig
    InternalGetUnderlyingType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    TryParse(String, TEnum&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, Boolean, TEnum&(Out)): PrivateScope, Public, Static, HideBySig
    Parse(Type, String): PrivateScope, Public, Static, HideBySig
    Parse(Type, String, Boolean): PrivateScope, Public, Static, HideBySig
    GetUnderlyingType(Type): PrivateScope, Public, Static, HideBySig
    GetValues(Type): PrivateScope, Public, Static, HideBySig
    InternalGetValues(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetName(Type, Object): PrivateScope, Public, Static, HideBySig
    GetNames(Type): PrivateScope, Public, Static, HideBySig
    InternalGetNames(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    ToObject(Type, Object): PrivateScope, Public, Static, HideBySig
    IsDefined(Type, Object): PrivateScope, Public, Static, HideBySig
    Format(Type, Object, String): PrivateScope, Public, Static, HideBySig
    GetValue(): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    HasFlag(Enum): PrivateScope, Public, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToObject(Type, SByte): PrivateScope, Public, Static, HideBySig
    ToObject(Type, Int16): PrivateScope, Public, Static, HideBySig
    ToObject(Type, Int32): PrivateScope, Public, Static, HideBySig
    ToObject(Type, Byte): PrivateScope, Public, Static, HideBySig
    ToObject(Type, UInt16): PrivateScope, Public, Static, HideBySig
    ToObject(Type, UInt32): PrivateScope, Public, Static, HideBySig
    ToObject(Type, Int64): PrivateScope, Public, Static, HideBySig
    ToObject(Type, UInt64): PrivateScope, Public, Static, HideBySig
Class System.EntryPointNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.TypeLoadException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.DllNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.TypeLoadException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.EnvironmentVariableTarget: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.EnvironmentVariableTarget Process = 0 : Public, Static, Literal, HasDefault
    System.EnvironmentVariableTarget User = 1 : Public, Static, Literal, HasDefault
    System.EnvironmentVariableTarget Machine = 2 : Public, Static, Literal, HasDefault
Class System.Environment: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Int32 TickCount 'get ' : 
    Int32 ExitCode 'get set' : 
    Boolean IsCLRHosted 'get ' : 
    System.String CommandLine 'get ' : 
    System.String CurrentDirectory 'get set' : 
    System.String SystemDirectory 'get ' : 
    System.String InternalWindowsDirectory 'get ' : 
    System.String MachineName 'get ' : 
    Int32 ProcessorCount 'get ' : 
    Int32 SystemPageSize 'get ' : 
    System.String NewLine 'get ' : 
    System.Version Version 'get ' : 
    Int64 WorkingSet 'get ' : 
    System.OperatingSystem OSVersion 'get ' : 
    Boolean IsWindows8OrAbove 'get ' : 
    Boolean IsWinRTSupported 'get ' : 
    System.String StackTrace 'get ' : 
    Boolean Is64BitProcess 'get ' : 
    Boolean Is64BitOperatingSystem 'get ' : 
    Boolean HasShutdownStarted 'get ' : 
    System.String UserName 'get ' : 
    Boolean UserInteractive 'get ' : 
    System.String UserDomainName 'get ' : 
    Int32 CurrentManagedThreadId 'get ' : 
  Methods:
    get_TickCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    _Exit(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Exit(Int32): PrivateScope, Public, Static, HideBySig, HasSecurity
    get_ExitCode(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ExitCode(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    FailFast(String): PrivateScope, Public, Static, HideBySig
    FailFast(String, UInt32): PrivateScope, Assembly, Static, HideBySig
    FailFast(String, Exception): PrivateScope, Public, Static, HideBySig
    TriggerCodeContractFailure(ContractFailureKind, String, String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    get_IsCLRHosted(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_CommandLine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentDirectory(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CurrentDirectory(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SystemDirectory(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InternalWindowsDirectory(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ExpandEnvironmentVariables(String): PrivateScope, Public, Static, HideBySig
    get_MachineName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ProcessorCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SystemPageSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCommandLineArgs(): PrivateScope, Public, Static, HideBySig
    nativeGetEnvironmentVariable(String): PrivateScope, Assembly, Static, HideBySig
    GetEnvironmentVariable(String): PrivateScope, Public, Static, HideBySig
    GetEnvironmentVariable(String, EnvironmentVariableTarget): PrivateScope, Public, Static, HideBySig
    GetEnvironmentVariables(): PrivateScope, Public, Static, HideBySig
    GetRegistryKeyNameValuePairs(RegistryKey): PrivateScope, Assembly, Static, HideBySig
    GetEnvironmentVariables(EnvironmentVariableTarget): PrivateScope, Public, Static, HideBySig
    SetEnvironmentVariable(String, String): PrivateScope, Public, Static, HideBySig
    SetEnvironmentVariable(String, String, EnvironmentVariableTarget): PrivateScope, Public, Static, HideBySig
    GetLogicalDrives(): PrivateScope, Public, Static, HideBySig
    get_NewLine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WorkingSet(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OSVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsWindows8OrAbove(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IsWinRTSupported(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetVersion(OSVERSIONINFO): PrivateScope, Assembly, Static, HideBySig
    GetVersionEx(OSVERSIONINFOEX): PrivateScope, Assembly, Static, HideBySig
    get_StackTrace(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetStackTrace(Exception, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetResourceFromDefault(String): PrivateScope, Assembly, Static, HideBySig
    GetResourceStringLocal(String): PrivateScope, Assembly, Static, HideBySig
    GetResourceString(String): PrivateScope, Assembly, Static, HideBySig
    GetResourceString(String, Object[]): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeResourceString(String): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeResourceString(String, Object[]): PrivateScope, Assembly, Static, HideBySig
    get_Is64BitProcess(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Is64BitOperatingSystem(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HasShutdownStarted(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCompatibilityFlag(CompatibilityFlag): PrivateScope, Assembly, Static, HideBySig
    get_UserName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UserInteractive(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetFolderPath(SpecialFolder): PrivateScope, Public, Static, HideBySig
    GetFolderPath(SpecialFolder, SpecialFolderOption): PrivateScope, Public, Static, HideBySig
    UnsafeGetFolderPath(SpecialFolder): PrivateScope, Assembly, Static, HideBySig
    get_UserDomainName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentManagedThreadId(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.EventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.EventArgs Empty : Public, Static, InitOnly
Class System.EventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, EventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, EventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.EventHandler`1[TEventArgs]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  Type parameter: TEventArgs
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, TEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, TEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.FieldAccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.MemberAccessException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.FlagsAttribute: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.FormatException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.FormattableString: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IFormattable
  Properties:
    System.String Format 'get ' : 
    Int32 ArgumentCount 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ArgumentCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetArgument(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Invariant(FormattableString): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.GCCollectionMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.GCCollectionMode Default = 0 : Public, Static, Literal, HasDefault
    System.GCCollectionMode Forced = 1 : Public, Static, Literal, HasDefault
    System.GCCollectionMode Optimized = 2 : Public, Static, Literal, HasDefault
Struct System.InternalGCCollectionMode: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.InternalGCCollectionMode NonBlocking = 1 : Public, Static, Literal, HasDefault
    System.InternalGCCollectionMode Blocking = 2 : Public, Static, Literal, HasDefault
    System.InternalGCCollectionMode Optimized = 4 : Public, Static, Literal, HasDefault
    System.InternalGCCollectionMode Compacting = 8 : Public, Static, Literal, HasDefault
Struct System.GCNotificationStatus: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.GCNotificationStatus Succeeded = 0 : Public, Static, Literal, HasDefault
    System.GCNotificationStatus Failed = 1 : Public, Static, Literal, HasDefault
    System.GCNotificationStatus Canceled = 2 : Public, Static, Literal, HasDefault
    System.GCNotificationStatus Timeout = 3 : Public, Static, Literal, HasDefault
    System.GCNotificationStatus NotApplicable = 4 : Public, Static, Literal, HasDefault
Class System.GC: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Int32 MaxGeneration 'get ' : 
  Methods:
    GetGCLatencyMode(): PrivateScope, Assembly, Static, HideBySig
    SetGCLatencyMode(Int32): PrivateScope, Assembly, Static, HideBySig
    _StartNoGCRegion(Int64, Boolean, Int64, Boolean): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    _EndNoGCRegion(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetLOHCompactionMode(): PrivateScope, Assembly, Static, HideBySig
    SetLOHCompactionMode(Int32): PrivateScope, Assembly, Static, HideBySig
    IsServerGC(): PrivateScope, Assembly, Static, HideBySig
    AddMemoryPressure(Int64): PrivateScope, Public, Static, HideBySig
    RemoveMemoryPressure(Int64): PrivateScope, Public, Static, HideBySig
    GetGeneration(Object): PrivateScope, Public, Static, HideBySig
    Collect(Int32): PrivateScope, Public, Static, HideBySig
    Collect(): PrivateScope, Public, Static, HideBySig
    Collect(Int32, GCCollectionMode): PrivateScope, Public, Static, HideBySig
    Collect(Int32, GCCollectionMode, Boolean): PrivateScope, Public, Static, HideBySig
    Collect(Int32, GCCollectionMode, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    CollectionCount(Int32): PrivateScope, Public, Static, HideBySig
    CollectionCount(Int32, Boolean): PrivateScope, Assembly, Static, HideBySig
    KeepAlive(Object): PrivateScope, Public, Static, HideBySig
    GetGeneration(WeakReference): PrivateScope, Public, Static, HideBySig
    get_MaxGeneration(): PrivateScope, Public, Static, HideBySig, SpecialName
    WaitForPendingFinalizers(): PrivateScope, Public, Static, HideBySig
    SuppressFinalize(Object): PrivateScope, Public, Static, HideBySig
    ReRegisterForFinalize(Object): PrivateScope, Public, Static, HideBySig
    GetTotalMemory(Boolean): PrivateScope, Public, Static, HideBySig
    RegisterForFullGCNotification(Int32, Int32): PrivateScope, Public, Static, HideBySig
    CancelFullGCNotification(): PrivateScope, Public, Static, HideBySig
    WaitForFullGCApproach(): PrivateScope, Public, Static, HideBySig
    WaitForFullGCApproach(Int32): PrivateScope, Public, Static, HideBySig
    WaitForFullGCComplete(): PrivateScope, Public, Static, HideBySig
    WaitForFullGCComplete(Int32): PrivateScope, Public, Static, HideBySig
    TryStartNoGCRegion(Int64): PrivateScope, Public, Static, HideBySig
    TryStartNoGCRegion(Int64, Int64): PrivateScope, Public, Static, HideBySig
    TryStartNoGCRegion(Int64, Boolean): PrivateScope, Public, Static, HideBySig
    TryStartNoGCRegion(Int64, Int64, Boolean): PrivateScope, Public, Static, HideBySig
    EndNoGCRegion(): PrivateScope, Public, Static, HideBySig
Class System.SizedReference: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    IntPtr _handle IsVolatile : Assembly
  Properties:
    System.Object Target 'get ' : 
    Int64 ApproximateSize 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_ApproximateSize(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Guid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, UInt16, UInt16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int16, Int16, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int16, Int16, Byte, Byte, Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
    System.IComparable
    System.IComparable`1[System.Guid]
    System.IEquatable`1[System.Guid]
  Fields:
    System.Guid Empty : Public, Static, InitOnly
  Methods:
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, Guid&(Out)): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String, Guid&(Out)): PrivateScope, Public, Static, HideBySig
    ToByteArray(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Guid): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Guid): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(Guid, Guid): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Guid, Guid): PrivateScope, Public, Static, HideBySig, SpecialName
    NewGuid(): PrivateScope, Public, Static, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface System.IAsyncResult: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsCompleted 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    System.Object AsyncState 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
  Methods:
    get_IsCompleted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AsyncState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.ICustomFormatter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Format(String, Object, IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IDisposable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Dispose(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IFormatProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetFormat(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IFormattable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToString(String, IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.IndexOutOfRangeException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Interface System.IObservable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Covariant
  Methods:
    Subscribe(IObserver`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IObserver`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Methods:
    OnNext(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnError(Exception): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnCompleted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IProgress`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T,  Contravariant
  Methods:
    Report(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.InsufficientMemoryException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.OutOfMemoryException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.InsufficientExecutionStackException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.LazyHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Object PUBLICATION_ONLY_SENTINEL : Assembly, Static, InitOnly
Class System.Lazy`1[T]: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Func`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.LazyThreadSafetyMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Func`1[T], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Func`1[T], System.Threading.LazyThreadSafetyMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T ValueForDebugDisplay 'get ' : 
    System.Threading.LazyThreadSafetyMode Mode 'get ' : 
    Boolean IsValueFaulted 'get ' : 
    Boolean IsValueCreated 'get ' : 
    T Value    'get ' : 
  Methods:
    get_Mode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsValueCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_ValueForDebugDisplay(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsValueFaulted(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.System_LazyDebugView`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Lazy`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValueCreated 'get ' : 
    T Value    'get ' : 
    System.Threading.LazyThreadSafetyMode Mode 'get ' : 
    Boolean IsValueFaulted 'get ' : 
  Methods:
    get_IsValueCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValueFaulted(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Int16: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Int16]
    System.IEquatable`1[System.Int16]
  Fields:
    Int16 m_value : Assembly
    Int16 MaxValue = 32767 : Public, Static, Literal, HasDefault
    Int16 MinValue = -32768 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Int16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Int16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Int16&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Int16&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Int32: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Int32]
    System.IEquatable`1[System.Int32]
  Fields:
    Int32 m_value : Assembly
    Int32 MaxValue = 2147483647 : Public, Static, Literal, HasDefault
    Int32 MinValue = -2147483648 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Int64: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Int64]
    System.IEquatable`1[System.Int64]
  Fields:
    Int64 m_value : Assembly
    Int64 MaxValue = 9223372036854775807 : Public, Static, Literal, HasDefault
    Int64 MinValue = -9223372036854775808 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Int64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Int64&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Int64&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.IntPtr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    IntPtr Zero : Public, Static, InitOnly
  Properties:
    Int32 Size 'get ' : 
  Methods:
    IsNull(): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToInt32(): PrivateScope, Public, HideBySig
    ToInt64(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Void*): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    op_Addition(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    op_Subtraction(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToPointer(): PrivateScope, Public, HideBySig
Class System.Internal: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Class System.InvalidCastException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.InvalidOperationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.InvalidProgramException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.InvalidTimeZoneException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface System.IConvertible: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetTypeCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToBoolean(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToChar(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToSByte(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToByte(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToInt16(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToUInt16(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToInt32(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToUInt32(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToInt64(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToUInt64(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToSingle(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToDouble(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToDecimal(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToDateTime(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToType(Type, IFormatProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.IServiceProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetService(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.LocalDataStoreHolder: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.LocalDataStore): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.LocalDataStore Store 'get ' : 
  Methods:
    get_Store(): PrivateScope, Public, HideBySig, SpecialName
Class System.LocalDataStoreElement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get set' : 
    Int64 Cookie 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Cookie(): PrivateScope, Public, HideBySig, SpecialName
Class System.LocalDataStore: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.LocalDataStoreMgr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Dispose(): PrivateScope, Assembly, HideBySig
    GetData(LocalDataStoreSlot): PrivateScope, Public, HideBySig
    SetData(LocalDataStoreSlot, Object): PrivateScope, Public, HideBySig
    FreeData(Int32, Int64): PrivateScope, Assembly, HideBySig
Class System.LocalDataStoreSlot: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.LocalDataStoreMgr, Int32, Int64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.LocalDataStoreMgr Manager 'get ' : 
    Int32 Slot 'get ' : 
    Int64 Cookie 'get ' : 
  Methods:
    get_Manager(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Slot(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Cookie(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.LocalDataStoreMgr: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateLocalDataStore(): PrivateScope, Public, HideBySig
    DeleteLocalDataStore(LocalDataStore): PrivateScope, Public, HideBySig
    AllocateDataSlot(): PrivateScope, Public, HideBySig
    AllocateNamedDataSlot(String): PrivateScope, Public, HideBySig
    GetNamedDataSlot(String): PrivateScope, Public, HideBySig
    FreeDataSlot(Int32, Int64): PrivateScope, Assembly, HideBySig
    FreeNamedDataSlot(String): PrivateScope, Public, HideBySig
    ValidateSlot(LocalDataStoreSlot): PrivateScope, Public, HideBySig
    GetSlotTableLength(): PrivateScope, Assembly, HideBySig
Class System.MarshalByRefObject: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Methods:
    GetComIUnknown(Boolean): PrivateScope, Assembly, HideBySig
    GetComIUnknown(MarshalByRefObject): PrivateScope, Assembly, Static, HideBySig
    IsInstanceOfType(Type): PrivateScope, Assembly, HideBySig
    InvokeMember(String, BindingFlags, Binder, Object[], ParameterModifier[], CultureInfo, String[]): PrivateScope, Assembly, HideBySig
    GetIdentity(MarshalByRefObject, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetIdentity(MarshalByRefObject): PrivateScope, Assembly, Static, HideBySig
    __RaceSetServerIdentity(ServerIdentity): PrivateScope, Assembly, HideBySig
    __ResetServerIdentity(): PrivateScope, Assembly, HideBySig
    GetLifetimeService(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InitializeLifetimeService(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateObjRef(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanCastToXmlType(String, String): PrivateScope, Assembly, HideBySig
    CanCastToXmlTypeHelper(RuntimeType, MarshalByRefObject): PrivateScope, Assembly, Static, HideBySig
Class System.Math: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Double PI = 3,14159265358979 : Public, Static, Literal, HasDefault
    Double E = 2,71828182845905 : Public, Static, Literal, HasDefault
  Methods:
    Acos(Double): PrivateScope, Public, Static, HideBySig
    Asin(Double): PrivateScope, Public, Static, HideBySig
    Atan(Double): PrivateScope, Public, Static, HideBySig
    Atan2(Double, Double): PrivateScope, Public, Static, HideBySig
    Ceiling(Decimal): PrivateScope, Public, Static, HideBySig
    Ceiling(Double): PrivateScope, Public, Static, HideBySig
    Cos(Double): PrivateScope, Public, Static, HideBySig
    Cosh(Double): PrivateScope, Public, Static, HideBySig
    Floor(Decimal): PrivateScope, Public, Static, HideBySig
    Floor(Double): PrivateScope, Public, Static, HideBySig
    Sin(Double): PrivateScope, Public, Static, HideBySig
    Tan(Double): PrivateScope, Public, Static, HideBySig
    Sinh(Double): PrivateScope, Public, Static, HideBySig
    Tanh(Double): PrivateScope, Public, Static, HideBySig
    Round(Double): PrivateScope, Public, Static, HideBySig
    Round(Double, Int32): PrivateScope, Public, Static, HideBySig
    Round(Double, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Round(Double, Int32, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Round(Decimal): PrivateScope, Public, Static, HideBySig
    Round(Decimal, Int32): PrivateScope, Public, Static, HideBySig
    Round(Decimal, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Round(Decimal, Int32, MidpointRounding): PrivateScope, Public, Static, HideBySig
    Truncate(Decimal): PrivateScope, Public, Static, HideBySig
    Truncate(Double): PrivateScope, Public, Static, HideBySig
    Sqrt(Double): PrivateScope, Public, Static, HideBySig
    Log(Double): PrivateScope, Public, Static, HideBySig
    Log10(Double): PrivateScope, Public, Static, HideBySig
    Exp(Double): PrivateScope, Public, Static, HideBySig
    Pow(Double, Double): PrivateScope, Public, Static, HideBySig
    IEEERemainder(Double, Double): PrivateScope, Public, Static, HideBySig
    Abs(SByte): PrivateScope, Public, Static, HideBySig
    Abs(Int16): PrivateScope, Public, Static, HideBySig
    Abs(Int32): PrivateScope, Public, Static, HideBySig
    Abs(Int64): PrivateScope, Public, Static, HideBySig
    Abs(Single): PrivateScope, Public, Static, HideBySig
    Abs(Double): PrivateScope, Public, Static, HideBySig
    Abs(Decimal): PrivateScope, Public, Static, HideBySig
    Max(SByte, SByte): PrivateScope, Public, Static, HideBySig
    Max(Byte, Byte): PrivateScope, Public, Static, HideBySig
    Max(Int16, Int16): PrivateScope, Public, Static, HideBySig
    Max(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Max(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Max(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Max(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Max(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Max(Single, Single): PrivateScope, Public, Static, HideBySig
    Max(Double, Double): PrivateScope, Public, Static, HideBySig
    Max(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Min(SByte, SByte): PrivateScope, Public, Static, HideBySig
    Min(Byte, Byte): PrivateScope, Public, Static, HideBySig
    Min(Int16, Int16): PrivateScope, Public, Static, HideBySig
    Min(UInt16, UInt16): PrivateScope, Public, Static, HideBySig
    Min(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Min(UInt32, UInt32): PrivateScope, Public, Static, HideBySig
    Min(Int64, Int64): PrivateScope, Public, Static, HideBySig
    Min(UInt64, UInt64): PrivateScope, Public, Static, HideBySig
    Min(Single, Single): PrivateScope, Public, Static, HideBySig
    Min(Double, Double): PrivateScope, Public, Static, HideBySig
    Min(Decimal, Decimal): PrivateScope, Public, Static, HideBySig
    Log(Double, Double): PrivateScope, Public, Static, HideBySig
    Sign(SByte): PrivateScope, Public, Static, HideBySig
    Sign(Int16): PrivateScope, Public, Static, HideBySig
    Sign(Int32): PrivateScope, Public, Static, HideBySig
    Sign(Int64): PrivateScope, Public, Static, HideBySig
    Sign(Single): PrivateScope, Public, Static, HideBySig
    Sign(Double): PrivateScope, Public, Static, HideBySig
    Sign(Decimal): PrivateScope, Public, Static, HideBySig
    BigMul(Int32, Int32): PrivateScope, Public, Static, HideBySig
    DivRem(Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    DivRem(Int64, Int64, Int64&(Out)): PrivateScope, Public, Static, HideBySig
Class System.Mda: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsStreamWriterBufferedDataLostEnabled(): PrivateScope, Assembly, Static, HideBySig
    MemberInfoCacheCreation(): PrivateScope, Assembly, Static, HideBySig
    IsInvalidGCHandleCookieProbeEnabled(): PrivateScope, Assembly, Static, HideBySig
    ReportStreamWriterBufferedDataLost(String): PrivateScope, Assembly, Static, HideBySig
    IsStreamWriterBufferedDataLostCaptureAllocatedCallStack(): PrivateScope, Assembly, Static, HideBySig
    DateTimeInvalidLocalFormat(): PrivateScope, Assembly, Static, HideBySig
    FireInvalidGCHandleCookieProbe(IntPtr): PrivateScope, Assembly, Static, HideBySig
    ReportErrorSafeHandleRelease(Exception): PrivateScope, Assembly, Static, HideBySig
Class System.MethodAccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.MemberAccessException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.MidpointRounding: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.MidpointRounding ToEven = 0 : Public, Static, Literal, HasDefault
    System.MidpointRounding AwayFromZero = 1 : Public, Static, Literal, HasDefault
Class System.MissingFieldException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.MissingMemberException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.MissingMemberException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.MemberAccessException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FormatSignature(Byte[]): PrivateScope, Assembly, Static, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.MissingMethodException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.MissingMemberException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.MulticastNotSupportedException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.NonSerializedAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCustomAttribute(RuntimeFieldInfo): PrivateScope, Assembly, Static, HideBySig
    IsDefined(RuntimeFieldInfo): PrivateScope, Assembly, Static, HideBySig
Class System.NotFiniteNumberException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArithmeticException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Double, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double OffendingNumber 'get ' : 
  Methods:
    get_OffendingNumber(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.NotImplementedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.NotSupportedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.NullReferenceException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Number: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Methods:
    FormatDecimal(Decimal, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatDouble(Double, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatInt32(Int32, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatUInt32(UInt32, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatInt64(Int64, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatUInt64(UInt64, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    FormatSingle(Single, String, NumberFormatInfo): PrivateScope, Public, Static, HideBySig
    NumberBufferToDecimal(Byte*, Decimal&): PrivateScope, Public, Static, HideBySig
    NumberBufferToDouble(Byte*, Double&): PrivateScope, Assembly, Static, HideBySig
    ParseDecimal(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseDouble(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseInt32(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseInt64(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseSingle(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseUInt32(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ParseUInt64(String, NumberStyles, NumberFormatInfo): PrivateScope, Assembly, Static, HideBySig
    TryParseDecimal(String, NumberStyles, NumberFormatInfo, Decimal&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseInt32(String, NumberStyles, NumberFormatInfo, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseInt64(String, NumberStyles, NumberFormatInfo, Int64&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseUInt32(String, NumberStyles, NumberFormatInfo, UInt32&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseUInt64(String, NumberStyles, NumberFormatInfo, UInt64&(Out)): PrivateScope, Assembly, Static, HideBySig
    FormatNumberBuffer(Byte*, String, NumberFormatInfo, Char*): PrivateScope, Assembly, Static, HideBySig
    TryParseDouble(String, NumberStyles, NumberFormatInfo, Double&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseSingle(String, NumberStyles, NumberFormatInfo, Single&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryStringToNumber(String, NumberStyles, NumberBuffer&, NumberFormatInfo, Boolean): PrivateScope, Assembly, Static, HideBySig
    TryStringToNumber(String, NumberStyles, NumberBuffer&, StringBuilder, NumberFormatInfo, Boolean): PrivateScope, Assembly, Static, HideBySig
Class System.ObjectDisposedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.InvalidOperationException
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.String ObjectName 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ObjectName(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.ObsoleteAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    Boolean IsError 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    get_IsError(): PrivateScope, Public, HideBySig, SpecialName
Class System.OleAutBinder: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.DefaultBinder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ChangeType(Object, Type, CultureInfo): PrivateScope, Public, Virtual, HideBySig
Class System.OperatingSystem: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.PlatformID, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.PlatformID, System.Version, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.Runtime.Serialization.ISerializable
  Properties:
    System.PlatformID Platform 'get ' : 
    System.String ServicePack 'get ' : 
    System.Version Version 'get ' : 
    System.String VersionString 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Platform(): PrivateScope, Public, HideBySig, SpecialName
    get_ServicePack(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_VersionString(): PrivateScope, Public, HideBySig, SpecialName
Class System.OperationCanceledException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.CancellationToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Threading.CancellationToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception, System.Threading.CancellationToken): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Threading.CancellationToken CancellationToken 'get set' : 
  Methods:
    get_CancellationToken(): PrivateScope, Public, HideBySig, SpecialName
Class System.OverflowException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.ArithmeticException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ParamArrayAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.ParamsArray: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Object, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    System.Object Item [Int32] 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class System.ParseNumbers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 PrintAsI1 = 64 : Assembly, Static, Literal, HasDefault
    Int32 PrintAsI2 = 128 : Assembly, Static, Literal, HasDefault
    Int32 PrintAsI4 = 256 : Assembly, Static, Literal, HasDefault
    Int32 TreatAsUnsigned = 512 : Assembly, Static, Literal, HasDefault
    Int32 TreatAsI1 = 1024 : Assembly, Static, Literal, HasDefault
    Int32 TreatAsI2 = 2048 : Assembly, Static, Literal, HasDefault
    Int32 IsTight = 4096 : Assembly, Static, Literal, HasDefault
    Int32 NoSpace = 8192 : Assembly, Static, Literal, HasDefault
  Methods:
    StringToLong(String, Int32, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    StringToInt(String, Int32, Int32, Int32*): PrivateScope, Public, Static, HideBySig
    IntToString(Int32, Int32, Int32, Char, Int32): PrivateScope, Public, Static, HideBySig
    StringToLong(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    StringToLong(String, Int32, Int32, Int32&): PrivateScope, Public, Static, HideBySig
    StringToInt(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    StringToInt(String, Int32, Int32, Int32&): PrivateScope, Public, Static, HideBySig
    LongToString(Int64, Int32, Int32, Char, Int32): PrivateScope, Public, Static, HideBySig
Struct System.PlatformID: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.PlatformID Win32S = 0 : Public, Static, Literal, HasDefault
    System.PlatformID Win32Windows = 1 : Public, Static, Literal, HasDefault
    System.PlatformID Win32NT = 2 : Public, Static, Literal, HasDefault
    System.PlatformID WinCE = 3 : Public, Static, Literal, HasDefault
    System.PlatformID Unix = 4 : Public, Static, Literal, HasDefault
    System.PlatformID Xbox = 5 : Public, Static, Literal, HasDefault
    System.PlatformID MacOSX = 6 : Public, Static, Literal, HasDefault
Class System.PlatformNotSupportedException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.NotSupportedException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Progress`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Action`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IProgress`1[T]
  Events:
    System.EventHandler`1[T] ProgressChanged: 
  Methods:
    add_ProgressChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ProgressChanged(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Class System.ProgressStatics: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Threading.SynchronizationContext DefaultContext : Assembly, Static, InitOnly
Class System.Random: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Next(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextDouble(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.RankException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.ResId: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Arg_ArrayLengthsDiffer = Arg_ArrayLengthsDiffer : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidNumberOfMembers = Argument_InvalidNumberOfMembers : Assembly, Static, Literal, HasDefault
    System.String Argument_UnequalMembers = Argument_UnequalMembers : Assembly, Static, Literal, HasDefault
    System.String Argument_SpecifyValueSize = Argument_SpecifyValueSize : Assembly, Static, Literal, HasDefault
    System.String Argument_UnmatchingSymScope = Argument_UnmatchingSymScope : Assembly, Static, Literal, HasDefault
    System.String Argument_NotInExceptionBlock = Argument_NotInExceptionBlock : Assembly, Static, Literal, HasDefault
    System.String Argument_NotExceptionType = Argument_NotExceptionType : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidLabel = Argument_InvalidLabel : Assembly, Static, Literal, HasDefault
    System.String Argument_UnclosedExceptionBlock = Argument_UnclosedExceptionBlock : Assembly, Static, Literal, HasDefault
    System.String Argument_MissingDefaultConstructor = Argument_MissingDefaultConstructor : Assembly, Static, Literal, HasDefault
    System.String Argument_TooManyFinallyClause = Argument_TooManyFinallyClause : Assembly, Static, Literal, HasDefault
    System.String Argument_NotInTheSameModuleBuilder = Argument_NotInTheSameModuleBuilder : Assembly, Static, Literal, HasDefault
    System.String Argument_BadCurrentLocalVariable = Argument_BadCurrentLocalVariable : Assembly, Static, Literal, HasDefault
    System.String Argument_DuplicateModuleName = Argument_DuplicateModuleName : Assembly, Static, Literal, HasDefault
    System.String Argument_BadPersistableModuleInTransientAssembly = Argument_BadPersistableModuleInTransientAssembly : Assembly, Static, Literal, HasDefault
    System.String Argument_HasToBeArrayClass = Argument_HasToBeArrayClass : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidDirectory = Argument_InvalidDirectory : Assembly, Static, Literal, HasDefault
    System.String MissingType = MissingType : Assembly, Static, Literal, HasDefault
    System.String MissingModule = MissingModule : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_Index = ArgumentOutOfRange_Index : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_Range = ArgumentOutOfRange_Range : Assembly, Static, Literal, HasDefault
    System.String ExecutionEngine_YoureHosed = ExecutionEngine_YoureHosed : Assembly, Static, Literal, HasDefault
    System.String Format_NeedSingleChar = Format_NeedSingleChar : Assembly, Static, Literal, HasDefault
    System.String Format_StringZeroLength = Format_StringZeroLength : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumEnded = InvalidOperation_EnumEnded : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumFailedVersion = InvalidOperation_EnumFailedVersion : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumNotStarted = InvalidOperation_EnumNotStarted : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumOpCantHappen = InvalidOperation_EnumOpCantHappen : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_InternalState = InvalidOperation_InternalState : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_ModifyRONumFmtInfo = InvalidOperation_ModifyRONumFmtInfo : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_MethodBaked = InvalidOperation_MethodBaked : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_NotADebugModule = InvalidOperation_NotADebugModule : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_MethodHasBody = InvalidOperation_MethodHasBody : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_OpenLocalVariableScope = InvalidOperation_OpenLocalVariableScope : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_TypeHasBeenCreated = InvalidOperation_TypeHasBeenCreated : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_RefedAssemblyNotSaved = InvalidOperation_RefedAssemblyNotSaved : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_AssemblyHasBeenSaved = InvalidOperation_AssemblyHasBeenSaved : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_ModuleHasBeenSaved = InvalidOperation_ModuleHasBeenSaved : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_CannotAlterAssembly = InvalidOperation_CannotAlterAssembly : Assembly, Static, Literal, HasDefault
    System.String NotSupported_CannotSaveModuleIndividually = NotSupported_CannotSaveModuleIndividually : Assembly, Static, Literal, HasDefault
    System.String NotSupported_Constructor = NotSupported_Constructor : Assembly, Static, Literal, HasDefault
    System.String NotSupported_Method = NotSupported_Method : Assembly, Static, Literal, HasDefault
    System.String NotSupported_NYI = NotSupported_NYI : Assembly, Static, Literal, HasDefault
    System.String NotSupported_DynamicModule = NotSupported_DynamicModule : Assembly, Static, Literal, HasDefault
    System.String NotSupported_NotDynamicModule = NotSupported_NotDynamicModule : Assembly, Static, Literal, HasDefault
    System.String NotSupported_NotAllTypesAreBaked = NotSupported_NotAllTypesAreBaked : Assembly, Static, Literal, HasDefault
    System.String NotSupported_SortedListNestedWrite = NotSupported_SortedListNestedWrite : Assembly, Static, Literal, HasDefault
    System.String Serialization_ArrayInvalidLength = Serialization_ArrayInvalidLength : Assembly, Static, Literal, HasDefault
    System.String Serialization_ArrayNoLength = Serialization_ArrayNoLength : Assembly, Static, Literal, HasDefault
    System.String Serialization_CannotGetType = Serialization_CannotGetType : Assembly, Static, Literal, HasDefault
    System.String Serialization_InsufficientState = Serialization_InsufficientState : Assembly, Static, Literal, HasDefault
    System.String Serialization_InvalidID = Serialization_InvalidID : Assembly, Static, Literal, HasDefault
    System.String Serialization_MalformedArray = Serialization_MalformedArray : Assembly, Static, Literal, HasDefault
    System.String Serialization_MultipleMembers = Serialization_MultipleMembers : Assembly, Static, Literal, HasDefault
    System.String Serialization_NoID = Serialization_NoID : Assembly, Static, Literal, HasDefault
    System.String Serialization_NoType = Serialization_NoType : Assembly, Static, Literal, HasDefault
    System.String Serialization_NoBaseType = Serialization_NoBaseType : Assembly, Static, Literal, HasDefault
    System.String Serialization_NullSignature = Serialization_NullSignature : Assembly, Static, Literal, HasDefault
    System.String Serialization_UnknownMember = Serialization_UnknownMember : Assembly, Static, Literal, HasDefault
    System.String Serialization_BadParameterInfo = Serialization_BadParameterInfo : Assembly, Static, Literal, HasDefault
    System.String Serialization_NoParameterInfo = Serialization_NoParameterInfo : Assembly, Static, Literal, HasDefault
    System.String WeakReference_NoLongerValid = WeakReference_NoLongerValid : Assembly, Static, Literal, HasDefault
    System.String Loader_InvalidPath = Loader_InvalidPath : Assembly, Static, Literal, HasDefault
Class System.CtorDelegate: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.TypeNameFormatFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TypeNameFormatFlags FormatBasic = 0 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatNamespace = 1 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatFullInst = 2 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatAssembly = 4 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatSignature = 8 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatNoVersion = 16 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatAngleBrackets = 64 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatStubInfo = 128 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatGenericParam = 256 : Public, Static, Literal, HasDefault
    System.TypeNameFormatFlags FormatSerialization = 259 : Public, Static, Literal, HasDefault
Struct System.TypeNameKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TypeNameKind Name = 0 : Public, Static, Literal, HasDefault
    System.TypeNameKind ToString = 1 : Public, Static, Literal, HasDefault
    System.TypeNameKind SerializationName = 2 : Public, Static, Literal, HasDefault
    System.TypeNameKind FullName = 3 : Public, Static, Literal, HasDefault
Class System.RuntimeType: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Reflection.TypeInfo
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.ICloneable
  Fields:
    IntPtr m_handle : Assembly
    System.RuntimeType ValueType : Assembly, Static, InitOnly
    System.RuntimeType EnumType : Assembly, Static, InitOnly
  Properties:
    System.Runtime.Remoting.Metadata.RemotingTypeCachedData RemotingCache 'get ' : 
    System.Object GenericCache 'get set' : 
    Boolean DomainInitialized 'get set' : 
    System.Reflection.INVOCATION_FLAGS InvocationFlags 'get ' : 
    System.Reflection.Module Module 'get ' : 
    System.Reflection.Assembly Assembly 'get ' : 
    System.RuntimeTypeHandle TypeHandle 'get ' : 
    System.Reflection.MethodBase DeclaringMethod 'get ' : 
    System.Type BaseType 'get ' : 
    System.Type UnderlyingSystemType 'get ' : 
    System.String FullName 'get ' : 
    System.String AssemblyQualifiedName 'get ' : 
    System.String Namespace 'get ' : 
    System.Guid GUID 'get ' : 
    Boolean IsEnum 'get ' : 
    System.Reflection.GenericParameterAttributes GenericParameterAttributes 'get ' : 
    Boolean IsSecurityCritical 'get ' : 
    Boolean IsSecuritySafeCritical 'get ' : 
    Boolean IsSecurityTransparent 'get ' : 
    Boolean IsSzArray 'get ' : 
    Boolean IsGenericTypeDefinition 'get ' : 
    Boolean IsGenericParameter 'get ' : 
    Int32 GenericParameterPosition 'get ' : 
    Boolean IsGenericType 'get ' : 
    Boolean IsConstructedGenericType 'get ' : 
    Boolean ContainsGenericParameters 'get ' : 
    System.Runtime.InteropServices.StructLayoutAttribute StructLayoutAttribute 'get ' : 
    System.String Name 'get ' : 
    System.Reflection.MemberTypes MemberType 'get ' : 
    System.Type DeclaringType 'get ' : 
    System.Type ReflectedType 'get ' : 
    Int32 MetadataToken 'get ' : 
  Methods:
    get_RemotingCache(): PrivateScope, Assembly, HideBySig, SpecialName
    GetType(String, Boolean, Boolean, Boolean, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    GetMethodBase(RuntimeModule, Int32): PrivateScope, Assembly, Static, HideBySig
    GetMethodBase(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetMethodBase(RuntimeType, IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetMethodBase(RuntimeType, RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    get_GenericCache(): PrivateScope, Assembly, HideBySig, SpecialName
    set_GenericCache(Object): PrivateScope, Assembly, HideBySig, SpecialName
    get_DomainInitialized(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DomainInitialized(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    GetFieldInfo(IRuntimeFieldInfo): PrivateScope, Assembly, Static, HideBySig
    GetFieldInfo(RuntimeType, IRuntimeFieldInfo): PrivateScope, Assembly, Static, HideBySig
    SanityCheckGenericArguments(RuntimeType[], RuntimeType[]): PrivateScope, Assembly, Static, HideBySig
    ValidateGenericArguments(MemberInfo, RuntimeType[], Exception): PrivateScope, Assembly, Static, HideBySig
    FilterPreCalculate(Boolean, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsNonW8PFrameworkAPI(): PrivateScope, Assembly, HideBySig
    get_InvocationFlags(): PrivateScope, Assembly, HideBySig, SpecialName
    CacheEquals(Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsSpecialSerializableType(): PrivateScope, Assembly, HideBySig
    GetSerializationCtor(): PrivateScope, Assembly, HideBySig
    GetMethods(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetConstructors(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetProperties(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetEvents(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetFields(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetInterfaces(): PrivateScope, Public, Virtual, HideBySig
    GetNestedTypes(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetMembers(BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetInterfaceMap(Type): PrivateScope, Public, Virtual, HideBySig
    GetEvent(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetField(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetInterface(String, Boolean): PrivateScope, Public, Virtual, HideBySig
    GetNestedType(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig
    GetMember(String, MemberTypes, BindingFlags): PrivateScope, Public, Virtual, HideBySig
    get_Module(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRuntimeModule(): PrivateScope, Assembly, HideBySig
    get_Assembly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRuntimeAssembly(): PrivateScope, Assembly, HideBySig
    get_TypeHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetTypeHandleInternal(): PrivateScope, Assembly, Final, Virtual, HideBySig
    IsCollectible(): PrivateScope, Assembly, HideBySig
    get_DeclaringMethod(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsInstanceOfType(Object): PrivateScope, Public, Virtual, HideBySig
    IsSubclassOf(Type): PrivateScope, Public, Virtual, HideBySig
    IsAssignableFrom(TypeInfo): PrivateScope, Public, Virtual, HideBySig
    IsAssignableFrom(Type): PrivateScope, Public, Virtual, HideBySig
    IsEquivalentTo(Type): PrivateScope, Public, Virtual, HideBySig
    get_BaseType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UnderlyingSystemType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AssemblyQualifiedName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GUID(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsWindowsRuntimeObjectImpl(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsExportedToWindowsRuntimeImpl(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    HasProxyAttributeImpl(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsDelegate(): PrivateScope, Assembly, HideBySig
    get_IsEnum(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GenericParameterAttributes(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSecurityCritical(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSecuritySafeCritical(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSecurityTransparent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsSzArray(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    GetArrayRank(): PrivateScope, Public, Virtual, HideBySig
    GetElementType(): PrivateScope, Public, Virtual, HideBySig
    GetEnumNames(): PrivateScope, Public, Virtual, HideBySig
    GetEnumValues(): PrivateScope, Public, Virtual, HideBySig
    GetEnumUnderlyingType(): PrivateScope, Public, Virtual, HideBySig
    IsEnumDefined(Object): PrivateScope, Public, Virtual, HideBySig
    GetEnumName(Object): PrivateScope, Public, Virtual, HideBySig
    GetGenericArgumentsInternal(): PrivateScope, Assembly, HideBySig
    GetGenericArguments(): PrivateScope, Public, Virtual, HideBySig
    MakeGenericType(Type[]): PrivateScope, Public, Virtual, HideBySig
    get_IsGenericTypeDefinition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_GenericParameterPosition(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetGenericTypeDefinition(): PrivateScope, Public, Virtual, HideBySig
    get_IsGenericType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsConstructedGenericType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainsGenericParameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetGenericParameterConstraints(): PrivateScope, Public, Virtual, HideBySig
    MakePointerType(): PrivateScope, Public, Virtual, HideBySig
    MakeByRefType(): PrivateScope, Public, Virtual, HideBySig
    MakeArrayType(): PrivateScope, Public, Virtual, HideBySig
    MakeArrayType(Int32): PrivateScope, Public, Virtual, HideBySig
    get_StructLayoutAttribute(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CheckValue(Object, Binder, CultureInfo, BindingFlags): PrivateScope, Assembly, HideBySig
    GetDefaultMembers(): PrivateScope, Public, Virtual, HideBySig
    InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[]): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(RuntimeType, RuntimeType): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RuntimeType, RuntimeType): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCustomAttributes(Boolean): PrivateScope, Public, Virtual, HideBySig
    GetCustomAttributes(Type, Boolean): PrivateScope, Public, Virtual, HideBySig
    IsDefined(Type, Boolean): PrivateScope, Public, Virtual, HideBySig
    GetCustomAttributesData(): PrivateScope, Public, Virtual, HideBySig
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FormatTypeName(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_MemberType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ReflectedType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MetadataToken(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateInstanceImpl(BindingFlags, Binder, Object[], CultureInfo, Object[], StackCrawlMark&): PrivateScope, Assembly, HideBySig
    CreateInstanceSlow(Boolean, Boolean, Boolean, StackCrawlMark&): PrivateScope, Assembly, HideBySig
    CreateInstanceDefaultCtor(Boolean, Boolean, Boolean, StackCrawlMark&): PrivateScope, Assembly, HideBySig
    InvalidateCachedNestedType(): PrivateScope, Assembly, HideBySig
    IsGenericCOMObjectImpl(): PrivateScope, Assembly, HideBySig
    CreateEnum(RuntimeType, Int64): PrivateScope, Assembly, Static, HideBySig
    GetTypeFromProgIDImpl(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetTypeFromCLSIDImpl(Guid, String, Boolean): PrivateScope, Assembly, Static, HideBySig
Class System.ReflectionOnlyType: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.RuntimeType
  Properties:
    System.RuntimeTypeHandle TypeHandle 'get ' : 
  Methods:
    get_TypeHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Utf8String: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Void*): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Equals(Utf8String): PrivateScope, Assembly, HideBySig
    EqualsCaseInsensitive(Utf8String): PrivateScope, Assembly, HideBySig
    HashCaseInsensitive(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.RuntimeArgumentHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    IntPtr Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.RuntimeTypeHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.RuntimeType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    System.RuntimeTypeHandle EmptyHandle 'get ' : 
    IntPtr Value 'get ' : 
  Methods:
    IsInstanceOfType(RuntimeType, Object): PrivateScope, Assembly, Static, HideBySig
    GetTypeHelper(Type, Type[], IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig
    GetValueInternal(RuntimeTypeHandle): PrivateScope, Assembly, Static, HideBySig
    CreateInstance(RuntimeType, Boolean, Boolean, Boolean&, RuntimeMethodHandleInternal&, Boolean&): PrivateScope, Assembly, Static, HideBySig
    CreateCaInstance(RuntimeType, IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    Allocate(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    CreateInstanceForAnotherGenericParameter(RuntimeType, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeType(): PrivateScope, Assembly, HideBySig
    GetCorElementType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetAssembly(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetModule(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetBaseType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetAttributes(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetElementType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetArrayRank(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetToken(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetMethodAt(RuntimeType, Int32): PrivateScope, Assembly, Static, HideBySig
    GetFields(RuntimeType, IntPtr*, Int32*): PrivateScope, Assembly, Static, HideBySig
    GetInterfaces(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetNumVirtuals(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsComObject(RuntimeType, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsContextful(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsInterface(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    HasProxyAttribute(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsValueType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    CanCastTo(RuntimeType, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetDeclaringType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetDeclaringMethod(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetTypeByName(String, Boolean, Boolean, Boolean, StackCrawlMark&, IntPtr, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetInstantiation(RuntimeTypeHandle, ObjectHandleOnStack, Boolean): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Instantiate(Type[]): PrivateScope, Assembly, HideBySig
    HasInstantiation(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsGenericTypeDefinition(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsGenericVariable(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    ContainsGenericVariables(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsEquivalentTo(RuntimeType, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsEquivalentType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetNativeHandle(): PrivateScope, Assembly, HideBySig
    GetTypeChecked(): PrivateScope, Assembly, HideBySig
    op_Equality(RuntimeTypeHandle, Object): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Object, RuntimeTypeHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RuntimeTypeHandle, Object): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Object, RuntimeTypeHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EmptyHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(RuntimeTypeHandle): PrivateScope, Public, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    IsNullHandle(): PrivateScope, Assembly, HideBySig
    IsPrimitive(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsByRef(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsPointer(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsArray(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsSzArray(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    HasElementType(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    CopyRuntimeTypeHandles(RuntimeTypeHandle[], Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    CopyRuntimeTypeHandles(Type[], Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetModuleHandle(): PrivateScope, Public, HideBySig
    CompareCanonicalHandles(RuntimeType, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetIntroducedMethods(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetConstraints(): PrivateScope, Assembly, HideBySig
    GetGCHandle(GCHandleType): PrivateScope, Assembly, HideBySig
    VerifyInterfaceIsImplemented(RuntimeTypeHandle): PrivateScope, Assembly, HideBySig
    GetInterfaceMethodImplementationSlot(RuntimeTypeHandle, RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    IsVisible(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsSecurityCritical(): PrivateScope, Assembly, HideBySig
    IsSecuritySafeCritical(): PrivateScope, Assembly, HideBySig
    IsSecurityTransparent(): PrivateScope, Assembly, HideBySig
    ConstructName(TypeNameFormatFlags): PrivateScope, Assembly, HideBySig
    GetUtf8Name(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetDefaultConstructor(): PrivateScope, Assembly, HideBySig
    GetTypeByName(String, Boolean, Boolean, Boolean, StackCrawlMark&, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetTypeByName(String, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    GetTypeByNameUsingCARules(String, RuntimeModule): PrivateScope, Assembly, Static, HideBySig
    GetInstantiationInternal(): PrivateScope, Assembly, HideBySig
    GetInstantiationPublic(): PrivateScope, Assembly, HideBySig
    MakeArray(Int32): PrivateScope, Assembly, HideBySig
    MakeSZArray(): PrivateScope, Assembly, HideBySig
    MakeByRef(): PrivateScope, Assembly, HideBySig
    MakePointer(): PrivateScope, Assembly, HideBySig
    IsCollectible(RuntimeTypeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    HasInstantiation(): PrivateScope, Assembly, HideBySig
    GetGenericTypeDefinition(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsGenericVariable(): PrivateScope, Assembly, HideBySig
    GetGenericVariableIndex(): PrivateScope, Assembly, HideBySig
    ContainsGenericVariables(): PrivateScope, Assembly, HideBySig
    SatisfiesConstraints(RuntimeType, RuntimeType[], RuntimeType[], RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetMetadataImport(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.RuntimeMethodHandleInternal: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr m_handle : Assembly
  Properties:
    System.RuntimeMethodHandleInternal EmptyHandle 'get ' : 
    IntPtr Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
    get_EmptyHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    IsNullHandle(): PrivateScope, Assembly, HideBySig
Class System.RuntimeMethodInfoStub: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.RuntimeMethodHandleInternal, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IRuntimeMethodInfo
  Fields:
    System.RuntimeMethodHandleInternal m_value : Public
Interface System.IRuntimeMethodInfo: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.RuntimeMethodHandleInternal Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct System.RuntimeMethodHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.IRuntimeMethodInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    System.RuntimeMethodHandle EmptyHandle 'get ' : 
    IntPtr Value 'get ' : 
  Methods:
    EnsureNonNullMethodInfo(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    get_EmptyHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetMethodInfo(): PrivateScope, Assembly, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(RuntimeMethodHandle, RuntimeMethodHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RuntimeMethodHandle, RuntimeMethodHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(RuntimeMethodHandle): PrivateScope, Public, HideBySig
    IsNullHandle(): PrivateScope, Assembly, HideBySig
    GetFunctionPointer(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetFunctionPointer(): PrivateScope, Public, HideBySig
    CheckLinktimeDemands(IRuntimeMethodInfo, RuntimeModule, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsCAVisibleFromDecoratedType(RuntimeTypeHandle, IRuntimeMethodInfo, RuntimeTypeHandle, RuntimeModule): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetCurrentMethod(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    GetAttributes(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetAttributes(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetImplAttributes(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    ConstructInstantiation(IRuntimeMethodInfo, TypeNameFormatFlags): PrivateScope, Assembly, Static, HideBySig
    GetDeclaringType(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetDeclaringType(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetSlot(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetSlot(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetMethodDef(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetName(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetName(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetUtf8Name(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    MatchesNameHash(RuntimeMethodHandleInternal, UInt32): PrivateScope, Assembly, Static, HideBySig
    InvokeMethod(Object, Object[], Signature, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetSecurityFlags(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetSpecialSecurityFlags(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    PerformSecurityCheck(Object, RuntimeMethodHandleInternal, RuntimeType, UInt32): PrivateScope, Assembly, Static, HideBySig
    PerformSecurityCheck(Object, IRuntimeMethodInfo, RuntimeType, UInt32): PrivateScope, Assembly, Static, HideBySig
    SerializationInvoke(IRuntimeMethodInfo, Object, SerializationInfo, StreamingContext&): PrivateScope, Assembly, Static, HideBySig
    _IsTokenSecurityTransparent(RuntimeModule, Int32): PrivateScope, Assembly, Static, HideBySig
    IsTokenSecurityTransparent(Module, Int32): PrivateScope, Assembly, Static, HideBySig
    IsSecurityCritical(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    IsSecuritySafeCritical(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    IsSecurityTransparent(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetMethodInstantiationInternal(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetMethodInstantiationInternal(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetMethodInstantiationPublic(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    HasMethodInstantiation(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    HasMethodInstantiation(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetStubIfNeeded(RuntimeMethodHandleInternal, RuntimeType, RuntimeType[]): PrivateScope, Assembly, Static, HideBySig
    GetMethodFromCanonical(RuntimeMethodHandleInternal, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsGenericMethodDefinition(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    IsGenericMethodDefinition(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    IsTypicalMethodDefinition(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    GetTypicalMethodDefinition(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    StripMethodInstantiation(IRuntimeMethodInfo): PrivateScope, Assembly, Static, HideBySig
    IsDynamicMethod(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    Destroy(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetResolver(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetCallerType(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    GetMethodBody(IRuntimeMethodInfo, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsConstructor(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetLoaderAllocator(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
Struct System.RuntimeFieldHandleInternal: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr m_handle : Assembly
  Properties:
    System.RuntimeFieldHandleInternal EmptyHandle 'get ' : 
    IntPtr Value 'get ' : 
  Methods:
    get_EmptyHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    IsNullHandle(): PrivateScope, Assembly, HideBySig
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
Interface System.IRuntimeFieldInfo: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.RuntimeFieldHandleInternal Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.RuntimeFieldInfoStub: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(IntPtr, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IRuntimeFieldInfo
Struct System.RuntimeFieldHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.IRuntimeFieldInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    IntPtr Value 'get ' : 
  Methods:
    GetName(RtFieldInfo): PrivateScope, Assembly, Static, HideBySig
    MatchesNameHash(RuntimeFieldHandleInternal, UInt32): PrivateScope, Assembly, Static, HideBySig
    GetAttributes(RuntimeFieldHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetApproxDeclaringType(RuntimeFieldHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetToken(RtFieldInfo): PrivateScope, Assembly, Static, HideBySig
    GetValue(RtFieldInfo, Object, RuntimeType, RuntimeType, Boolean&): PrivateScope, Assembly, Static, HideBySig
    SetValue(RtFieldInfo, Object, Object, RuntimeType, FieldAttributes, RuntimeType, Boolean&): PrivateScope, Assembly, Static, HideBySig
    GetStaticFieldForGenericType(RuntimeFieldHandleInternal, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    AcquiresContextFromThis(RuntimeFieldHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetNativeHandle(): PrivateScope, Assembly, HideBySig
    GetRuntimeFieldInfo(): PrivateScope, Assembly, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    IsNullHandle(): PrivateScope, Assembly, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(RuntimeFieldHandle): PrivateScope, Public, HideBySig
    op_Equality(RuntimeFieldHandle, RuntimeFieldHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RuntimeFieldHandle, RuntimeFieldHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    GetUtf8Name(RuntimeFieldHandleInternal): PrivateScope, Assembly, Static, HideBySig
    GetApproxDeclaringType(IRuntimeFieldInfo): PrivateScope, Assembly, Static, HideBySig
    GetValueDirect(RtFieldInfo, RuntimeType, Void*, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    SetValueDirect(RtFieldInfo, RuntimeType, Void*, Object, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsSecurityCritical(): PrivateScope, Assembly, HideBySig
    IsSecuritySafeCritical(): PrivateScope, Assembly, HideBySig
    IsSecurityTransparent(): PrivateScope, Assembly, HideBySig
    CheckAttributeAccess(RuntimeFieldHandle, RuntimeModule): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.ModuleHandle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Reflection.RuntimeModule): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.ModuleHandle EmptyHandle : Public, Static, InitOnly
  Properties:
    Int32 MDStreamVersion 'get ' : 
  Methods:
    GetRuntimeModule(): PrivateScope, Assembly, HideBySig
    IsNullHandle(): PrivateScope, Assembly, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ModuleHandle): PrivateScope, Public, HideBySig
    op_Equality(ModuleHandle, ModuleHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ModuleHandle, ModuleHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    GetDynamicMethod(DynamicMethod, RuntimeModule, String, Byte[], Resolver): PrivateScope, Assembly, Static, HideBySig
    GetToken(RuntimeModule): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeTypeHandleFromMetadataToken(Int32): PrivateScope, Public, HideBySig
    ResolveTypeHandle(Int32): PrivateScope, Public, HideBySig
    ResolveTypeHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Public, HideBySig
    ResolveTypeHandleInternal(RuntimeModule, Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeMethodHandleFromMetadataToken(Int32): PrivateScope, Public, HideBySig
    ResolveMethodHandle(Int32): PrivateScope, Public, HideBySig
    ResolveMethodHandleInternal(RuntimeModule, Int32): PrivateScope, Assembly, Static, HideBySig
    ResolveMethodHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Public, HideBySig
    ResolveMethodHandleInternal(RuntimeModule, Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Assembly, Static, HideBySig
    ResolveMethodHandleInternalCore(RuntimeModule, Int32, IntPtr[], Int32, IntPtr[], Int32): PrivateScope, Assembly, Static, HideBySig
    GetRuntimeFieldHandleFromMetadataToken(Int32): PrivateScope, Public, HideBySig
    ResolveFieldHandle(Int32): PrivateScope, Public, HideBySig
    ResolveFieldHandle(Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Public, HideBySig
    ResolveFieldHandleInternal(RuntimeModule, Int32, RuntimeTypeHandle[], RuntimeTypeHandle[]): PrivateScope, Assembly, Static, HideBySig
    ContainsPropertyMatchingHash(RuntimeModule, Int32, UInt32): PrivateScope, Assembly, Static, HideBySig
    GetAssembly(RuntimeModule): PrivateScope, Assembly, Static, HideBySig
    GetModuleType(RuntimeModule, ObjectHandleOnStack): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetModuleType(RuntimeModule): PrivateScope, Assembly, Static, HideBySig
    GetPEKind(RuntimeModule, PortableExecutableKinds&(Out), ImageFileMachine&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetMDStreamVersion(RuntimeModule): PrivateScope, Assembly, Static, HideBySig
    get_MDStreamVersion(): PrivateScope, Public, HideBySig, SpecialName
    GetMetadataImport(RuntimeModule): PrivateScope, Assembly, Static, HideBySig
Class System.Signature: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.IRuntimeMethodInfo, System.RuntimeType[], System.RuntimeType, System.Reflection.CallingConventions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IRuntimeMethodInfo, System.RuntimeType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IRuntimeFieldInfo, System.RuntimeType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*, Int32, System.RuntimeType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.RuntimeType[] m_arguments : Assembly
    System.RuntimeType m_declaringType : Assembly
    System.RuntimeType m_returnTypeORfieldType : Assembly
    System.Object m_keepalive : Assembly
    Void* m_sig : Assembly
    Int32 m_managedCallingConventionAndArgIteratorFlags : Assembly
    Int32 m_nSizeOfArgStack : Assembly
    Int32 m_csig : Assembly
    System.RuntimeMethodHandleInternal m_pMethod : Assembly
  Properties:
    System.Reflection.CallingConventions CallingConvention 'get ' : 
    System.RuntimeType[] Arguments 'get ' : 
    System.RuntimeType ReturnType 'get ' : 
    System.RuntimeType FieldType 'get ' : 
  Methods:
    CompareSig(Signature, Signature): PrivateScope, Assembly, Static, HideBySig
    GetCustomModifiers(Int32, Boolean): PrivateScope, Assembly, HideBySig
    get_CallingConvention(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ReturnType(): PrivateScope, Assembly, HideBySig, SpecialName
    get_FieldType(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Resolver: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    GetJitContext(Int32&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetCodeInfo(Int32&, Int32&, Int32&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetLocalsSignature(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetStringLiteral(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetEHInfo(Int32, Void*): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetRawEHInfo(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ResolveToken(Int32, IntPtr&(Out), IntPtr&(Out), IntPtr&(Out)): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ResolveSignature(Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetDynamicMethod(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetSecurityContext(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Struct System.SByte: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.SByte]
    System.IEquatable`1[System.SByte]
  Fields:
    SByte MaxValue = 127 : Public, Static, Literal, HasDefault
    SByte MinValue = -128 : Public, Static, Literal, HasDefault
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(SByte): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, SByte&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, SByte&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.SerializableAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetCustomAttribute(RuntimeType): PrivateScope, Assembly, Static, HideBySig
    IsDefined(RuntimeType): PrivateScope, Assembly, Static, HideBySig
Class System.SharedStatics: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Properties:
    System.String Remoting_Identity_IDGuid 'get ' : 
    UInt64 MemoryFailPointReservedMemory 'get ' : 
  Methods:
    get_Remoting_Identity_IDGuid(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetSharedStringMaker(): PrivateScope, Public, Static, HideBySig
    ReleaseSharedStringMaker(StringMaker&): PrivateScope, Public, Static, HideBySig
    Remoting_Identity_GetNextSeqNum(): PrivateScope, Assembly, Static, HideBySig
    AddMemoryFailPointReservation(Int64): PrivateScope, Assembly, Static, HideBySig
    get_MemoryFailPointReservedMemory(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Struct System.Single: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.Single]
    System.IEquatable`1[System.Single]
  Fields:
    Single m_value : Assembly
    Single MinValue = -3,402823E+38 : Public, Static, Literal, HasDefault
    Single Epsilon = 1,401298E-45 : Public, Static, Literal, HasDefault
    Single MaxValue = 3,402823E+38 : Public, Static, Literal, HasDefault
    Single PositiveInfinity = â : Public, Static, Literal, HasDefault
    Single NegativeInfinity = -â : Public, Static, Literal, HasDefault
    Single NaN = NaN : Public, Static, Literal, HasDefault
  Methods:
    IsInfinity(Single): PrivateScope, Public, Static, HideBySig
    IsPositiveInfinity(Single): PrivateScope, Public, Static, HideBySig
    IsNegativeInfinity(Single): PrivateScope, Public, Static, HideBySig
    IsNaN(Single): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Single, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, Single&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, Single&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.STAThreadAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.MTAThreadAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.TimeoutException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.TimeSpan: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.IComparable`1[System.TimeSpan]
    System.IEquatable`1[System.TimeSpan]
    System.IFormattable
  Fields:
    Int64 _ticks : Assembly
    System.TimeSpan Zero : Public, Static, InitOnly
    System.TimeSpan MaxValue : Public, Static, InitOnly
    System.TimeSpan MinValue : Public, Static, InitOnly
    Int64 TicksPerMillisecond = 10000 : Public, Static, Literal, HasDefault
    Int64 TicksPerSecond = 10000000 : Public, Static, Literal, HasDefault
    Int64 TicksPerMinute = 600000000 : Public, Static, Literal, HasDefault
    Int64 TicksPerHour = 36000000000 : Public, Static, Literal, HasDefault
    Int64 TicksPerDay = 864000000000 : Public, Static, Literal, HasDefault
    Int64 MaxSeconds = 922337203685 : Assembly, Static, Literal, HasDefault
    Int64 MinSeconds = -922337203685 : Assembly, Static, Literal, HasDefault
    Int64 MaxMilliSeconds = 922337203685477 : Assembly, Static, Literal, HasDefault
    Int64 MinMilliSeconds = -922337203685477 : Assembly, Static, Literal, HasDefault
    Int64 TicksPerTenthSecond = 1000000 : Assembly, Static, Literal, HasDefault
  Properties:
    Int64 Ticks 'get ' : 
    Int32 Days 'get ' : 
    Int32 Hours 'get ' : 
    Int32 Milliseconds 'get ' : 
    Int32 Minutes 'get ' : 
    Int32 Seconds 'get ' : 
    Double TotalDays 'get ' : 
    Double TotalHours 'get ' : 
    Double TotalMilliseconds 'get ' : 
    Double TotalMinutes 'get ' : 
    Double TotalSeconds 'get ' : 
  Methods:
    get_Ticks(): PrivateScope, Public, HideBySig, SpecialName
    get_Days(): PrivateScope, Public, HideBySig, SpecialName
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Milliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalDays(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalHours(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalMinutes(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalSeconds(): PrivateScope, Public, HideBySig, SpecialName
    Add(TimeSpan): PrivateScope, Public, HideBySig
    Compare(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(TimeSpan): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromDays(Double): PrivateScope, Public, Static, HideBySig
    Duration(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(TimeSpan): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    FromHours(Double): PrivateScope, Public, Static, HideBySig
    FromMilliseconds(Double): PrivateScope, Public, Static, HideBySig
    FromMinutes(Double): PrivateScope, Public, Static, HideBySig
    Negate(): PrivateScope, Public, HideBySig
    FromSeconds(Double): PrivateScope, Public, Static, HideBySig
    Subtract(TimeSpan): PrivateScope, Public, HideBySig
    FromTicks(Int64): PrivateScope, Public, Static, HideBySig
    TimeToTicks(Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String[], IFormatProvider): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String, IFormatProvider, TimeSpanStyles): PrivateScope, Public, Static, HideBySig
    ParseExact(String, String[], IFormatProvider, TimeSpanStyles): PrivateScope, Public, Static, HideBySig
    TryParse(String, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, IFormatProvider, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String, IFormatProvider, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String[], IFormatProvider, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String, IFormatProvider, TimeSpanStyles, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, TimeSpan&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_UnaryNegation(TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryPlus(TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(TimeSpan, TimeSpan): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.TimeZone: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Properties:
    System.TimeZone CurrentTimeZone 'get ' : 
    System.String StandardName 'get ' : 
    System.String DaylightName 'get ' : 
  Methods:
    get_CurrentTimeZone(): PrivateScope, Public, Static, HideBySig, SpecialName
    ResetTimeZone(): PrivateScope, Assembly, Static, HideBySig
    get_StandardName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DaylightName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetUtcOffset(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToUniversalTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToLocalTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDaylightChanges(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsDaylightSavingTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsDaylightSavingTime(DateTime, DaylightTime): PrivateScope, Public, Static, HideBySig
    CalculateUtcOffset(DateTime, DaylightTime): PrivateScope, Assembly, Static, HideBySig
Struct System.TimeZoneInfoOptions: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TimeZoneInfoOptions None = 1 : Public, Static, Literal, HasDefault
    System.TimeZoneInfoOptions NoThrowOnInvalidTime = 2 : Public, Static, Literal, HasDefault
Class System.TimeZoneInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[System.TimeZoneInfo]
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Properties:
    System.String Id 'get ' : 
    System.String DisplayName 'get ' : 
    System.String StandardName 'get ' : 
    System.String DaylightName 'get ' : 
    System.TimeSpan BaseUtcOffset 'get ' : 
    Boolean SupportsDaylightSavingTime 'get ' : 
    System.TimeZoneInfo Local 'get ' : 
    System.TimeZoneInfo Utc 'get ' : 
  Methods:
    ConvertTimeToUtc(DateTime, TimeZoneInfoOptions): PrivateScope, Assembly, Static, HideBySig
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_StandardName(): PrivateScope, Public, HideBySig, SpecialName
    get_DaylightName(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseUtcOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsDaylightSavingTime(): PrivateScope, Public, HideBySig, SpecialName
    GetAdjustmentRules(): PrivateScope, Public, HideBySig
    GetAmbiguousTimeOffsets(DateTimeOffset): PrivateScope, Public, HideBySig
    GetAmbiguousTimeOffsets(DateTime): PrivateScope, Public, HideBySig
    GetUtcOffset(DateTimeOffset): PrivateScope, Public, HideBySig
    GetUtcOffset(DateTime): PrivateScope, Public, HideBySig
    GetLocalUtcOffset(DateTime, TimeZoneInfoOptions): PrivateScope, Assembly, Static, HideBySig
    GetUtcOffset(DateTime, TimeZoneInfoOptions): PrivateScope, Assembly, HideBySig
    IsAmbiguousTime(DateTimeOffset): PrivateScope, Public, HideBySig
    IsAmbiguousTime(DateTime): PrivateScope, Public, HideBySig
    IsAmbiguousTime(DateTime, TimeZoneInfoOptions): PrivateScope, Assembly, HideBySig
    IsDaylightSavingTime(DateTimeOffset): PrivateScope, Public, HideBySig
    IsDaylightSavingTime(DateTime): PrivateScope, Public, HideBySig
    IsDaylightSavingTime(DateTime, TimeZoneInfoOptions): PrivateScope, Assembly, HideBySig
    IsInvalidTime(DateTime): PrivateScope, Public, HideBySig
    ClearCachedData(): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTimeOffset, String): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTime, String): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTime, String, String): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTimeOffset, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo, TimeZoneInfoOptions): PrivateScope, Assembly, Static, HideBySig
    ConvertTimeFromUtc(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTimeToUtc(DateTime): PrivateScope, Public, Static, HideBySig
    ConvertTimeToUtc(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    Equals(TimeZoneInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    FromSerializedString(String): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetSystemTimeZones(): PrivateScope, Public, Static, HideBySig
    HasSameRules(TimeZoneInfo): PrivateScope, Public, HideBySig
    get_Local(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSerializedString(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Utc(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateCustomTimeZone(String, TimeSpan, String, String): PrivateScope, Public, Static, HideBySig
    CreateCustomTimeZone(String, TimeSpan, String, String, String, AdjustmentRule[]): PrivateScope, Public, Static, HideBySig
    CreateCustomTimeZone(String, TimeSpan, String, String, String, AdjustmentRule[], Boolean): PrivateScope, Public, Static, HideBySig
    FindSystemTimeZoneById(String): PrivateScope, Public, Static, HideBySig
    GetDateTimeNowUtcOffsetFromUtc(DateTime, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetUtcOffsetFromUtc(DateTime, TimeZoneInfo, Boolean&(Out), Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    UtcOffsetOutOfRange(TimeSpan): PrivateScope, Assembly, Static, HideBySig
Class System.TimeZoneNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Type: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Reflection.MemberInfo
  Interfaces:
    System.Runtime.InteropServices._Type
    System.Reflection.IReflect
  Fields:
    System.Reflection.MemberFilter FilterAttribute : Public, Static, InitOnly
    System.Reflection.MemberFilter FilterName : Public, Static, InitOnly
    System.Reflection.MemberFilter FilterNameIgnoreCase : Public, Static, InitOnly
    System.Object Missing : Public, Static, InitOnly
    Char Delimiter : Public, Static, InitOnly
    System.Type[] EmptyTypes : Public, Static, InitOnly
    System.Reflection.BindingFlags DeclaredOnlyLookup = 62 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Reflection.MemberTypes MemberType 'get ' : 
    System.Type DeclaringType 'get ' : 
    System.Reflection.MethodBase DeclaringMethod 'get ' : 
    System.Type ReflectedType 'get ' : 
    System.Runtime.InteropServices.StructLayoutAttribute StructLayoutAttribute 'get ' : 
    System.Guid GUID 'get ' : 
    System.Reflection.Binder DefaultBinder 'get ' : 
    System.Reflection.Module Module 'get ' : 
    System.Reflection.Assembly Assembly 'get ' : 
    System.RuntimeTypeHandle TypeHandle 'get ' : 
    System.String FullName 'get ' : 
    System.String Namespace 'get ' : 
    System.String AssemblyQualifiedName 'get ' : 
    System.Type BaseType 'get ' : 
    System.Reflection.ConstructorInfo TypeInitializer 'get ' : 
    Boolean IsNested 'get ' : 
    System.Reflection.TypeAttributes Attributes 'get ' : 
    System.Reflection.GenericParameterAttributes GenericParameterAttributes 'get ' : 
    Boolean IsVisible 'get ' : 
    Boolean IsNotPublic 'get ' : 
    Boolean IsPublic 'get ' : 
    Boolean IsNestedPublic 'get ' : 
    Boolean IsNestedPrivate 'get ' : 
    Boolean IsNestedFamily 'get ' : 
    Boolean IsNestedAssembly 'get ' : 
    Boolean IsNestedFamANDAssem 'get ' : 
    Boolean IsNestedFamORAssem 'get ' : 
    Boolean IsAutoLayout 'get ' : 
    Boolean IsLayoutSequential 'get ' : 
    Boolean IsExplicitLayout 'get ' : 
    Boolean IsClass 'get ' : 
    Boolean IsInterface 'get ' : 
    Boolean IsValueType 'get ' : 
    Boolean IsAbstract 'get ' : 
    Boolean IsSealed 'get ' : 
    Boolean IsEnum 'get ' : 
    Boolean IsSpecialName 'get ' : 
    Boolean IsImport 'get ' : 
    Boolean IsSerializable 'get ' : 
    Boolean IsAnsiClass 'get ' : 
    Boolean IsUnicodeClass 'get ' : 
    Boolean IsAutoClass 'get ' : 
    Boolean IsArray 'get ' : 
    Boolean IsSzArray 'get ' : 
    Boolean IsGenericType 'get ' : 
    Boolean IsGenericTypeDefinition 'get ' : 
    Boolean IsConstructedGenericType 'get ' : 
    Boolean IsGenericParameter 'get ' : 
    Int32 GenericParameterPosition 'get ' : 
    Boolean ContainsGenericParameters 'get ' : 
    Boolean IsByRef 'get ' : 
    Boolean IsPointer 'get ' : 
    Boolean IsPrimitive 'get ' : 
    Boolean IsCOMObject 'get ' : 
    Boolean IsWindowsRuntimeObject 'get ' : 
    Boolean IsExportedToWindowsRuntime 'get ' : 
    Boolean HasElementType 'get ' : 
    Boolean IsContextful 'get ' : 
    Boolean IsMarshalByRef 'get ' : 
    Boolean HasProxyAttribute 'get ' : 
    System.Type[] GenericTypeArguments 'get ' : 
    Boolean IsSecurityCritical 'get ' : 
    Boolean IsSecuritySafeCritical 'get ' : 
    Boolean IsSecurityTransparent 'get ' : 
    Boolean NeedsReflectionSecurityCheck 'get ' : 
    System.Type UnderlyingSystemType 'get ' : 
  Methods:
    get_MemberType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DeclaringMethod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReflectedType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetType(String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    GetType(String, Boolean): PrivateScope, Public, Static, HideBySig
    GetType(String): PrivateScope, Public, Static, HideBySig
    GetType(String, Func`2, Func`4): PrivateScope, Public, Static, HideBySig
    GetType(String, Func`2, Func`4, Boolean): PrivateScope, Public, Static, HideBySig
    GetType(String, Func`2, Func`4, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    ReflectionOnlyGetType(String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    MakePointerType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_StructLayoutAttribute(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MakeByRefType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeArrayType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MakeArrayType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTypeFromProgID(String): PrivateScope, Public, Static, HideBySig
    GetTypeFromProgID(String, Boolean): PrivateScope, Public, Static, HideBySig
    GetTypeFromProgID(String, String): PrivateScope, Public, Static, HideBySig
    GetTypeFromProgID(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    GetTypeFromCLSID(Guid): PrivateScope, Public, Static, HideBySig
    GetTypeFromCLSID(Guid, Boolean): PrivateScope, Public, Static, HideBySig
    GetTypeFromCLSID(Guid, String): PrivateScope, Public, Static, HideBySig
    GetTypeFromCLSID(Guid, String, Boolean): PrivateScope, Public, Static, HideBySig
    GetTypeCode(Type): PrivateScope, Public, Static, HideBySig
    get_GUID(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DefaultBinder(): PrivateScope, Public, Static, HideBySig, SpecialName
    InvokeMember(String, BindingFlags, Binder, Object, Object[], ParameterModifier[], CultureInfo, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InvokeMember(String, BindingFlags, Binder, Object, Object[], CultureInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InvokeMember(String, BindingFlags, Binder, Object, Object[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Module(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Assembly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TypeHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTypeHandleInternal(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetTypeHandle(Object): PrivateScope, Public, Static, HideBySig
    GetTypeFromHandleUnsafe(IntPtr): PrivateScope, Assembly, Static, HideBySig
    GetTypeFromHandle(RuntimeTypeHandle): PrivateScope, Public, Static, HideBySig
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Namespace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AssemblyQualifiedName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetArrayRank(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BaseType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetConstructor(BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConstructor(BindingFlags, Binder, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConstructor(Type[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConstructors(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConstructors(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_TypeInitializer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethod(String, BindingFlags, Binder, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethod(String, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethod(String, Type[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethod(String, BindingFlags): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethod(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethods(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMethods(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetField(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetField(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFields(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFields(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInterface(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetInterface(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInterfaces(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindInterfaces(TypeFilter, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEvent(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEvent(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEvents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEvents(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProperty(String, BindingFlags, Binder, Type, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, Type, Type[], ParameterModifier[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, BindingFlags): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, Type, Type[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, Type[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperty(String, BindingFlags, Type): PrivateScope, Assembly, HideBySig
    GetProperty(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetProperties(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProperties(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNestedTypes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNestedTypes(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNestedType(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNestedType(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMember(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMember(String, BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMember(String, MemberTypes, BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMembers(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMembers(BindingFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDefaultMembers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindMembers(MemberTypes, BindingFlags, MemberFilter, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsNested(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericParameterAttributes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotPublic(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPublic(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedPublic(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedPrivate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedFamily(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedAssembly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedFamANDAssem(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNestedFamORAssem(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAutoLayout(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsLayoutSequential(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsExplicitLayout(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsClass(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsInterface(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsValueType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAbstract(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSealed(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsEnum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSpecialName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsImport(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSerializable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAnsiClass(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsUnicodeClass(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAutoClass(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSzArray(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_IsGenericType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsGenericTypeDefinition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsConstructedGenericType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsGenericParameter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GenericParameterPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ContainsGenericParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetGenericParameterConstraints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsByRef(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPointer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPrimitive(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCOMObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsWindowsRuntimeObject(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsExportedToWindowsRuntime(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasElementType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsContextful(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsMarshalByRef(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasProxyAttribute(): PrivateScope, Assembly, HideBySig, SpecialName
    IsWindowsRuntimeObjectImpl(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsExportedToWindowsRuntimeImpl(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    MakeGenericType(Type[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasProxyAttributeImpl(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    GetElementType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGenericArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_GenericTypeArguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetGenericTypeDefinition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRootElementType(): PrivateScope, Assembly, HideBySig
    GetEnumNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumUnderlyingType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEnumDefined(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumName(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsIntegerType(Type): PrivateScope, Assembly, Static, HideBySig
    get_IsSecurityCritical(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSecuritySafeCritical(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSecurityTransparent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NeedsReflectionSecurityCheck(): PrivateScope, Assembly, HideBySig, SpecialName
    get_UnderlyingSystemType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsSubclassOf(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInstanceOfType(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsAssignableFrom(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEquivalentTo(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImplementInterface(Type): PrivateScope, Assembly, HideBySig
    FormatTypeName(): PrivateScope, Assembly, HideBySig
    FormatTypeName(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetTypeArray(Object[]): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_Equality(Type, Type): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Type, Type): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetInterfaceMap(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.TypeAccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.TypeLoadException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.SafeTypeNameParserHandle: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.TypeNameParser: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    GetType(String, Func`2, Func`4, Boolean, Boolean, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.TypeCode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TypeCode Empty = 0 : Public, Static, Literal, HasDefault
    System.TypeCode Object = 1 : Public, Static, Literal, HasDefault
    System.TypeCode DBNull = 2 : Public, Static, Literal, HasDefault
    System.TypeCode Boolean = 3 : Public, Static, Literal, HasDefault
    System.TypeCode Char = 4 : Public, Static, Literal, HasDefault
    System.TypeCode SByte = 5 : Public, Static, Literal, HasDefault
    System.TypeCode Byte = 6 : Public, Static, Literal, HasDefault
    System.TypeCode Int16 = 7 : Public, Static, Literal, HasDefault
    System.TypeCode UInt16 = 8 : Public, Static, Literal, HasDefault
    System.TypeCode Int32 = 9 : Public, Static, Literal, HasDefault
    System.TypeCode UInt32 = 10 : Public, Static, Literal, HasDefault
    System.TypeCode Int64 = 11 : Public, Static, Literal, HasDefault
    System.TypeCode UInt64 = 12 : Public, Static, Literal, HasDefault
    System.TypeCode Single = 13 : Public, Static, Literal, HasDefault
    System.TypeCode Double = 14 : Public, Static, Literal, HasDefault
    System.TypeCode Decimal = 15 : Public, Static, Literal, HasDefault
    System.TypeCode DateTime = 16 : Public, Static, Literal, HasDefault
    System.TypeCode String = 18 : Public, Static, Literal, HasDefault
Struct System.TypedReference: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean IsNull 'get ' : 
  Methods:
    InternalToObject(Void*): PrivateScope, Assembly, Static, HideBySig
    MakeTypedReference(Object, FieldInfo[]): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToObject(TypedReference): PrivateScope, Public, Static, HideBySig
    get_IsNull(): PrivateScope, Assembly, HideBySig, SpecialName
    GetTargetType(TypedReference): PrivateScope, Public, Static, HideBySig
    TargetTypeToken(TypedReference): PrivateScope, Public, Static, HideBySig
    SetTypedReference(TypedReference, Object): PrivateScope, Public, Static, HideBySig
    InternalSetTypedReference(Void*, Object): PrivateScope, Assembly, Static, HideBySig
Class System.TypeInitializationException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TypeName 'get ' : 
  Methods:
    get_TypeName(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.TypeLoadException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ResourceId : Assembly
  Properties:
    System.String Message 'get ' : 
    System.String TypeName 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeName(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Struct System.UInt16: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.UInt16]
    System.IEquatable`1[System.UInt16]
  Fields:
    UInt16 MaxValue = 65535 : Public, Static, Literal, HasDefault
    UInt16 MinValue = 0 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(UInt16): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, UInt16&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, UInt16&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.UInt32: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.UInt32]
    System.IEquatable`1[System.UInt32]
  Fields:
    UInt32 MaxValue = 4294967295 : Public, Static, Literal, HasDefault
    UInt32 MinValue = 0 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(UInt32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, UInt32&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, UInt32&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.UInt64: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IComparable
    System.IFormattable
    System.IConvertible
    System.IComparable`1[System.UInt64]
    System.IEquatable`1[System.UInt64]
  Fields:
    UInt64 MaxValue = 18446744073709551615 : Public, Static, Literal, HasDefault
    UInt64 MinValue = 0 : Public, Static, Literal, HasDefault
  Methods:
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(UInt64): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, UInt64&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, UInt64&(Out)): PrivateScope, Public, Static, HideBySig
    GetTypeCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.UIntPtr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    UIntPtr Zero : Public, Static, InitOnly
  Properties:
    Int32 Size 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToUInt32(): PrivateScope, Public, HideBySig
    ToUInt64(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Explicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Void*): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(UIntPtr, UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(UIntPtr, UIntPtr): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig
    op_Addition(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig
    op_Subtraction(UIntPtr, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToPointer(): PrivateScope, Public, HideBySig
Class System.UnauthorizedAccessException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.UnitySerializationHolder: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IObjectReference
  Fields:
    Int32 EmptyUnity = 1 : Assembly, Static, Literal, HasDefault
    Int32 NullUnity = 2 : Assembly, Static, Literal, HasDefault
    Int32 MissingUnity = 3 : Assembly, Static, Literal, HasDefault
    Int32 RuntimeTypeUnity = 4 : Assembly, Static, Literal, HasDefault
    Int32 ModuleUnity = 5 : Assembly, Static, Literal, HasDefault
    Int32 AssemblyUnity = 6 : Assembly, Static, Literal, HasDefault
    Int32 GenericParameterTypeUnity = 7 : Assembly, Static, Literal, HasDefault
    Int32 PartialInstantiationTypeUnity = 8 : Assembly, Static, Literal, HasDefault
    Int32 Pointer = 1 : Assembly, Static, Literal, HasDefault
    Int32 Array = 2 : Assembly, Static, Literal, HasDefault
    Int32 SzArray = 3 : Assembly, Static, Literal, HasDefault
    Int32 ByRef = 4 : Assembly, Static, Literal, HasDefault
  Methods:
    GetUnitySerializationInfo(SerializationInfo, Missing): PrivateScope, Assembly, Static, HideBySig
    AddElementTypes(SerializationInfo, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    MakeElementTypes(Type): PrivateScope, Assembly, HideBySig
    GetUnitySerializationInfo(SerializationInfo, RuntimeType): PrivateScope, Assembly, Static, HideBySig
    GetUnitySerializationInfo(SerializationInfo, Int32, String, RuntimeAssembly): PrivateScope, Assembly, Static, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRealObject(StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.UnhandledExceptionEventArgs: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object ExceptionObject 'get ' : 
    Boolean IsTerminating 'get ' : 
  Methods:
    get_ExceptionObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTerminating(): PrivateScope, Public, HideBySig, SpecialName
Class System.UnhandledExceptionEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, UnhandledExceptionEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, UnhandledExceptionEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.UnSafeCharBuffer: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    AppendString(String): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class System.ValueType: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetHashCodeOfPtr(IntPtr): PrivateScope, Assembly, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.Variant: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, System.Object, Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(SByte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Decimal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Void*, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Type[] ClassTypes : Assembly, Static, InitOnly
    System.Variant Empty : Assembly, Static, InitOnly
    System.Variant Missing : Assembly, Static, InitOnly
    System.Variant DBNull : Assembly, Static, InitOnly
    Int32 CV_EMPTY = 0 : Assembly, Static, Literal, HasDefault
    Int32 CV_VOID = 1 : Assembly, Static, Literal, HasDefault
    Int32 CV_BOOLEAN = 2 : Assembly, Static, Literal, HasDefault
    Int32 CV_CHAR = 3 : Assembly, Static, Literal, HasDefault
    Int32 CV_I1 = 4 : Assembly, Static, Literal, HasDefault
    Int32 CV_U1 = 5 : Assembly, Static, Literal, HasDefault
    Int32 CV_I2 = 6 : Assembly, Static, Literal, HasDefault
    Int32 CV_U2 = 7 : Assembly, Static, Literal, HasDefault
    Int32 CV_I4 = 8 : Assembly, Static, Literal, HasDefault
    Int32 CV_U4 = 9 : Assembly, Static, Literal, HasDefault
    Int32 CV_I8 = 10 : Assembly, Static, Literal, HasDefault
    Int32 CV_U8 = 11 : Assembly, Static, Literal, HasDefault
    Int32 CV_R4 = 12 : Assembly, Static, Literal, HasDefault
    Int32 CV_R8 = 13 : Assembly, Static, Literal, HasDefault
    Int32 CV_STRING = 14 : Assembly, Static, Literal, HasDefault
    Int32 CV_PTR = 15 : Assembly, Static, Literal, HasDefault
    Int32 CV_DATETIME = 16 : Assembly, Static, Literal, HasDefault
    Int32 CV_TIMESPAN = 17 : Assembly, Static, Literal, HasDefault
    Int32 CV_OBJECT = 18 : Assembly, Static, Literal, HasDefault
    Int32 CV_DECIMAL = 19 : Assembly, Static, Literal, HasDefault
    Int32 CV_ENUM = 21 : Assembly, Static, Literal, HasDefault
    Int32 CV_MISSING = 22 : Assembly, Static, Literal, HasDefault
    Int32 CV_NULL = 23 : Assembly, Static, Literal, HasDefault
    Int32 CV_LAST = 24 : Assembly, Static, Literal, HasDefault
    Int32 TypeCodeBitMask = 65535 : Assembly, Static, Literal, HasDefault
    Int32 VTBitMask = -16777216 : Assembly, Static, Literal, HasDefault
    Int32 VTBitShift = 24 : Assembly, Static, Literal, HasDefault
    Int32 ArrayBitMask = 65536 : Assembly, Static, Literal, HasDefault
    Int32 EnumI1 = 1048576 : Assembly, Static, Literal, HasDefault
    Int32 EnumU1 = 2097152 : Assembly, Static, Literal, HasDefault
    Int32 EnumI2 = 3145728 : Assembly, Static, Literal, HasDefault
    Int32 EnumU2 = 4194304 : Assembly, Static, Literal, HasDefault
    Int32 EnumI4 = 5242880 : Assembly, Static, Literal, HasDefault
    Int32 EnumU4 = 6291456 : Assembly, Static, Literal, HasDefault
    Int32 EnumI8 = 7340032 : Assembly, Static, Literal, HasDefault
    Int32 EnumU8 = 8388608 : Assembly, Static, Literal, HasDefault
    Int32 EnumMask = 15728640 : Assembly, Static, Literal, HasDefault
  Properties:
    Int32 CVType 'get ' : 
  Methods:
    SetFieldsObject(Object): PrivateScope, Assembly, HideBySig
    MarshalHelperConvertObjectToVariant(Object, Variant&): PrivateScope, Assembly, Static, HideBySig
    MarshalHelperConvertVariantToObject(Variant&): PrivateScope, Assembly, Static, HideBySig
    GetR8FromVar(): PrivateScope, Assembly, HideBySig
    GetR4FromVar(): PrivateScope, Assembly, HideBySig
    SetFieldsR4(Single): PrivateScope, Assembly, HideBySig
    SetFieldsR8(Double): PrivateScope, Assembly, HideBySig
    GetI8FromVar(): PrivateScope, Assembly, HideBySig
    get_CVType(): PrivateScope, Assembly, HideBySig, SpecialName
    ToObject(): PrivateScope, Public, HideBySig
    MarshalHelperCastVariant(Object, Int32, Variant&): PrivateScope, Assembly, Static, HideBySig
Class System.Version: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.IComparable
    System.IComparable`1[System.Version]
    System.IEquatable`1[System.Version]
  Properties:
    Int32 Major 'get ' : 
    Int32 Minor 'get ' : 
    Int32 Build 'get ' : 
    Int32 Revision 'get ' : 
    Int16 MajorRevision 'get ' : 
    Int16 MinorRevision 'get ' : 
  Methods:
    get_Major(): PrivateScope, Public, HideBySig, SpecialName
    get_Minor(): PrivateScope, Public, HideBySig, SpecialName
    get_Build(): PrivateScope, Public, HideBySig, SpecialName
    get_Revision(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorRevision(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorRevision(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Version): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Version): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Int32): PrivateScope, Public, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    TryParse(String, Version&(Out)): PrivateScope, Public, Static, HideBySig
    op_Equality(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Version, Version): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Void: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
Class System.WeakReference: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    IntPtr m_handle : Assembly
  Properties:
    Boolean IsAlive 'get ' : 
    Boolean TrackResurrection 'get ' : 
    System.Object Target 'get set' : 
  Methods:
    get_IsAlive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TrackResurrection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Target(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.WeakReference`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  Type parameter: T,  ReferenceType
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    IntPtr m_handle : Assembly
  Methods:
    TryGetTarget(T&(Out)): PrivateScope, Public, HideBySig
    SetTarget(T): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.XmlIgnoreMemberAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.CLRConfig: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CheckLegacyManagedDeflateStream(): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    CheckThrowUnobservedTaskExceptions(): PrivateScope, Assembly, Static, HideBySig, HasSecurity
Class System.ThreadStaticAttribute: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Nullable`1[T]: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.ValueType
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    T value : Assembly
  Properties:
    Boolean HasValue 'get ' : 
    T Value    'get ' : 
  Methods:
    get_HasValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    GetValueOrDefault(): PrivateScope, Public, HideBySig
    GetValueOrDefault(T): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Implicit(T): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Nullable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Compare(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    Equals(Nullable`1, Nullable`1): PrivateScope, Public, Static, HideBySig
    GetUnderlyingType(Type): PrivateScope, Public, Static, HideBySig
Class System.DateTimeFormat: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.TimeSpan NullOffset : Assembly, Static, InitOnly
    Char[] allStandardFormats : Assembly, Static
    System.Globalization.DateTimeFormatInfo InvariantFormatInfo : Assembly, Static, InitOnly
    System.String[] InvariantAbbreviatedMonthNames : Assembly, Static, InitOnly
    System.String[] InvariantAbbreviatedDayNames : Assembly, Static, InitOnly
    System.String[] fixedNumberFormats : Assembly, Static
    Int32 MaxSecondsFractionDigits = 7 : Assembly, Static, Literal, HasDefault
    System.String RoundtripFormat = yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK : Assembly, Static, Literal, HasDefault
    System.String RoundtripDateTimeUnfixed = yyyy'-'MM'-'ddTHH':'mm':'ss zzz : Assembly, Static, Literal, HasDefault
    System.String Gmt = GMT : Assembly, Static, Literal, HasDefault
  Methods:
    GetRealFormat(String, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    Format(DateTime, String, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    Format(DateTime, String, DateTimeFormatInfo, TimeSpan): PrivateScope, Assembly, Static, HideBySig
    FastFormatRfc1123(DateTime, TimeSpan, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    FormatDigits(StringBuilder, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    FormatDigits(StringBuilder, Int32, Int32, Boolean): PrivateScope, Assembly, Static, HideBySig
    ParseRepeatPattern(String, Int32, Char): PrivateScope, Assembly, Static, HideBySig
    ParseQuoteString(String, Int32, StringBuilder): PrivateScope, Assembly, Static, HideBySig
    ParseNextChar(String, Int32): PrivateScope, Assembly, Static, HideBySig
    FastFormatRoundtrip(DateTime, TimeSpan): PrivateScope, Assembly, Static, HideBySig
    AppendNumber(StringBuilder, Int64, Int32): PrivateScope, Assembly, Static, HideBySig
    GetAllDateTimes(DateTime, Char, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    GetAllDateTimes(DateTime, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    InvalidFormatForLocal(String, DateTime): PrivateScope, Assembly, Static, HideBySig
    InvalidFormatForUtc(String, DateTime): PrivateScope, Assembly, Static, HideBySig
Class System.DateTimeParse: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    MatchNumberDelegate m_hebrewNumberParser : Assembly, Static
    Boolean enableAmPmParseAdjustment : Assembly, Static
    Int32 MaxDateTimeNumberDigits = 8 : Assembly, Static, Literal, HasDefault
    System.String GMTName = GMT : Assembly, Static, Literal, HasDefault
    System.String ZuluName = Z : Assembly, Static, Literal, HasDefault
  Methods:
    TryParseExact(String, String, DateTimeFormatInfo, DateTimeStyles, DateTimeResult&): PrivateScope, Assembly, Static, HideBySig
    TryParseExactMultiple(String, String[], DateTimeFormatInfo, DateTimeStyles, DateTimeResult&): PrivateScope, Assembly, Static, HideBySig
    Parse(String, DateTimeFormatInfo, DateTimeStyles): PrivateScope, Assembly, Static, HideBySig
    TryParse(String, DateTimeFormatInfo, DateTimeStyles, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParse(String, DateTimeFormatInfo, DateTimeStyles, DateTimeResult&): PrivateScope, Assembly, Static, HideBySig
    GetAmPmParseFlag(): PrivateScope, Assembly, Static, HideBySig
    ParseExact(String, String, DateTimeFormatInfo, DateTimeStyles): PrivateScope, Assembly, Static, HideBySig
    ParseExact(String, String, DateTimeFormatInfo, DateTimeStyles, TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseExact(String, String, DateTimeFormatInfo, DateTimeStyles, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseExact(String, String, DateTimeFormatInfo, DateTimeStyles, DateTime&(Out), TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    ParseExactMultiple(String, String[], DateTimeFormatInfo, DateTimeStyles): PrivateScope, Assembly, Static, HideBySig
    ParseExactMultiple(String, String[], DateTimeFormatInfo, DateTimeStyles, TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseExactMultiple(String, String[], DateTimeFormatInfo, DateTimeStyles, DateTime&(Out), TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseExactMultiple(String, String[], DateTimeFormatInfo, DateTimeStyles, DateTime&(Out)): PrivateScope, Assembly, Static, HideBySig
    IsDigit(Char): PrivateScope, Assembly, Static, HideBySig
    ProcessHebrewTerminalState(DS, DateTimeResult&, DateTimeStyles&, DateTimeRawInfo&, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    ProcessTerminaltState(DS, DateTimeResult&, DateTimeStyles&, DateTimeRawInfo&, DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
    Parse(String, DateTimeFormatInfo, DateTimeStyles, TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParse(String, DateTimeFormatInfo, DateTimeStyles, DateTime&(Out), TimeSpan&(Out)): PrivateScope, Assembly, Static, HideBySig
    MatchHebrewDigits(__DTString&, Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    ParseDigits(__DTString&, Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    ParseDigits(__DTString&, Int32, Int32, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    TryParseQuoteString(String, Int32, StringBuilder, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    LexTraceExit(String, DS): PrivateScope, Assembly, Static, HideBySig
    PTSTraceExit(DS, Boolean): PrivateScope, Assembly, Static, HideBySig
    TPTraceExit(String, DS): PrivateScope, Assembly, Static, HideBySig
    DTFITrace(DateTimeFormatInfo): PrivateScope, Assembly, Static, HideBySig
Struct System.__DTString: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.Globalization.DateTimeFormatInfo, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Globalization.DateTimeFormatInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Value : Assembly
    Int32 Index : Assembly
    Int32 len : Assembly
    Char m_current : Assembly
  Properties:
    System.Globalization.CompareInfo CompareInfo 'get ' : 
  Methods:
    get_CompareInfo(): PrivateScope, Assembly, HideBySig, SpecialName
    GetNext(): PrivateScope, Assembly, HideBySig
    AtEnd(): PrivateScope, Assembly, HideBySig
    Advance(Int32): PrivateScope, Assembly, HideBySig
    GetRegularToken(TokenType&(Out), Int32&(Out), DateTimeFormatInfo): PrivateScope, Assembly, HideBySig
    GetSeparatorToken(DateTimeFormatInfo, Int32&(Out), Char&(Out)): PrivateScope, Assembly, HideBySig
    MatchSpecifiedWord(String): PrivateScope, Assembly, HideBySig
    MatchSpecifiedWord(String, Int32): PrivateScope, Assembly, HideBySig
    MatchSpecifiedWords(String, Boolean, Int32&): PrivateScope, Assembly, HideBySig
    Match(String): PrivateScope, Assembly, HideBySig
    Match(Char): PrivateScope, Assembly, HideBySig
    MatchLongestWords(String[], Int32&): PrivateScope, Assembly, HideBySig
    GetRepeatCount(): PrivateScope, Assembly, HideBySig
    GetNextDigit(): PrivateScope, Assembly, HideBySig
    GetChar(): PrivateScope, Assembly, HideBySig
    GetDigit(): PrivateScope, Assembly, HideBySig
    SkipWhiteSpaces(): PrivateScope, Assembly, HideBySig
    SkipWhiteSpaceCurrent(): PrivateScope, Assembly, HideBySig
    TrimTail(): PrivateScope, Assembly, HideBySig
    RemoveTrailingInQuoteSpaces(): PrivateScope, Assembly, HideBySig
    RemoveLeadingInQuoteSpaces(): PrivateScope, Assembly, HideBySig
    GetSubString(): PrivateScope, Assembly, HideBySig
    ConsumeSubString(DTSubString): PrivateScope, Assembly, HideBySig
Struct System.DTSubStringType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.DTSubStringType Unknown = 0 : Public, Static, Literal, HasDefault
    System.DTSubStringType Invalid = 1 : Public, Static, Literal, HasDefault
    System.DTSubStringType Number = 2 : Public, Static, Literal, HasDefault
    System.DTSubStringType End = 3 : Public, Static, Literal, HasDefault
    System.DTSubStringType Other = 4 : Public, Static, Literal, HasDefault
Struct System.DTSubString: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String s : Assembly
    Int32 index : Assembly
    Int32 length : Assembly
    System.DTSubStringType type : Assembly
    Int32 value : Assembly
  Properties:
    Char Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.DateTimeToken: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    DTT dtt : Assembly
    System.TokenType suffix : Assembly
    Int32 num : Assembly
Struct System.DateTimeRawInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 numCount : Assembly
    Int32 month : Assembly
    Int32 year : Assembly
    Int32 dayOfWeek : Assembly
    Int32 era : Assembly
    TM timeMark : Assembly
    Double fraction : Assembly
    Boolean hasSameDateAndTimeSeparators : Assembly
    Boolean timeZone : Assembly
  Methods:
    Init(Int32*): PrivateScope, Assembly, HideBySig
    AddNumber(Int32): PrivateScope, Assembly, HideBySig
    GetNumber(Int32): PrivateScope, Assembly, HideBySig
Struct System.ParseFailureKind: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ParseFailureKind None = 0 : Public, Static, Literal, HasDefault
    System.ParseFailureKind ArgumentNull = 1 : Public, Static, Literal, HasDefault
    System.ParseFailureKind Format = 2 : Public, Static, Literal, HasDefault
    System.ParseFailureKind FormatWithParameter = 3 : Public, Static, Literal, HasDefault
    System.ParseFailureKind FormatBadDateTimeCalendar = 4 : Public, Static, Literal, HasDefault
Struct System.ParseFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.ParseFlags HaveYear = 1 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveMonth = 2 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveDay = 4 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveHour = 8 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveMinute = 16 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveSecond = 32 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveTime = 64 : Public, Static, Literal, HasDefault
    System.ParseFlags HaveDate = 128 : Public, Static, Literal, HasDefault
    System.ParseFlags TimeZoneUsed = 256 : Public, Static, Literal, HasDefault
    System.ParseFlags TimeZoneUtc = 512 : Public, Static, Literal, HasDefault
    System.ParseFlags ParsedMonthName = 1024 : Public, Static, Literal, HasDefault
    System.ParseFlags CaptureOffset = 2048 : Public, Static, Literal, HasDefault
    System.ParseFlags YearDefault = 4096 : Public, Static, Literal, HasDefault
    System.ParseFlags Rfc1123Pattern = 8192 : Public, Static, Literal, HasDefault
    System.ParseFlags UtcSortPattern = 16384 : Public, Static, Literal, HasDefault
Struct System.DateTimeResult: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Year : Assembly
    Int32 Month : Assembly
    Int32 Day : Assembly
    Int32 Hour : Assembly
    Int32 Minute : Assembly
    Int32 Second : Assembly
    Double fraction : Assembly
    Int32 era : Assembly
    System.ParseFlags flags : Assembly
    System.TimeSpan timeZoneOffset : Assembly
    System.Globalization.Calendar calendar : Assembly
    System.DateTime parsedDate : Assembly
    System.ParseFailureKind failure : Assembly
    System.String failureMessageID : Assembly
    System.Object failureMessageFormatArgument : Assembly
    System.String failureArgumentName : Assembly
  Methods:
    Init(): PrivateScope, Assembly, HideBySig
    SetDate(Int32, Int32, Int32): PrivateScope, Assembly, HideBySig
    SetFailure(ParseFailureKind, String, Object): PrivateScope, Assembly, HideBySig
    SetFailure(ParseFailureKind, String, Object, String): PrivateScope, Assembly, HideBySig
Struct System.ParsingInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Globalization.Calendar calendar : Assembly
    Int32 dayOfWeek : Assembly
    TM timeMark : Assembly
    Boolean fUseHour12 : Assembly
    Boolean fUseTwoDigitYear : Assembly
    Boolean fAllowInnerWhite : Assembly
    Boolean fAllowTrailingWhite : Assembly
    Boolean fCustomNumberParser : Assembly
    MatchNumberDelegate parseNumberDelegate : Assembly
  Methods:
    Init(): PrivateScope, Assembly, HideBySig
Struct System.TokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TokenType NumberToken = 1 : Public, Static, Literal, HasDefault
    System.TokenType YearNumberToken = 2 : Public, Static, Literal, HasDefault
    System.TokenType Am = 3 : Public, Static, Literal, HasDefault
    System.TokenType Pm = 4 : Public, Static, Literal, HasDefault
    System.TokenType MonthToken = 5 : Public, Static, Literal, HasDefault
    System.TokenType EndOfString = 6 : Public, Static, Literal, HasDefault
    System.TokenType DayOfWeekToken = 7 : Public, Static, Literal, HasDefault
    System.TokenType TimeZoneToken = 8 : Public, Static, Literal, HasDefault
    System.TokenType EraToken = 9 : Public, Static, Literal, HasDefault
    System.TokenType DateWordToken = 10 : Public, Static, Literal, HasDefault
    System.TokenType UnknownToken = 11 : Public, Static, Literal, HasDefault
    System.TokenType HebrewNumber = 12 : Public, Static, Literal, HasDefault
    System.TokenType JapaneseEraToken = 13 : Public, Static, Literal, HasDefault
    System.TokenType TEraToken = 14 : Public, Static, Literal, HasDefault
    System.TokenType IgnorableSymbol = 15 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Unk = 256 : Public, Static, Literal, HasDefault
    System.TokenType SEP_End = 512 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Space = 768 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Am = 1024 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Pm = 1280 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Date = 1536 : Public, Static, Literal, HasDefault
    System.TokenType SEP_Time = 1792 : Public, Static, Literal, HasDefault
    System.TokenType SEP_YearSuff = 2048 : Public, Static, Literal, HasDefault
    System.TokenType SEP_MonthSuff = 2304 : Public, Static, Literal, HasDefault
    System.TokenType SEP_DaySuff = 2560 : Public, Static, Literal, HasDefault
    System.TokenType SEP_HourSuff = 2816 : Public, Static, Literal, HasDefault
    System.TokenType SEP_MinuteSuff = 3072 : Public, Static, Literal, HasDefault
    System.TokenType SEP_SecondSuff = 3328 : Public, Static, Literal, HasDefault
    System.TokenType SEP_LocalTimeMark = 3584 : Public, Static, Literal, HasDefault
    System.TokenType SEP_DateOrOffset = 3840 : Public, Static, Literal, HasDefault
    System.TokenType RegularTokenMask = 255 : Public, Static, Literal, HasDefault
    System.TokenType SeparatorTokenMask = 65280 : Public, Static, Literal, HasDefault
Struct System.CompatibilityFlag: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.CompatibilityFlag SwallowUnhandledExceptions = 0 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag NullReferenceExceptionOnAV = 1 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag EagerlyGenerateRandomAsymmKeys = 2 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag FullTrustListAssembliesInGac = 3 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag DateTimeParseIgnorePunctuation = 4 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag OnlyGACDomainNeutral = 5 : Public, Static, Literal, HasDefault
    System.CompatibilityFlag DisableReplacementCustomCulture = 6 : Public, Static, Literal, HasDefault
Struct System.Configuration.Assemblies.AssemblyHash: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit (Obsolete)
  :System.ValueType
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Configuration.Assemblies.AssemblyHashAlgorithm, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Interfaces:
    System.ICloneable
  Fields:
    System.Configuration.Assemblies.AssemblyHash Empty : Public, Static, InitOnly (Obsolete)
  Properties:
    System.Configuration.Assemblies.AssemblyHashAlgorithm Algorithm 'get set' :  (Obsolete)
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_Algorithm(AssemblyHashAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    GetValue(): PrivateScope, Public, HideBySig (Obsolete)
    SetValue(Byte[]): PrivateScope, Public, HideBySig (Obsolete)
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
Struct System.Configuration.Assemblies.AssemblyHashAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Configuration.Assemblies.AssemblyHashAlgorithm None = 0 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyHashAlgorithm MD5 = 32771 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyHashAlgorithm SHA1 = 32772 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyHashAlgorithm SHA256 = 32780 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyHashAlgorithm SHA384 = 32781 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyHashAlgorithm SHA512 = 32782 : Public, Static, Literal, HasDefault
Struct System.Configuration.Assemblies.AssemblyVersionCompatibility: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Configuration.Assemblies.AssemblyVersionCompatibility SameMachine = 1 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyVersionCompatibility SameProcess = 2 : Public, Static, Literal, HasDefault
    System.Configuration.Assemblies.AssemblyVersionCompatibility SameDomain = 3 : Public, Static, Literal, HasDefault
Class System.IO.__ConsoleStream: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
Class System.IO.__Error: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 ERROR_FILE_NOT_FOUND = 2 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PATH_NOT_FOUND = 3 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ACCESS_DENIED = 5 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_PARAMETER = 87 : Assembly, Static, Literal, HasDefault
  Methods:
    GetDisplayablePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    WinIOError(Int32, String): PrivateScope, Assembly, Static, HideBySig
    EndOfFile(): PrivateScope, Assembly, Static, HideBySig
    FileNotOpen(): PrivateScope, Assembly, Static, HideBySig
    StreamIsClosed(): PrivateScope, Assembly, Static, HideBySig
    MemoryStreamNotExpandable(): PrivateScope, Assembly, Static, HideBySig
    ReaderClosed(): PrivateScope, Assembly, Static, HideBySig
    ReadNotSupported(): PrivateScope, Assembly, Static, HideBySig
    SeekNotSupported(): PrivateScope, Assembly, Static, HideBySig
    WrongAsyncResult(): PrivateScope, Assembly, Static, HideBySig
    EndReadCalledTwice(): PrivateScope, Assembly, Static, HideBySig
    EndWriteCalledTwice(): PrivateScope, Assembly, Static, HideBySig
    WinIOError(): PrivateScope, Assembly, Static, HideBySig
    WinIODriveError(String): PrivateScope, Assembly, Static, HideBySig
    WinIODriveError(String, Int32): PrivateScope, Assembly, Static, HideBySig
    WriteNotSupported(): PrivateScope, Assembly, Static, HideBySig
    WriterClosed(): PrivateScope, Assembly, Static, HideBySig
Class System.IO.__HResults: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 COR_E_ENDOFSTREAM = -2147024858 : Public, Static, Literal, HasDefault
    Int32 COR_E_FILELOAD = -2146232799 : Public, Static, Literal, HasDefault
    Int32 COR_E_FILENOTFOUND = -2147024894 : Public, Static, Literal, HasDefault
    Int32 COR_E_DIRECTORYNOTFOUND = -2147024893 : Public, Static, Literal, HasDefault
    Int32 COR_E_PATHTOOLONG = -2147024690 : Public, Static, Literal, HasDefault
    Int32 COR_E_IO = -2146232800 : Public, Static, Literal, HasDefault
Class System.IO.BinaryReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.IO.Stream BaseStream 'get ' : 
  Methods:
    get_BaseStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    PeekChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBoolean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadSByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadChar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadInt16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadUInt16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadUInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadInt64(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadUInt64(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadSingle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDouble(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadDecimal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadChars(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBytes(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.IO.BinaryWriter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.IO.BinaryWriter Null : Public, Static, InitOnly
  Properties:
    System.IO.Stream BaseStream 'get ' : 
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_BaseStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Seek(Int32, SeekOrigin): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(SByte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.IO.BufferedStream: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Stream UnderlyingStream 'get ' : 
    Int32 BufferSize 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_UnderlyingStream(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
Class System.IO.Directory: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetParent(String): PrivateScope, Public, Static, HideBySig
    CreateDirectory(String): PrivateScope, Public, Static, HideBySig
    UnsafeCreateDirectory(String): PrivateScope, Assembly, Static, HideBySig
    InternalCreateDirectoryHelper(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetFullPathAndCheckPermissions(String, Boolean, FileSecurityStateAccess(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    CheckPermissions(String, String, Boolean, FileSecurityStateAccess(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    CreateDirectory(String, DirectorySecurity): PrivateScope, Public, Static, HideBySig
    GetDemandDir(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    InternalCreateDirectory(String, String, Object): PrivateScope, Assembly, Static, HideBySig
    InternalCreateDirectory(String, String, Object, Boolean): PrivateScope, Assembly, Static, HideBySig
    Exists(String): PrivateScope, Public, Static, HideBySig
    UnsafeExists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExistsHelper(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    SetCreationTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetCreationTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetCreationTime(String): PrivateScope, Public, Static, HideBySig
    GetCreationTimeUtc(String): PrivateScope, Public, Static, HideBySig
    SetLastWriteTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetLastWriteTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetLastWriteTime(String): PrivateScope, Public, Static, HideBySig
    GetLastWriteTimeUtc(String): PrivateScope, Public, Static, HideBySig
    SetLastAccessTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetLastAccessTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetLastAccessTime(String): PrivateScope, Public, Static, HideBySig
    GetLastAccessTimeUtc(String): PrivateScope, Public, Static, HideBySig
    GetAccessControl(String): PrivateScope, Public, Static, HideBySig
    GetAccessControl(String, AccessControlSections): PrivateScope, Public, Static, HideBySig
    SetAccessControl(String, DirectorySecurity): PrivateScope, Public, Static, HideBySig
    GetFiles(String): PrivateScope, Public, Static, HideBySig
    GetFiles(String, String): PrivateScope, Public, Static, HideBySig
    GetFiles(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    UnsafeGetFiles(String, String, SearchOption): PrivateScope, Assembly, Static, HideBySig
    GetDirectories(String): PrivateScope, Public, Static, HideBySig
    GetDirectories(String, String): PrivateScope, Public, Static, HideBySig
    GetDirectories(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    UnsafeGetDirectories(String, String, SearchOption): PrivateScope, Assembly, Static, HideBySig
    GetFileSystemEntries(String): PrivateScope, Public, Static, HideBySig
    GetFileSystemEntries(String, String): PrivateScope, Public, Static, HideBySig
    GetFileSystemEntries(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    InternalGetFileDirectoryNames(String, String, String, Boolean, Boolean, SearchOption, Boolean): PrivateScope, Assembly, Static, HideBySig
    EnumerateDirectories(String): PrivateScope, Public, Static, HideBySig
    EnumerateDirectories(String, String): PrivateScope, Public, Static, HideBySig
    EnumerateDirectories(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    EnumerateFiles(String): PrivateScope, Public, Static, HideBySig
    EnumerateFiles(String, String): PrivateScope, Public, Static, HideBySig
    EnumerateFiles(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    EnumerateFileSystemEntries(String): PrivateScope, Public, Static, HideBySig
    EnumerateFileSystemEntries(String, String): PrivateScope, Public, Static, HideBySig
    EnumerateFileSystemEntries(String, String, SearchOption): PrivateScope, Public, Static, HideBySig
    GetLogicalDrives(): PrivateScope, Public, Static, HideBySig
    GetDirectoryRoot(String): PrivateScope, Public, Static, HideBySig
    InternalGetDirectoryRoot(String): PrivateScope, Assembly, Static, HideBySig
    GetCurrentDirectory(): PrivateScope, Public, Static, HideBySig
    UnsafeGetCurrentDirectory(): PrivateScope, Assembly, Static, HideBySig
    SetCurrentDirectory(String): PrivateScope, Public, Static, HideBySig
    Move(String, String): PrivateScope, Public, Static, HideBySig
    UnsafeMove(String, String): PrivateScope, Assembly, Static, HideBySig
    Delete(String): PrivateScope, Public, Static, HideBySig
    Delete(String, Boolean): PrivateScope, Public, Static, HideBySig
    UnsafeDelete(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Delete(String, String, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
Class System.IO.DirectoryInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.IO.FileSystemInfo
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String FullName 'get ' : 
    System.String UnsafeGetFullName 'get ' : 
    System.IO.DirectoryInfo Parent 'get ' : 
    Boolean Exists 'get ' : 
    System.IO.DirectoryInfo Root 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UnsafeGetFullName(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    CreateSubdirectory(String): PrivateScope, Public, HideBySig
    CreateSubdirectory(String, DirectorySecurity): PrivateScope, Public, HideBySig
    Create(): PrivateScope, Public, HideBySig
    Create(DirectorySecurity): PrivateScope, Public, HideBySig
    get_Exists(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetAccessControl(): PrivateScope, Public, HideBySig
    GetAccessControl(AccessControlSections): PrivateScope, Public, HideBySig
    SetAccessControl(DirectorySecurity): PrivateScope, Public, HideBySig
    GetFiles(String): PrivateScope, Public, HideBySig
    GetFiles(String, SearchOption): PrivateScope, Public, HideBySig
    GetFiles(): PrivateScope, Public, HideBySig
    GetDirectories(): PrivateScope, Public, HideBySig
    GetFileSystemInfos(String): PrivateScope, Public, HideBySig
    GetFileSystemInfos(String, SearchOption): PrivateScope, Public, HideBySig
    GetFileSystemInfos(): PrivateScope, Public, HideBySig
    GetDirectories(String): PrivateScope, Public, HideBySig
    GetDirectories(String, SearchOption): PrivateScope, Public, HideBySig
    EnumerateDirectories(): PrivateScope, Public, HideBySig
    EnumerateDirectories(String): PrivateScope, Public, HideBySig
    EnumerateDirectories(String, SearchOption): PrivateScope, Public, HideBySig
    EnumerateFiles(): PrivateScope, Public, HideBySig
    EnumerateFiles(String): PrivateScope, Public, HideBySig
    EnumerateFiles(String, SearchOption): PrivateScope, Public, HideBySig
    EnumerateFileSystemInfos(): PrivateScope, Public, HideBySig
    EnumerateFileSystemInfos(String): PrivateScope, Public, HideBySig
    EnumerateFileSystemInfos(String, SearchOption): PrivateScope, Public, HideBySig
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    MoveTo(String): PrivateScope, Public, HideBySig
    Delete(): PrivateScope, Public, Virtual, HideBySig
    Delete(Boolean): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.IO.SearchOption: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.SearchOption TopDirectoryOnly = 0 : Public, Static, Literal, HasDefault
    System.IO.SearchOption AllDirectories = 1 : Public, Static, Literal, HasDefault
Class System.IO.DirectoryNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.IO.DriveType: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.DriveType Unknown = 0 : Public, Static, Literal, HasDefault
    System.IO.DriveType NoRootDirectory = 1 : Public, Static, Literal, HasDefault
    System.IO.DriveType Removable = 2 : Public, Static, Literal, HasDefault
    System.IO.DriveType Fixed = 3 : Public, Static, Literal, HasDefault
    System.IO.DriveType Network = 4 : Public, Static, Literal, HasDefault
    System.IO.DriveType CDRom = 5 : Public, Static, Literal, HasDefault
    System.IO.DriveType Ram = 6 : Public, Static, Literal, HasDefault
Class System.IO.DriveInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    System.String Name 'get ' : 
    System.IO.DriveType DriveType 'get ' : 
    System.String DriveFormat 'get ' : 
    Boolean IsReady 'get ' : 
    Int64 AvailableFreeSpace 'get ' : 
    Int64 TotalFreeSpace 'get ' : 
    Int64 TotalSize 'get ' : 
    System.IO.DirectoryInfo RootDirectory 'get ' : 
    System.String VolumeLabel 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_DriveType(): PrivateScope, Public, HideBySig, SpecialName
    get_DriveFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReady(): PrivateScope, Public, HideBySig, SpecialName
    get_AvailableFreeSpace(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalFreeSpace(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalSize(): PrivateScope, Public, HideBySig, SpecialName
    GetDrives(): PrivateScope, Public, Static, HideBySig
    get_RootDirectory(): PrivateScope, Public, HideBySig, SpecialName
    get_VolumeLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_VolumeLabel(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.IO.DriveNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.IO.EndOfStreamException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.IO.File: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    OpenText(String): PrivateScope, Public, Static, HideBySig
    CreateText(String): PrivateScope, Public, Static, HideBySig
    AppendText(String): PrivateScope, Public, Static, HideBySig
    Copy(String, String): PrivateScope, Public, Static, HideBySig
    Copy(String, String, Boolean): PrivateScope, Public, Static, HideBySig
    UnsafeCopy(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    InternalCopy(String, String, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    Create(String, Int32): PrivateScope, Public, Static, HideBySig
    Create(String, Int32, FileOptions): PrivateScope, Public, Static, HideBySig
    Create(String, Int32, FileOptions, FileSecurity): PrivateScope, Public, Static, HideBySig
    Delete(String): PrivateScope, Public, Static, HideBySig
    UnsafeDelete(String): PrivateScope, Assembly, Static, HideBySig
    InternalDelete(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Decrypt(String): PrivateScope, Public, Static, HideBySig
    Encrypt(String): PrivateScope, Public, Static, HideBySig
    Exists(String): PrivateScope, Public, Static, HideBySig
    UnsafeExists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String): PrivateScope, Assembly, Static, HideBySig
    Open(String, FileMode): PrivateScope, Public, Static, HideBySig
    Open(String, FileMode, FileAccess): PrivateScope, Public, Static, HideBySig
    Open(String, FileMode, FileAccess, FileShare): PrivateScope, Public, Static, HideBySig
    SetCreationTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetCreationTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetCreationTime(String): PrivateScope, Public, Static, HideBySig
    GetCreationTimeUtc(String): PrivateScope, Public, Static, HideBySig
    SetLastAccessTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetLastAccessTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetLastAccessTime(String): PrivateScope, Public, Static, HideBySig
    GetLastAccessTimeUtc(String): PrivateScope, Public, Static, HideBySig
    SetLastWriteTime(String, DateTime): PrivateScope, Public, Static, HideBySig
    SetLastWriteTimeUtc(String, DateTime): PrivateScope, Public, Static, HideBySig
    GetLastWriteTime(String): PrivateScope, Public, Static, HideBySig
    GetLastWriteTimeUtc(String): PrivateScope, Public, Static, HideBySig
    GetAttributes(String): PrivateScope, Public, Static, HideBySig
    SetAttributes(String, FileAttributes): PrivateScope, Public, Static, HideBySig
    GetAccessControl(String): PrivateScope, Public, Static, HideBySig
    GetAccessControl(String, AccessControlSections): PrivateScope, Public, Static, HideBySig
    SetAccessControl(String, FileSecurity): PrivateScope, Public, Static, HideBySig
    OpenRead(String): PrivateScope, Public, Static, HideBySig
    OpenWrite(String): PrivateScope, Public, Static, HideBySig
    ReadAllText(String): PrivateScope, Public, Static, HideBySig
    ReadAllText(String, Encoding): PrivateScope, Public, Static, HideBySig
    UnsafeReadAllText(String): PrivateScope, Assembly, Static, HideBySig
    WriteAllText(String, String): PrivateScope, Public, Static, HideBySig
    WriteAllText(String, String, Encoding): PrivateScope, Public, Static, HideBySig
    UnsafeWriteAllText(String, String): PrivateScope, Assembly, Static, HideBySig
    ReadAllBytes(String): PrivateScope, Public, Static, HideBySig
    UnsafeReadAllBytes(String): PrivateScope, Assembly, Static, HideBySig
    WriteAllBytes(String, Byte[]): PrivateScope, Public, Static, HideBySig
    UnsafeWriteAllBytes(String, Byte[]): PrivateScope, Assembly, Static, HideBySig
    ReadAllLines(String): PrivateScope, Public, Static, HideBySig
    ReadAllLines(String, Encoding): PrivateScope, Public, Static, HideBySig
    ReadLines(String): PrivateScope, Public, Static, HideBySig
    ReadLines(String, Encoding): PrivateScope, Public, Static, HideBySig
    WriteAllLines(String, String[]): PrivateScope, Public, Static, HideBySig
    WriteAllLines(String, String[], Encoding): PrivateScope, Public, Static, HideBySig
    WriteAllLines(String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    WriteAllLines(String, IEnumerable`1, Encoding): PrivateScope, Public, Static, HideBySig
    AppendAllText(String, String): PrivateScope, Public, Static, HideBySig
    AppendAllText(String, String, Encoding): PrivateScope, Public, Static, HideBySig
    AppendAllLines(String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AppendAllLines(String, IEnumerable`1, Encoding): PrivateScope, Public, Static, HideBySig
    Move(String, String): PrivateScope, Public, Static, HideBySig
    UnsafeMove(String, String): PrivateScope, Assembly, Static, HideBySig
    Replace(String, String, String): PrivateScope, Public, Static, HideBySig
    Replace(String, String, String, Boolean): PrivateScope, Public, Static, HideBySig
    FillAttributeInfo(String, WIN32_FILE_ATTRIBUTE_DATA&, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
Struct System.IO.FileAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileAccess Read = 1 : Public, Static, Literal, HasDefault
    System.IO.FileAccess Write = 2 : Public, Static, Literal, HasDefault
    System.IO.FileAccess ReadWrite = 3 : Public, Static, Literal, HasDefault
Class System.IO.FileInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.IO.FileSystemInfo
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Int64 Length 'get ' : 
    System.String DirectoryName 'get ' : 
    System.IO.DirectoryInfo Directory 'get ' : 
    Boolean IsReadOnly 'get set' : 
    Boolean Exists 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_DirectoryName(): PrivateScope, Public, HideBySig, SpecialName
    get_Directory(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReadOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetAccessControl(): PrivateScope, Public, HideBySig
    GetAccessControl(AccessControlSections): PrivateScope, Public, HideBySig
    SetAccessControl(FileSecurity): PrivateScope, Public, HideBySig
    OpenText(): PrivateScope, Public, HideBySig
    CreateText(): PrivateScope, Public, HideBySig
    AppendText(): PrivateScope, Public, HideBySig
    CopyTo(String): PrivateScope, Public, HideBySig
    CopyTo(String, Boolean): PrivateScope, Public, HideBySig
    Create(): PrivateScope, Public, HideBySig
    Delete(): PrivateScope, Public, Virtual, HideBySig
    Decrypt(): PrivateScope, Public, HideBySig
    Encrypt(): PrivateScope, Public, HideBySig
    get_Exists(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Open(FileMode): PrivateScope, Public, HideBySig
    Open(FileMode, FileAccess): PrivateScope, Public, HideBySig
    Open(FileMode, FileAccess, FileShare): PrivateScope, Public, HideBySig
    OpenRead(): PrivateScope, Public, HideBySig
    OpenWrite(): PrivateScope, Public, HideBySig
    MoveTo(String): PrivateScope, Public, HideBySig
    Replace(String, String): PrivateScope, Public, HideBySig
    Replace(String, String, Boolean): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.IO.FileLoadException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.String FileName 'get ' : 
    System.String FusionLog 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_FusionLog(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    FormatFileLoadExceptionMessage(String, Int32): PrivateScope, Assembly, Static, HideBySig
Struct System.IO.FileMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileMode CreateNew = 1 : Public, Static, Literal, HasDefault
    System.IO.FileMode Create = 2 : Public, Static, Literal, HasDefault
    System.IO.FileMode Open = 3 : Public, Static, Literal, HasDefault
    System.IO.FileMode OpenOrCreate = 4 : Public, Static, Literal, HasDefault
    System.IO.FileMode Truncate = 5 : Public, Static, Literal, HasDefault
    System.IO.FileMode Append = 6 : Public, Static, Literal, HasDefault
Class System.IO.FileNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
    System.String FileName 'get ' : 
    System.String FusionLog 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_FusionLog(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Struct System.IO.FileOptions: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileOptions None = 0 : Public, Static, Literal, HasDefault
    System.IO.FileOptions WriteThrough = -2147483648 : Public, Static, Literal, HasDefault
    System.IO.FileOptions Asynchronous = 1073741824 : Public, Static, Literal, HasDefault
    System.IO.FileOptions RandomAccess = 268435456 : Public, Static, Literal, HasDefault
    System.IO.FileOptions DeleteOnClose = 67108864 : Public, Static, Literal, HasDefault
    System.IO.FileOptions SequentialScan = 134217728 : Public, Static, Literal, HasDefault
    System.IO.FileOptions Encrypted = 16384 : Public, Static, Literal, HasDefault
Struct System.IO.FileSecurityStateAccess: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileSecurityStateAccess NoAccess = 0 : Public, Static, Literal, HasDefault
    System.IO.FileSecurityStateAccess Read = 1 : Public, Static, Literal, HasDefault
    System.IO.FileSecurityStateAccess Write = 2 : Public, Static, Literal, HasDefault
    System.IO.FileSecurityStateAccess Append = 4 : Public, Static, Literal, HasDefault
    System.IO.FileSecurityStateAccess PathDiscovery = 8 : Public, Static, Literal, HasDefault
    System.IO.FileSecurityStateAccess AllAccess = 15 : Public, Static, Literal, HasDefault
Struct System.IO.FileShare: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileShare None = 0 : Public, Static, Literal, HasDefault
    System.IO.FileShare Read = 1 : Public, Static, Literal, HasDefault
    System.IO.FileShare Write = 2 : Public, Static, Literal, HasDefault
    System.IO.FileShare ReadWrite = 3 : Public, Static, Literal, HasDefault
    System.IO.FileShare Delete = 4 : Public, Static, Literal, HasDefault
    System.IO.FileShare Inheritable = 16 : Public, Static, Literal, HasDefault
Class System.IO.FileStreamAsyncResult: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, Byte[], Microsoft.Win32.SafeHandles.SafeFileHandle, System.AsyncCallback, System.Object, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IAsyncResult
  Fields:
    Int32 _EndXxxCalled : Assembly
  Properties:
    System.Threading.NativeOverlapped* OverLapped 'get ' : 
    Boolean IsAsync 'get ' : 
    Int32 NumBytes 'get ' : 
    Int32 ErrorCode 'get ' : 
    Int32 NumBufferedBytes 'get ' : 
    Int32 NumBytesRead 'get ' : 
    Boolean IsWrite 'get ' : 
    System.Object AsyncState 'get ' : 
    Boolean IsCompleted 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
  Methods:
    get_OverLapped(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsAsync(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NumBytes(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NumBufferedBytes(): PrivateScope, Assembly, HideBySig, SpecialName
    get_NumBytesRead(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsWrite(): PrivateScope, Assembly, HideBySig, SpecialName
    CreateBufferedReadResult(Int32, AsyncCallback, Object, Boolean): PrivateScope, Assembly, Static, HideBySig
    get_AsyncState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompleted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CallUserCallback(): PrivateScope, Assembly, HideBySig
    ReleaseNativeResource(): PrivateScope, Assembly, HideBySig
    Wait(): PrivateScope, Assembly, HideBySig
    Cancel(): PrivateScope, Assembly, HideBySig, HasSecurity
Class System.IO.FileStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, System.IO.FileOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.Security.AccessControl.FileSystemRights, System.IO.FileShare, Int32, System.IO.FileOptions, System.Security.AccessControl.FileSecurity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.Security.AccessControl.FileSystemRights, System.IO.FileShare, Int32, System.IO.FileOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, System.IO.FileOptions, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, System.IO.FileOptions, System.String, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, System.IO.FileOptions, System.String, Boolean, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(IntPtr, System.IO.FileAccess, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(IntPtr, System.IO.FileAccess, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(IntPtr, System.IO.FileAccess, Boolean, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity (Obsolete)
    Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle, System.IO.FileAccess, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Fields:
    Int32 DefaultBufferSize = 4096 : Assembly, Static, Literal, HasDefault
    Int32 GENERIC_READ = -2147483648 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BROKEN_PIPE = 109 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_DATA = 232 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean IsAsync 'get ' : 
    Int64 Length 'get ' : 
    System.String Name 'get ' : 
    System.String NameInternal 'get ' : 
    Int64 Position 'get set' : 
    IntPtr Handle 'get ' :  (Obsolete)
    Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_NameInternal(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetAccessControl(): PrivateScope, Public, HideBySig
    SetAccessControl(FileSecurity): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Flush(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Handle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName, HasSecurity
    get_SafeFileHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName, HasSecurity
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Lock(Int64, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unlock(Int64, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.IO.FileSystemEnumerableFactory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateFileNameIterator(String, String, String, Boolean, Boolean, SearchOption, Boolean): PrivateScope, Assembly, Static, HideBySig
    CreateFileInfoIterator(String, String, String, SearchOption): PrivateScope, Assembly, Static, HideBySig
    CreateDirectoryInfoIterator(String, String, String, SearchOption): PrivateScope, Assembly, Static, HideBySig
    CreateFileSystemInfoIterator(String, String, String, SearchOption): PrivateScope, Assembly, Static, HideBySig
Class System.IO.Iterator`1[TSource]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TSource
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TSource]
    System.Collections.IEnumerable
    System.Collections.Generic.IEnumerator`1[TSource]
    System.IDisposable
    System.Collections.IEnumerator
  Fields:
    Int32 state : Assembly
    TSource current : Assembly
  Properties:
    TSource Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.IO.FileSystemEnumerableIterator`1[TSource]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TSource
  :System.IO.Iterator`1[TSource]
    Void .ctor(System.String, System.String, System.String, System.IO.SearchOption, System.IO.SearchResultHandler`1[TSource], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    DoDemand(String): PrivateScope, Assembly, HideBySig
Class System.IO.SearchResultHandler`1[TSource]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TSource
  Methods:
    IsResultIncluded(WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateObject(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Class System.IO.StringResultHandler: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.SearchResultHandler`1[System.String]
    Void .ctor(Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsResultIncluded(WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateObject(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.IO.FileInfoResultHandler: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.SearchResultHandler`1[System.IO.FileInfo]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateFileInfo(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Static, HideBySig
    IsResultIncluded(WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateObject(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.IO.DirectoryInfoResultHandler: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.SearchResultHandler`1[System.IO.DirectoryInfo]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateObject(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateDirectoryInfo(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Static, HideBySig
    IsResultIncluded(WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.IO.FileSystemInfoResultHandler: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.SearchResultHandler`1[System.IO.FileSystemInfo]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsResultIncluded(WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateObject(SearchData, WIN32_FIND_DATA&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.IO.FileSystemInfo: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Fields:
    WIN32_FILE_ATTRIBUTE_DATA _data : Assembly
    Int32 _dataInitialised : Assembly
    Int32 ERROR_ACCESS_DENIED = 5 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String FullName 'get ' : 
    System.String UnsafeGetFullName 'get ' : 
    System.String Extension 'get ' : 
    System.String Name 'get ' : 
    Boolean Exists 'get ' : 
    System.DateTime CreationTime 'get set' : 
    System.DateTime CreationTimeUtc 'get set' : 
    System.DateTime LastAccessTime 'get set' : 
    System.DateTime LastAccessTimeUtc 'get set' : 
    System.DateTime LastWriteTime 'get set' : 
    System.DateTime LastWriteTimeUtc 'get set' : 
    System.IO.FileAttributes Attributes 'get set' : 
    System.String DisplayPath 'get set' : 
  Methods:
    InitializeFrom(WIN32_FIND_DATA&): PrivateScope, Assembly, HideBySig
    get_FullName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UnsafeGetFullName(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_Extension(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Exists(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Delete(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    set_CreationTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_CreationTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    set_CreationTimeUtc(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_LastAccessTime(): PrivateScope, Public, HideBySig, SpecialName
    set_LastAccessTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_LastAccessTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    set_LastAccessTimeUtc(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_LastWriteTime(): PrivateScope, Public, HideBySig, SpecialName
    set_LastWriteTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_LastWriteTimeUtc(): PrivateScope, Public, HideBySig, SpecialName
    set_LastWriteTimeUtc(DateTime): PrivateScope, Public, HideBySig, SpecialName
    Refresh(): PrivateScope, Public, HideBySig
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(FileAttributes): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DisplayPath(): PrivateScope, Assembly, HideBySig, SpecialName
    set_DisplayPath(String): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.IO.FileAttributes: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.FileAttributes ReadOnly = 1 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Hidden = 2 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes System = 4 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Directory = 16 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Archive = 32 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Device = 64 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Normal = 128 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Temporary = 256 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes SparseFile = 512 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes ReparsePoint = 1024 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Compressed = 2048 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Offline = 4096 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes NotContentIndexed = 8192 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes Encrypted = 16384 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes IntegrityStream = 32768 : Public, Static, Literal, HasDefault
    System.IO.FileAttributes NoScrubData = 131072 : Public, Static, Literal, HasDefault
Class System.IO.IOException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.IO.LongPathHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Char[] s_trimEndChars : Assembly, Static, InitOnly
  Methods:
    Normalize(String, UInt32, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetLongPathName(StringBuffer): PrivateScope, Assembly, Static, HideBySig
    GetLongPathName(String): PrivateScope, Assembly, Static, HideBySig
Class System.IO.MemoryStream: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 Capacity 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    GetBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryGetBuffer(ArraySegment`1&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InternalGetBuffer(): PrivateScope, Assembly, HideBySig
    InternalGetOriginAndLength(Int32&(Out), Int32&(Out)): PrivateScope, Assembly, HideBySig
    InternalGetPosition(): PrivateScope, Assembly, HideBySig
    InternalReadInt32(): PrivateScope, Assembly, HideBySig
    InternalEmulateRead(Int32): PrivateScope, Assembly, HideBySig
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    CopyToAsync(Stream, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteTo(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.IO.Path: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Char DirectorySeparatorChar : Public, Static, InitOnly
    Char AltDirectorySeparatorChar : Public, Static, InitOnly
    Char VolumeSeparatorChar : Public, Static, InitOnly
    Char[] InvalidPathChars : Public, Static, InitOnly (Obsolete)
    Char[] TrimEndChars : Assembly, Static, InitOnly
    Char PathSeparator : Public, Static, InitOnly
    Int32 MaxPath : Assembly, Static, InitOnly
    System.String DirectorySeparatorCharAsString = \ : Assembly, Static, Literal, HasDefault
    Int32 MAX_PATH = 260 : Assembly, Static, Literal, HasDefault
    Int32 MAX_DIRECTORY_PATH = 248 : Assembly, Static, Literal, HasDefault
    Int32 MaxLongPath = 32767 : Assembly, Static, Literal, HasDefault
  Methods:
    ChangeExtension(String, String): PrivateScope, Public, Static, HideBySig
    GetDirectoryName(String): PrivateScope, Public, Static, HideBySig
    GetRootLength(String): PrivateScope, Assembly, Static, HideBySig
    IsDirectorySeparator(Char): PrivateScope, Assembly, Static, HideBySig
    GetInvalidPathChars(): PrivateScope, Public, Static, HideBySig
    GetInvalidFileNameChars(): PrivateScope, Public, Static, HideBySig
    GetExtension(String): PrivateScope, Public, Static, HideBySig
    GetFullPath(String): PrivateScope, Public, Static, HideBySig
    UnsafeGetFullPath(String): PrivateScope, Assembly, Static, HideBySig
    GetFullPathInternal(String): PrivateScope, Assembly, Static, HideBySig
    NormalizePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    NormalizePath(String, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    NormalizePath(String, Boolean, Int32): PrivateScope, Assembly, Static, HideBySig
    NormalizePath(String, Boolean, Int32, Boolean): PrivateScope, Assembly, Static, HideBySig
    LegacyNormalizePath(String, Boolean, Int32, Boolean): PrivateScope, Assembly, Static, HideBySig
    HasLongPathPrefix(String): PrivateScope, Assembly, Static, HideBySig
    AddLongPathPrefix(String): PrivateScope, Assembly, Static, HideBySig
    RemoveLongPathPrefix(String): PrivateScope, Assembly, Static, HideBySig
    RemoveLongPathPrefix(StringBuilder): PrivateScope, Assembly, Static, HideBySig
    GetFileName(String): PrivateScope, Public, Static, HideBySig
    GetFileNameWithoutExtension(String): PrivateScope, Public, Static, HideBySig
    GetPathRoot(String): PrivateScope, Public, Static, HideBySig
    GetTempPath(): PrivateScope, Public, Static, HideBySig
    IsRelative(String): PrivateScope, Assembly, Static, HideBySig
    GetRandomFileName(): PrivateScope, Public, Static, HideBySig
    GetTempFileName(): PrivateScope, Public, Static, HideBySig
    UnsafeGetTempFileName(): PrivateScope, Assembly, Static, HideBySig
    HasExtension(String): PrivateScope, Public, Static, HideBySig
    IsPathRooted(String): PrivateScope, Public, Static, HideBySig
    Combine(String, String): PrivateScope, Public, Static, HideBySig
    Combine(String, String, String): PrivateScope, Public, Static, HideBySig
    Combine(String, String, String, String): PrivateScope, Public, Static, HideBySig
    Combine(String[]): PrivateScope, Public, Static, HideBySig
    CombineNoChecks(String, String): PrivateScope, Assembly, Static, HideBySig
    ToBase32StringSuitableForDirName(Byte[]): PrivateScope, Assembly, Static, HideBySig
    CheckSearchPattern(String): PrivateScope, Assembly, Static, HideBySig
    CheckInvalidPathChars(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    InternalCombine(String, String): PrivateScope, Assembly, Static, HideBySig
Struct System.IO.PathHelper: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Char*, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get set' : 
    Int32 Capacity 'get ' : 
    Char Item [Int32] 'get set' : 
  Methods:
    GetFullPathName(): PrivateScope, Assembly, HideBySig
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_Capacity(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    set_Item(Int32, Char): PrivateScope, Assembly, HideBySig, SpecialName
    Append(Char): PrivateScope, Assembly, HideBySig
    TryExpandShortFileName(): PrivateScope, Assembly, HideBySig
    Fixup(Int32, Int32): PrivateScope, Assembly, HideBySig
    OrdinalStartsWith(String, Boolean): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.IO.PathInternal: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MaxComponentLength : Assembly, Static, InitOnly
    Char[] InvalidPathChars : Assembly, Static, InitOnly
    System.String ExtendedPathPrefix = \\?\ : Assembly, Static, Literal, HasDefault
    System.String UncPathPrefix = \\ : Assembly, Static, Literal, HasDefault
    System.String UncExtendedPrefixToInsert = ?\UNC\ : Assembly, Static, Literal, HasDefault
    System.String UncExtendedPathPrefix = \\?\UNC\ : Assembly, Static, Literal, HasDefault
    System.String DevicePathPrefix = \\.\ : Assembly, Static, Literal, HasDefault
    Int32 DevicePrefixLength = 4 : Assembly, Static, Literal, HasDefault
    Int32 MaxShortPath = 260 : Assembly, Static, Literal, HasDefault
    Int32 MaxShortDirectoryPath = 248 : Assembly, Static, Literal, HasDefault
    Int32 MaxLongPath = 32767 : Assembly, Static, Literal, HasDefault
  Methods:
    HasInvalidVolumeSeparator(String): PrivateScope, Assembly, Static, HideBySig
    HasWildCardCharacters(String): PrivateScope, Assembly, Static, HideBySig
    StartsWithOrdinal(StringBuilder, String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    IsValidDriveChar(Char): PrivateScope, Assembly, Static, HideBySig
    IsPathTooLong(String): PrivateScope, Assembly, Static, HideBySig
    AreSegmentsTooLong(String): PrivateScope, Assembly, Static, HideBySig
    IsDirectoryTooLong(String): PrivateScope, Assembly, Static, HideBySig
    EnsureExtendedPrefix(String): PrivateScope, Assembly, Static, HideBySig
    RemoveExtendedPrefix(String): PrivateScope, Assembly, Static, HideBySig
    RemoveExtendedPrefix(StringBuilder): PrivateScope, Assembly, Static, HideBySig
    IsDevice(String): PrivateScope, Assembly, Static, HideBySig
    IsDevice(StringBuffer): PrivateScope, Assembly, Static, HideBySig
    IsExtended(String): PrivateScope, Assembly, Static, HideBySig
    IsExtended(StringBuilder): PrivateScope, Assembly, Static, HideBySig
    IsExtended(StringBuffer): PrivateScope, Assembly, Static, HideBySig
    IsExtendedUnc(String): PrivateScope, Assembly, Static, HideBySig
    IsExtendedUnc(StringBuilder): PrivateScope, Assembly, Static, HideBySig
    HasIllegalCharacters(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    AnyPathHasIllegalCharacters(String, Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    AnyPathHasWildCardCharacters(String, Int32(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    GetRootLength(String): PrivateScope, Assembly, Static, HideBySig
    GetRootLength(StringBuffer): PrivateScope, Assembly, Static, HideBySig
    IsPartiallyQualified(String): PrivateScope, Assembly, Static, HideBySig
    IsPartiallyQualified(StringBuffer): PrivateScope, Assembly, Static, HideBySig
    PathStartSkip(String): PrivateScope, Assembly, Static, HideBySig
    IsDirectorySeparator(Char): PrivateScope, Assembly, Static, HideBySig
    NormalizeDirectorySeparators(String): PrivateScope, Assembly, Static, HideBySig
Class System.IO.PathTooLongException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.IOException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.IO.PinnedBufferMemoryStream: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.IO.UnmanagedMemoryStream
    Void .ctor(Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.IO.ReadLinesIterator: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Iterator`1[System.String]
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    CreateIterator(String, Encoding): PrivateScope, Assembly, Static, HideBySig
Struct System.IO.SeekOrigin: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.SeekOrigin Begin = 0 : Public, Static, Literal, HasDefault
    System.IO.SeekOrigin Current = 1 : Public, Static, Literal, HasDefault
    System.IO.SeekOrigin End = 2 : Public, Static, Literal, HasDefault
Class System.IO.Stream: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.IDisposable
  Fields:
    System.IO.Stream Null : Public, Static, InitOnly
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanTimeout 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Int32 ReadTimeout 'get set' : 
    Int32 WriteTimeout 'get set' : 
  Methods:
    EnsureAsyncActiveSemaphoreInitialized(): PrivateScope, Assembly, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanTimeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReadTimeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReadTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_WriteTimeout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WriteTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyToAsync(Stream): PrivateScope, Public, HideBySig, HasSecurity
    CopyToAsync(Stream, Int32): PrivateScope, Public, HideBySig, HasSecurity
    CopyToAsync(Stream, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    CopyTo(Stream): PrivateScope, Public, HideBySig
    CopyTo(Stream, Int32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FlushAsync(): PrivateScope, Public, HideBySig, HasSecurity
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    BeginReadInternal(Byte[], Int32, Int32, AsyncCallback, Object, Boolean): PrivateScope, Assembly, HideBySig, HasSecurity
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadAsync(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, HasSecurity
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    BeginWriteInternal(Byte[], Int32, Int32, AsyncCallback, Object, Boolean): PrivateScope, Assembly, HideBySig, HasSecurity
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteAsync(Byte[], Int32, Int32): PrivateScope, Public, HideBySig, HasSecurity
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Synchronized(Stream): PrivateScope, Public, Static, HideBySig, HasSecurity
    BlockingBeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Assembly, HideBySig
    BlockingEndRead(IAsyncResult): PrivateScope, Assembly, Static, HideBySig
    BlockingBeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Assembly, HideBySig
    BlockingEndWrite(IAsyncResult): PrivateScope, Assembly, Static, HideBySig
Class System.IO.StreamReader: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.TextReader
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Boolean, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Text.Encoding, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Text.Encoding, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Text.Encoding, Boolean, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.StreamReader Null : Public, Static, InitOnly
  Properties:
    Int32 DefaultBufferSize 'get ' : 
    System.Text.Encoding CurrentEncoding 'get ' : 
    System.IO.Stream BaseStream 'get ' : 
    Boolean LeaveOpen 'get ' : 
    Boolean EndOfStream 'get ' : 
  Methods:
    get_DefaultBufferSize(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Init(Stream): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    get_CurrentEncoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BaseStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LeaveOpen(): PrivateScope, Assembly, HideBySig, SpecialName
    DiscardBufferedData(): PrivateScope, Public, HideBySig
    get_EndOfStream(): PrivateScope, Public, HideBySig, SpecialName
    Peek(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    Read(Char[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadToEnd(): PrivateScope, Public, Virtual, HideBySig
    ReadBlock(Char[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadBuffer(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReadLine(): PrivateScope, Public, Virtual, HideBySig
    ReadLineAsync(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadToEndAsync(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadAsyncInternal(Char[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReadBlockAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.IO.StreamWriter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.TextWriter
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Text.Encoding, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, System.Text.Encoding): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, System.Text.Encoding, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, System.Text.Encoding, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.StreamWriter Null : Public, Static, InitOnly
    Int32 DefaultBufferSize = 1024 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Text.Encoding UTF8NoBOM 'get ' : 
    Boolean AutoFlush 'get set' : 
    System.IO.Stream BaseStream 'get ' : 
    Boolean LeaveOpen 'get ' : 
    Boolean HaveWrittenPreamble 'set' : 
    System.Text.Encoding Encoding 'get ' : 
  Methods:
    get_UTF8NoBOM(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_AutoFlush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AutoFlush(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BaseStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LeaveOpen(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HaveWrittenPreamble(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Char): PrivateScope, Public, Virtual, HideBySig
    Write(Char[]): PrivateScope, Public, Virtual, HideBySig
    Write(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Char): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteAsync(String): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(Char): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(String): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    FlushAsync(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.IO.StringReader: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.TextReader
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    Peek(): PrivateScope, Public, Virtual, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    Read(Char[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadToEnd(): PrivateScope, Public, Virtual, HideBySig
    ReadLine(): PrivateScope, Public, Virtual, HideBySig
    ReadLineAsync(): PrivateScope, Public, Virtual, HideBySig
    ReadToEndAsync(): PrivateScope, Public, Virtual, HideBySig
    ReadBlockAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class System.IO.StringWriter: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.IO.TextWriter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IFormatProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Text.StringBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Text.StringBuilder, System.IFormatProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Text.Encoding Encoding 'get ' : 
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetStringBuilder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char): PrivateScope, Public, Virtual, HideBySig
    Write(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Char): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteAsync(String): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(Char): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(String): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteLineAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    FlushAsync(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.IO.TextReader: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.IDisposable
  Fields:
    System.IO.TextReader Null : Public, Static, InitOnly
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Peek(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(Char[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadToEnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadBlock(Char[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadLineAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    ReadToEndAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    ReadAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    ReadAsyncInternal(Char[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ReadBlockAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Synchronized(TextReader): PrivateScope, Public, Static, HideBySig, HasSecurity
Class System.IO.TextWriter: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.IDisposable
  Fields:
    System.IO.TextWriter Null : Public, Static, InitOnly
  Properties:
    System.IFormatProvider FormatProvider 'get ' : 
    System.Text.Encoding Encoding 'get ' : 
    System.String NewLine 'get set' : 
  Methods:
    get_FormatProvider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Encoding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NewLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NewLine(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Synchronized(TextWriter): PrivateScope, Public, Static, HideBySig, HasSecurity
    Write(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Char[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Decimal): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(String, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(String, Object, Object, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteLine(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteAsync(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteAsync(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteAsync(Char[]): PrivateScope, Public, HideBySig, HasSecurity
    WriteAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteLineAsync(Char): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteLineAsync(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteLineAsync(Char[]): PrivateScope, Public, HideBySig, HasSecurity
    WriteLineAsync(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    WriteLineAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    FlushAsync(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class System.IO.UnmanagedMemoryAccessor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Runtime.InteropServices.SafeBuffer, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.InteropServices.SafeBuffer, Int64, Int64, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int64 Capacity 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
  Methods:
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadBoolean(Int64): PrivateScope, Public, HideBySig
    ReadByte(Int64): PrivateScope, Public, HideBySig
    ReadChar(Int64): PrivateScope, Public, HideBySig
    ReadInt16(Int64): PrivateScope, Public, HideBySig
    ReadInt32(Int64): PrivateScope, Public, HideBySig
    ReadInt64(Int64): PrivateScope, Public, HideBySig
    ReadDecimal(Int64): PrivateScope, Public, HideBySig
    ReadSingle(Int64): PrivateScope, Public, HideBySig
    ReadDouble(Int64): PrivateScope, Public, HideBySig
    ReadSByte(Int64): PrivateScope, Public, HideBySig
    ReadUInt16(Int64): PrivateScope, Public, HideBySig
    ReadUInt32(Int64): PrivateScope, Public, HideBySig
    ReadUInt64(Int64): PrivateScope, Public, HideBySig
    Read(Int64, T&(Out)): PrivateScope, Public, HideBySig
    ReadArray(Int64, T[], Int32, Int32): PrivateScope, Public, HideBySig
    Write(Int64, Boolean): PrivateScope, Public, HideBySig
    Write(Int64, Byte): PrivateScope, Public, HideBySig
    Write(Int64, Char): PrivateScope, Public, HideBySig
    Write(Int64, Int16): PrivateScope, Public, HideBySig
    Write(Int64, Int32): PrivateScope, Public, HideBySig
    Write(Int64, Int64): PrivateScope, Public, HideBySig
    Write(Int64, Decimal): PrivateScope, Public, HideBySig
    Write(Int64, Single): PrivateScope, Public, HideBySig
    Write(Int64, Double): PrivateScope, Public, HideBySig
    Write(Int64, SByte): PrivateScope, Public, HideBySig
    Write(Int64, UInt16): PrivateScope, Public, HideBySig
    Write(Int64, UInt32): PrivateScope, Public, HideBySig
    Write(Int64, UInt64): PrivateScope, Public, HideBySig
    Write(Int64, T&): PrivateScope, Public, HideBySig
    WriteArray(Int64, T[], Int32, Int32): PrivateScope, Public, HideBySig
Class System.IO.UnmanagedMemoryStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.Runtime.InteropServices.SafeBuffer, Int64, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.InteropServices.SafeBuffer, Int64, Int64, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.InteropServices.SafeBuffer, Int64, Int64, System.IO.FileAccess, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte*, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte*, Int64, Int64, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte*, Int64, Int64, System.IO.FileAccess, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean _isOpen : Assembly
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Capacity 'get ' : 
    Int64 Position 'get set' : 
    Byte* PositionPointer 'get set' : 
    Byte* Pointer 'get ' : 
  Methods:
    Initialize(SafeBuffer, Int64, Int64, FileAccess, Boolean): PrivateScope, Assembly, HideBySig
    Initialize(Byte*, Int64, Int64, FileAccess, Boolean): PrivateScope, Assembly, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Capacity(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PositionPointer(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionPointer(Byte*): PrivateScope, Public, HideBySig, SpecialName
    get_Pointer(): PrivateScope, Assembly, HideBySig, SpecialName
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
Class System.IO.UnmanagedMemoryStreamWrapper: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.IO.MemoryStream
    Void .ctor(System.IO.UnmanagedMemoryStream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 Capacity 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    GetBuffer(): PrivateScope, Public, Virtual, HideBySig
    TryGetBuffer(ArraySegment`1&(Out)): PrivateScope, Public, Virtual, HideBySig
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    ToArray(): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    WriteTo(Stream): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    CopyToAsync(Stream, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
Class System.IO.LongPath: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    NormalizePath(String): PrivateScope, Assembly, Static, HideBySig
    NormalizePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    InternalCombine(String, String): PrivateScope, Assembly, Static, HideBySig
    GetRootLength(String): PrivateScope, Assembly, Static, HideBySig
    IsPathRooted(String): PrivateScope, Assembly, Static, HideBySig
    GetPathRoot(String): PrivateScope, Assembly, Static, HideBySig
    GetDirectoryName(String): PrivateScope, Assembly, Static, HideBySig
    TryRemoveLongPathPrefix(String, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
Class System.IO.LongPathFile: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Copy(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Delete(String): PrivateScope, Assembly, Static, HideBySig
    Exists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String): PrivateScope, Assembly, Static, HideBySig
    GetCreationTime(String): PrivateScope, Assembly, Static, HideBySig
    GetLastAccessTime(String): PrivateScope, Assembly, Static, HideBySig
    GetLastWriteTime(String): PrivateScope, Assembly, Static, HideBySig
    Move(String, String): PrivateScope, Assembly, Static, HideBySig
    GetLength(String): PrivateScope, Assembly, Static, HideBySig
Class System.IO.LongPathDirectory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateDirectory(String): PrivateScope, Assembly, Static, HideBySig
    Move(String, String): PrivateScope, Assembly, Static, HideBySig
    Delete(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Exists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String): PrivateScope, Assembly, Static, HideBySig
    InternalExists(String, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
Struct System.IO.IsolatedStorage.IsolatedStorageScope: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.IsolatedStorage.IsolatedStorageScope None = 0 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope User = 1 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope Domain = 2 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope Assembly = 4 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope Roaming = 8 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope Machine = 16 : Public, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope Application = 32 : Public, Static, Literal, HasDefault
Class System.IO.IsolatedStorage.IsolatedStorage: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.MarshalByRefObject
  Fields:
    System.IO.IsolatedStorage.IsolatedStorageScope c_Assembly = 5 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_Domain = 7 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_AssemblyRoaming = 13 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_DomainRoaming = 15 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_MachineAssembly = 20 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_MachineDomain = 22 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_AppUser = 33 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_AppMachine = 48 : Assembly, Static, Literal, HasDefault
    System.IO.IsolatedStorage.IsolatedStorageScope c_AppUserRoaming = 41 : Assembly, Static, Literal, HasDefault
  Properties:
    UInt64 MaximumSize 'get ' :  (Obsolete)
    UInt64 CurrentSize 'get ' :  (Obsolete)
    Int64 UsedSize 'get ' : 
    Int64 Quota 'get set' : 
    Int64 AvailableFreeSpace 'get ' : 
    System.Object DomainIdentity 'get ' : 
    System.Object ApplicationIdentity 'get ' : 
    System.Object AssemblyIdentity 'get ' : 
    System.IO.IsolatedStorage.IsolatedStorageScope Scope 'get ' : 
    System.String DomainName 'get ' : 
    System.String AssemName 'get ' : 
    System.String AppName 'get ' : 
  Methods:
    IsRoaming(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    IsRoaming(): PrivateScope, Assembly, HideBySig
    IsDomain(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    IsDomain(): PrivateScope, Assembly, HideBySig
    IsMachine(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    IsAssembly(): PrivateScope, Assembly, HideBySig
    IsApp(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    IsApp(): PrivateScope, Assembly, HideBySig
    GetHash(Stream): PrivateScope, Assembly, Static, HideBySig
    get_MaximumSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Quota(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Quota(Int64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_AvailableFreeSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DomainIdentity(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_ApplicationIdentity(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_AssemblyIdentity(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    IncreaseQuotaTo(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIdentityStream(IsolatedStorageScope): PrivateScope, Assembly, HideBySig
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    get_DomainName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AssemName(): PrivateScope, Assembly, HideBySig, SpecialName
    get_AppName(): PrivateScope, Assembly, HideBySig, SpecialName
    InitStore(IsolatedStorageScope, Object, Object, Object): PrivateScope, Assembly, HideBySig
    InitStore(IsolatedStorageScope, Evidence, Type, Evidence, Type, Evidence, Type): PrivateScope, Assembly, HideBySig
    InitStore(IsolatedStorageScope, Stream, Stream, Stream, String, String, String): PrivateScope, Assembly, HideBySig
    VerifyScope(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    SetQuota(PermissionSet, PermissionSet): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Remove(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCaller(): PrivateScope, Assembly, Static, HideBySig
Class System.IO.IsolatedStorage.IsolatedStorageFileStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.FileStream
    Void .ctor(System.String, System.IO.FileMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.IsolatedStorage.IsolatedStorageFile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.IsolatedStorage.IsolatedStorageFile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.IO.IsolatedStorage.IsolatedStorageFile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, Int32, System.IO.IsolatedStorage.IsolatedStorageFile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean IsAsync 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    IntPtr Handle 'get ' :  (Obsolete)
    Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle 'get ' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsAsync(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Flush(Boolean): PrivateScope, Public, Virtual, HideBySig
    get_Handle(): PrivateScope, Public, Virtual, HideBySig, SpecialName, HasSecurity
    get_SafeFileHandle(): PrivateScope, Public, Virtual, HideBySig, SpecialName, HasSecurity
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Lock(Int64, Int64): PrivateScope, Public, Virtual, HideBySig
    Unlock(Int64, Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    NotPermittedError(String): PrivateScope, Assembly, HideBySig
    NotPermittedError(): PrivateScope, Assembly, HideBySig
Class System.IO.IsolatedStorage.IsolatedStorageException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.IO.IsolatedStorage.IsolatedStorageSecurityOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.IsolatedStorage.IsolatedStorageSecurityOptions IncreaseQuotaForApplication = 4 : Public, Static, Literal, HasDefault
Class System.IO.IsolatedStorage.IsolatedStorageSecurityState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.SecurityState
  Properties:
    System.IO.IsolatedStorage.IsolatedStorageSecurityOptions Options 'get ' : 
    Int64 UsedSize 'get ' : 
    Int64 Quota 'get set' : 
  Methods:
    CreateStateToIncreaseQuotaForApplication(Int64, Int64): PrivateScope, Assembly, Static, HideBySig
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    get_UsedSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Quota(): PrivateScope, Public, HideBySig, SpecialName
    set_Quota(Int64): PrivateScope, Public, HideBySig, SpecialName
    EnsureState(): PrivateScope, Public, Virtual, HideBySig
Interface System.IO.IsolatedStorage.INormalizeForIsolatedStorage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Normalize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.IO.IsolatedStorage.IsolatedStorageFile: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.IO.IsolatedStorage.IsolatedStorage
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.String s_Files = Files : Assembly, Static, Literal, HasDefault
    System.String s_AssemFiles = AssemFiles : Assembly, Static, Literal, HasDefault
    System.String s_AppFiles = AppFiles : Assembly, Static, Literal, HasDefault
    System.String s_IDFile = identity.dat : Assembly, Static, Literal, HasDefault
    System.String s_InfoFile = info.dat : Assembly, Static, Literal, HasDefault
    System.String s_AppInfoFile = appinfo.dat : Assembly, Static, Literal, HasDefault
  Properties:
    Int64 UsedSize 'get ' : 
    UInt64 CurrentSize 'get ' :  (Obsolete)
    Int64 AvailableFreeSpace 'get ' : 
    Int64 Quota 'get set' : 
    Boolean IsEnabled 'get ' : 
    UInt64 MaximumSize 'get ' :  (Obsolete)
    System.String RootDirectory 'get ' : 
    Boolean Disposed 'get ' : 
  Methods:
    GetUserStoreForDomain(): PrivateScope, Public, Static, HideBySig
    GetUserStoreForAssembly(): PrivateScope, Public, Static, HideBySig
    GetUserStoreForApplication(): PrivateScope, Public, Static, HideBySig
    GetUserStoreForSite(): PrivateScope, Public, Static, HideBySig
    GetMachineStoreForDomain(): PrivateScope, Public, Static, HideBySig
    GetMachineStoreForAssembly(): PrivateScope, Public, Static, HideBySig
    GetMachineStoreForApplication(): PrivateScope, Public, Static, HideBySig
    GetStore(IsolatedStorageScope, Type, Type): PrivateScope, Public, Static, HideBySig
    EnsureStoreIsValid(): PrivateScope, Assembly, HideBySig
    GetStore(IsolatedStorageScope, Object, Object): PrivateScope, Public, Static, HideBySig
    GetStore(IsolatedStorageScope, Evidence, Type, Evidence, Type): PrivateScope, Public, Static, HideBySig
    GetStore(IsolatedStorageScope, Type): PrivateScope, Public, Static, HideBySig
    GetStore(IsolatedStorageScope, Object): PrivateScope, Public, Static, HideBySig
    get_UsedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CurrentSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AvailableFreeSpace(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Quota(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Quota(Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_IsEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaximumSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IncreaseQuotaTo(Int64): PrivateScope, Public, Virtual, HideBySig
    Reserve(UInt64): PrivateScope, Assembly, HideBySig
    Unreserve(UInt64): PrivateScope, Assembly, HideBySig
    Unreserve(UInt64, UInt64): PrivateScope, Assembly, HideBySig
    DeleteFile(String): PrivateScope, Public, HideBySig
    FileExists(String): PrivateScope, Public, HideBySig
    DirectoryExists(String): PrivateScope, Public, HideBySig
    CreateDirectory(String): PrivateScope, Public, HideBySig
    GetCreationTime(String): PrivateScope, Public, HideBySig
    GetLastAccessTime(String): PrivateScope, Public, HideBySig
    GetLastWriteTime(String): PrivateScope, Public, HideBySig
    CopyFile(String, String): PrivateScope, Public, HideBySig
    CopyFile(String, String, Boolean): PrivateScope, Public, HideBySig
    MoveFile(String, String): PrivateScope, Public, HideBySig
    MoveDirectory(String, String): PrivateScope, Public, HideBySig
    DeleteDirectory(String): PrivateScope, Public, HideBySig
    GetFileNames(): PrivateScope, Public, HideBySig
    GetFileNames(String): PrivateScope, Public, HideBySig
    GetDirectoryNames(): PrivateScope, Public, HideBySig
    GetDirectoryNames(String): PrivateScope, Public, HideBySig
    OpenFile(String, FileMode): PrivateScope, Public, HideBySig
    OpenFile(String, FileMode, FileAccess): PrivateScope, Public, HideBySig
    OpenFile(String, FileMode, FileAccess, FileShare): PrivateScope, Public, HideBySig
    CreateFile(String): PrivateScope, Public, HideBySig
    Remove(): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    NotAssemFilesDir(String): PrivateScope, Assembly, Static, HideBySig
    NotAppFilesDir(String): PrivateScope, Assembly, Static, HideBySig
    Remove(IsolatedStorageScope): PrivateScope, Public, Static, HideBySig
    GetEnumerator(IsolatedStorageScope): PrivateScope, Public, Static, HideBySig
    get_RootDirectory(): PrivateScope, Assembly, HideBySig, SpecialName
    GetFullPath(String): PrivateScope, Assembly, HideBySig
    Init(IsolatedStorageScope): PrivateScope, Assembly, HideBySig
    InitExistingStore(IsolatedStorageScope): PrivateScope, Assembly, HideBySig
    UndoReserveOperation(UInt64, UInt64): PrivateScope, Assembly, HideBySig
    Reserve(UInt64, UInt64): PrivateScope, Assembly, HideBySig
    ReserveOneBlock(): PrivateScope, Assembly, HideBySig
    UnreserveOneBlock(): PrivateScope, Assembly, HideBySig
    RoundToBlockSize(UInt64): PrivateScope, Assembly, Static, HideBySig
    RoundToBlockSizeFloor(UInt64): PrivateScope, Assembly, Static, HideBySig
    GetRootDir(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    get_Disposed(): PrivateScope, Assembly, HideBySig, SpecialName
    MigrateOldIsoStoreDirectory(String, String): PrivateScope, Assembly, Static, HideBySig
    CreateRandomDirectory(String): PrivateScope, Assembly, Static, HideBySig
    GetRandomDirectory(String, Boolean&(Out), String&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetMachineRandomDirectory(String): PrivateScope, Assembly, Static, HideBySig
    CreateMutexNotOwned(String): PrivateScope, Assembly, Static, HideBySig
    GetStrongHashSuitableForObjectName(String): PrivateScope, Assembly, Static, HideBySig
    Lock(Boolean&): PrivateScope, Assembly, HideBySig
    Unlock(): PrivateScope, Assembly, HideBySig
    GetGlobalFileIOPerm(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    VerifyGlobalScope(IsolatedStorageScope): PrivateScope, Assembly, Static, HideBySig
    CreateIDFile(String, IsolatedStorageScope): PrivateScope, Assembly, HideBySig
    GetFileDirectoryNames(String, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetUsage(SafeIsolatedStorageFileHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Open(String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Reserve(SafeIsolatedStorageFileHandle, UInt64, UInt64, Boolean(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetRootDir(IsolatedStorageScope, StringHandleOnStack): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Lock(SafeIsolatedStorageFileHandle, Boolean(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    CreateDirectoryWithDacl(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetQuota(SafeIsolatedStorageFileHandle, Int64&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SetQuota(SafeIsolatedStorageFileHandle, Int64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Class System.IO.IsolatedStorage.IsolatedStorageFileEnumerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.IO.IsolatedStorage.IsolatedStorageScope): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.IO.IsolatedStorage.SafeIsolatedStorageFileHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class System.IO.IsolatedStorage.TwoPaths: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Path1 : Public
    System.String Path2 : Public
Class System.IO.IsolatedStorage.TwoLevelFileEnumerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.IO.IsolatedStorage.__HResults: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 COR_E_ISOSTORE = -2146233264 : Public, Static, Literal, HasDefault
Struct System.Security.SecurityElementType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityElementType Regular = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityElementType Format = 1 : Public, Static, Literal, HasDefault
    System.Security.SecurityElementType Comment = 2 : Public, Static, Literal, HasDefault
Interface System.Security.ISecurityElementFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    CreateSecurityElement(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Attribute(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.SecurityElement: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityElementFactory
  Fields:
    System.String m_strTag : Assembly
    System.String m_strText : Assembly
    System.Collections.ArrayList m_lAttributes : Assembly
    System.Security.SecurityElementType m_type : Assembly
  Properties:
    System.String Tag 'get set' : 
    System.Collections.Hashtable Attributes 'get set' : 
    System.String Text 'get set' : 
    System.Collections.ArrayList Children 'get set' : 
    System.Collections.ArrayList InternalChildren 'get ' : 
  Methods:
    AddAttribute(String, String): PrivateScope, Public, HideBySig
    Attribute(String): PrivateScope, Public, HideBySig
    FromString(String): PrivateScope, Public, Static, HideBySig
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(String): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(Hashtable): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, HideBySig, SpecialName
    set_Children(ArrayList): PrivateScope, Public, HideBySig, SpecialName
    ConvertSecurityElementFactories(): PrivateScope, Assembly, HideBySig
    get_InternalChildren(): PrivateScope, Assembly, HideBySig, SpecialName
    AddAttributeSafe(String, String): PrivateScope, Assembly, HideBySig
    AddChild(SecurityElement): PrivateScope, Public, HideBySig
    AddChild(ISecurityElementFactory): PrivateScope, Assembly, HideBySig
    AddChildNoDuplicates(ISecurityElementFactory): PrivateScope, Assembly, HideBySig
    Equal(SecurityElement): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    IsValidTag(String): PrivateScope, Public, Static, HideBySig
    IsValidText(String): PrivateScope, Public, Static, HideBySig
    IsValidAttributeName(String): PrivateScope, Public, Static, HideBySig
    IsValidAttributeValue(String): PrivateScope, Public, Static, HideBySig
    Escape(String): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToWriter(StreamWriter): PrivateScope, Assembly, HideBySig
    SearchForChildByTag(String): PrivateScope, Public, HideBySig
    ToPermission(Boolean): PrivateScope, Assembly, HideBySig
    ToSecurityObject(): PrivateScope, Assembly, HideBySig
    SearchForTextOfLocalName(String): PrivateScope, Assembly, HideBySig
    SearchForTextOfTag(String): PrivateScope, Public, HideBySig
Class System.Security.SecurityDocumentElement: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.SecurityDocument, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityElementFactory
Class System.Security.SecurityDocument: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] m_data : Assembly
    Byte c_element = 1 : Assembly, Static, Literal, HasDefault
    Byte c_attribute = 2 : Assembly, Static, Literal, HasDefault
    Byte c_text = 3 : Assembly, Static, Literal, HasDefault
    Byte c_children = 4 : Assembly, Static, Literal, HasDefault
    Int32 c_growthSize = 32 : Assembly, Static, Literal, HasDefault
  Methods:
    GuaranteeSize(Int32): PrivateScope, Public, HideBySig
    AddString(String, Int32&): PrivateScope, Public, HideBySig
    AppendString(String, Int32&): PrivateScope, Public, HideBySig
    EncodedStringSize(String): PrivateScope, Public, Static, HideBySig
    GetString(Int32&): PrivateScope, Public, HideBySig
    GetString(Int32&, Boolean): PrivateScope, Public, HideBySig
    AddToken(Byte, Int32&): PrivateScope, Public, HideBySig
    ConvertElement(SecurityElement, Int32&): PrivateScope, Public, HideBySig
    GetRootElement(): PrivateScope, Public, HideBySig
    GetElement(Int32, Boolean): PrivateScope, Public, HideBySig
    InternalGetElement(Int32&, Boolean): PrivateScope, Assembly, HideBySig
    GetTagForElement(Int32): PrivateScope, Public, HideBySig
    GetChildrenPositionForElement(Int32): PrivateScope, Public, HideBySig
    GetAttributeForElement(Int32, String): PrivateScope, Public, HideBySig
Class System.Security.XmlSyntaxException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Security.DynamicSecurityMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.SuppressUnmanagedCodeSecurityAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.UnverifiableCodeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.AllowPartiallyTrustedCallersAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.PartialTrustVisibilityLevel PartialTrustVisibilityLevel 'get set' : 
  Methods:
    get_PartialTrustVisibilityLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_PartialTrustVisibilityLevel(PartialTrustVisibilityLevel): PrivateScope, Public, HideBySig, SpecialName
Struct System.Security.PartialTrustVisibilityLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.PartialTrustVisibilityLevel VisibleToAllHosts = 0 : Public, Static, Literal, HasDefault
    System.Security.PartialTrustVisibilityLevel NotVisibleByDefault = 1 : Public, Static, Literal, HasDefault
Struct System.Security.SecurityCriticalScope: AutoLayout, AnsiClass, Class, Public, Sealed (Obsolete)
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityCriticalScope Explicit = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityCriticalScope Everything = 1 : Public, Static, Literal, HasDefault
Class System.Security.SecurityCriticalAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityCriticalScope): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.SecurityCriticalScope Scope 'get ' :  (Obsolete)
  Methods:
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.SecurityTreatAsSafeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit (Obsolete)
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.SecuritySafeCriticalAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.SecurityTransparentAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Security.SecurityRuleSet: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityRuleSet None = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityRuleSet Level1 = 1 : Public, Static, Literal, HasDefault
    System.Security.SecurityRuleSet Level2 = 2 : Public, Static, Literal, HasDefault
Class System.Security.SecurityRulesAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Security.SecurityRuleSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SkipVerificationInFullTrust 'get set' : 
    System.Security.SecurityRuleSet RuleSet 'get ' : 
  Methods:
    get_SkipVerificationInFullTrust(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipVerificationInFullTrust(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RuleSet(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.BuiltInPermissionSets: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.Security.NamedPermissionSet Everything 'get ' : 
    System.Security.NamedPermissionSet Execution 'get ' : 
    System.Security.NamedPermissionSet FullTrust 'get ' : 
    System.Security.NamedPermissionSet Internet 'get ' : 
    System.Security.NamedPermissionSet LocalIntranet 'get ' : 
    System.Security.NamedPermissionSet Nothing 'get ' : 
    System.Security.NamedPermissionSet SkipVerification 'get ' : 
  Methods:
    get_Everything(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Internet(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_LocalIntranet(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Execution(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_FullTrust(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Nothing(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SkipVerification(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Security.CodeAccessPermission: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.Security.IPermission
    System.Security.ISecurityEncodable
    System.Security.IStackWalk
  Methods:
    RevertAssert(): PrivateScope, Public, Static, HideBySig
    RevertDeny(): PrivateScope, Public, Static, HideBySig (Obsolete)
    RevertPermitOnly(): PrivateScope, Public, Static, HideBySig
    RevertAll(): PrivateScope, Public, Static, HideBySig
    Demand(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    Demand(PermissionType): PrivateScope, Assembly, Static, HideBySig, RequireSecObject
    Assert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    Assert(Boolean): PrivateScope, Assembly, Static, HideBySig, RequireSecObject
    Deny(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject (Obsolete)
    PermitOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePermissionElement(IPermission, String): PrivateScope, Assembly, Static, HideBySig
    ValidateElement(SecurityElement, IPermission): PrivateScope, Assembly, Static, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
    VerifyType(IPermission): PrivateScope, Assembly, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CheckDemand(CodeAccessPermission): PrivateScope, Assembly, HideBySig
    CheckPermitOnly(CodeAccessPermission): PrivateScope, Assembly, HideBySig
    CheckDeny(CodeAccessPermission): PrivateScope, Assembly, HideBySig
    CheckAssert(CodeAccessPermission): PrivateScope, Assembly, HideBySig
Struct System.Security.PermissionType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.PermissionType SecurityUnmngdCodeAccess = 0 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecuritySkipVerification = 1 : Public, Static, Literal, HasDefault
    System.Security.PermissionType ReflectionTypeInfo = 2 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecurityAssert = 3 : Public, Static, Literal, HasDefault
    System.Security.PermissionType ReflectionMemberAccess = 4 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecuritySerialization = 5 : Public, Static, Literal, HasDefault
    System.Security.PermissionType ReflectionRestrictedMemberAccess = 6 : Public, Static, Literal, HasDefault
    System.Security.PermissionType FullTrust = 7 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecurityBindingRedirects = 8 : Public, Static, Literal, HasDefault
    System.Security.PermissionType UIPermission = 9 : Public, Static, Literal, HasDefault
    System.Security.PermissionType EnvironmentPermission = 10 : Public, Static, Literal, HasDefault
    System.Security.PermissionType FileDialogPermission = 11 : Public, Static, Literal, HasDefault
    System.Security.PermissionType FileIOPermission = 12 : Public, Static, Literal, HasDefault
    System.Security.PermissionType ReflectionPermission = 13 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecurityPermission = 14 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecurityControlEvidence = 16 : Public, Static, Literal, HasDefault
    System.Security.PermissionType SecurityControlPrincipal = 17 : Public, Static, Literal, HasDefault
Class System.Security.CodeAccessSecurityEngine: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    System.Security.Permissions.SecurityPermission AssertPermission : Assembly, Static
    System.Security.PermissionToken AssertPermissionToken : Assembly, Static
  Methods:
    SpecialDemand(PermissionType, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CheckSetHelper(PermissionSet, PermissionSet, PermissionSet, RuntimeMethodHandleInternal, Object, SecurityAction, Boolean): PrivateScope, Assembly, Static, HideBySig
    CheckHelper(CompressedStack, PermissionSet, PermissionSet, CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal, RuntimeAssembly, SecurityAction): PrivateScope, Assembly, Static, HideBySig
    CheckHelper(PermissionSet, PermissionSet, CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal, Object, SecurityAction, Boolean): PrivateScope, Assembly, Static, HideBySig
    QuickCheckForAllDemands(): PrivateScope, Assembly, Static, HideBySig
    AllDomainsHomogeneousWithNoStackModifiers(): PrivateScope, Assembly, Static, HideBySig
    Check(CodeAccessPermission, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CheckNReturnSO(PermissionToken, CodeAccessPermission, StackCrawlMark&, Int32): PrivateScope, Assembly, Static, HideBySig
    Assert(CodeAccessPermission, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CheckSetHelper(CompressedStack, PermissionSet, PermissionSet, PermissionSet, RuntimeMethodHandleInternal, RuntimeAssembly, SecurityAction): PrivateScope, Assembly, Static, HideBySig
    ReflectionTargetDemandHelper(PermissionType, PermissionSet): PrivateScope, Assembly, Static, HideBySig
    GetZoneAndOriginHelper(CompressedStack, PermissionSet, PermissionSet, ArrayList, ArrayList): PrivateScope, Assembly, Static, HideBySig
    GetZoneAndOrigin(StackCrawlMark&, ArrayList&(Out), ArrayList&(Out)): PrivateScope, Assembly, Static, HideBySig
    CheckAssembly(RuntimeAssembly, CodeAccessPermission): PrivateScope, Assembly, Static, HideBySig
    Check(PermissionSet, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    Deny(CodeAccessPermission, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    PermitOnly(CodeAccessPermission, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    TryResolveGrantSet(Evidence, PermissionSet&(Out)): PrivateScope, Assembly, Static, HideBySig
Interface System.Security.IEvidenceFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Security.Policy.Evidence Evidence 'get ' : 
  Methods:
    get_Evidence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Security.IPermission: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Security.ISecurityEncodable
  Methods:
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Demand(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, RequireSecObject
Interface System.Security.ISecurityEncodable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToXml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.ISecurityPolicyEncodable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ToXml(PolicyLevel): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.IStackWalk: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    Demand(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, RequireSecObject
    Assert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, RequireSecObject
    Deny(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, RequireSecObject
    PermitOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, RequireSecObject
Class System.Security.FrameSecurityDescriptor: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetTokenHandles(SafeAccessTokenHandle, SafeAccessTokenHandle): PrivateScope, Assembly, HideBySig
    CheckDemand2(CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal, Boolean): PrivateScope, Assembly, HideBySig
    HasImperativeAsserts(): PrivateScope, Assembly, HideBySig
    HasImperativeDenials(): PrivateScope, Assembly, HideBySig
    HasImperativeRestrictions(): PrivateScope, Assembly, HideBySig
    SetAssert(IPermission): PrivateScope, Assembly, HideBySig
    SetAssert(PermissionSet): PrivateScope, Assembly, HideBySig
    GetAssertions(Boolean): PrivateScope, Assembly, HideBySig
    SetAssertAllPossible(): PrivateScope, Assembly, HideBySig
    GetAssertAllPossible(): PrivateScope, Assembly, HideBySig
    SetDeny(IPermission): PrivateScope, Assembly, HideBySig
    SetDeny(PermissionSet): PrivateScope, Assembly, HideBySig
    GetDenials(Boolean): PrivateScope, Assembly, HideBySig
    SetPermitOnly(IPermission): PrivateScope, Assembly, HideBySig
    SetPermitOnly(PermissionSet): PrivateScope, Assembly, HideBySig
    GetPermitOnly(Boolean): PrivateScope, Assembly, HideBySig
    RevertAssert(): PrivateScope, Assembly, HideBySig
    RevertAssertAllPossible(): PrivateScope, Assembly, HideBySig
    RevertDeny(): PrivateScope, Assembly, HideBySig
    RevertPermitOnly(): PrivateScope, Assembly, HideBySig
    RevertAll(): PrivateScope, Assembly, HideBySig
    CheckDemand(CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckSetDemand(PermissionSet, PermissionSet&(Out), RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckSetDemand2(PermissionSet, PermissionSet&(Out), RuntimeMethodHandleInternal, Boolean): PrivateScope, Assembly, HideBySig
Class System.Security.FrameSecurityDescriptorWithResolver: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.FrameSecurityDescriptor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.Emit.DynamicResolver Resolver 'get ' : 
  Methods:
    get_Resolver(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Security.HostSecurityManagerOptions: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.HostSecurityManagerOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.HostSecurityManagerOptions HostAppDomainEvidence = 1 : Public, Static, Literal, HasDefault
    System.Security.HostSecurityManagerOptions HostPolicyLevel = 2 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.HostSecurityManagerOptions HostAssemblyEvidence = 4 : Public, Static, Literal, HasDefault
    System.Security.HostSecurityManagerOptions HostDetermineApplicationTrust = 8 : Public, Static, Literal, HasDefault
    System.Security.HostSecurityManagerOptions HostResolvePolicy = 16 : Public, Static, Literal, HasDefault
    System.Security.HostSecurityManagerOptions AllFlags = 31 : Public, Static, Literal, HasDefault
Class System.Security.HostSecurityManager: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.HostSecurityManagerOptions Flags 'get ' : 
    System.Security.Policy.PolicyLevel DomainPolicy 'get ' :  (Obsolete)
  Methods:
    get_Flags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DomainPolicy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProvideAppDomainEvidence(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ProvideAssemblyEvidence(Assembly, Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetermineApplicationTrust(Evidence, Evidence, TrustManagerContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    ResolvePolicy(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHostSuppliedAppDomainEvidenceTypes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHostSuppliedAssemblyEvidenceTypes(Assembly): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateAppDomainEvidence(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GenerateAssemblyEvidence(Type, Assembly): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.NamedPermissionSet: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.PermissionSet
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.NamedPermissionSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.PermissionSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String m_descrResource : Assembly
  Properties:
    System.String Name 'get set' : 
    System.String Description 'get set' : 
  Methods:
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement, Boolean, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    Copy(String): PrivateScope, Public, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    FromXmlNameOnly(SecurityElement): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.PermissionSetEnumerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Security.PermissionSetEnumeratorInternal: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    GetCurrentIndex(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    MoveNext(): PrivateScope, Public, HideBySig
Struct System.Security.SpecialPermissionSetFlag: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SpecialPermissionSetFlag Regular = 0 : Public, Static, Literal, HasDefault
    System.Security.SpecialPermissionSetFlag NoSet = 1 : Public, Static, Literal, HasDefault
    System.Security.SpecialPermissionSetFlag EmptySet = 2 : Public, Static, Literal, HasDefault
    System.Security.SpecialPermissionSetFlag SkipVerification = 3 : Public, Static, Literal, HasDefault
Class System.Security.PermissionSet: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityEncodable
    System.Collections.ICollection
    System.Collections.IEnumerable
    System.Security.IStackWalk
    System.Runtime.Serialization.IDeserializationCallback
  Fields:
    System.Security.Util.TokenBasedSet m_permSet : Assembly
    System.Security.PermissionSet s_fullTrust : Assembly, Static, InitOnly
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
    Boolean IgnoreTypeLoadFailures 'set' : 
  Methods:
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Assembly, HideBySig
    CheckSet(): PrivateScope, Assembly, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    FastIsEmpty(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPermission(Int32): PrivateScope, Assembly, HideBySig
    GetPermission(PermissionToken): PrivateScope, Assembly, HideBySig
    GetPermission(IPermission): PrivateScope, Assembly, HideBySig
    GetPermission(Type): PrivateScope, Public, HideBySig
    SetPermission(IPermission): PrivateScope, Public, HideBySig
    AddPermission(IPermission): PrivateScope, Public, HideBySig
    RemovePermission(Type): PrivateScope, Public, HideBySig
    SetUnrestricted(Boolean): PrivateScope, Assembly, HideBySig
    IsUnrestricted(): PrivateScope, Public, HideBySig
    IsSubsetOfHelper(PermissionSet, IsSubsetOfType, IPermission&(Out), Boolean): PrivateScope, Assembly, HideBySig
    IsSubsetOf(PermissionSet): PrivateScope, Public, HideBySig
    CheckDemand(PermissionSet, IPermission&(Out)): PrivateScope, Assembly, HideBySig
    CheckPermitOnly(PermissionSet, IPermission&(Out)): PrivateScope, Assembly, HideBySig
    CheckAssertion(PermissionSet): PrivateScope, Assembly, HideBySig
    CheckDeny(PermissionSet, IPermission&(Out)): PrivateScope, Assembly, HideBySig
    CheckDecoded(CodeAccessPermission, PermissionToken): PrivateScope, Assembly, HideBySig
    CheckDecoded(Int32): PrivateScope, Assembly, HideBySig
    CheckDecoded(PermissionSet): PrivateScope, Assembly, HideBySig
    SafeChildAdd(SecurityElement, ISecurityElementFactory, Boolean): PrivateScope, Assembly, Static, HideBySig
    InplaceIntersect(PermissionSet): PrivateScope, Assembly, HideBySig
    Intersect(PermissionSet): PrivateScope, Public, HideBySig
    InplaceUnion(PermissionSet): PrivateScope, Assembly, HideBySig
    Union(PermissionSet): PrivateScope, Public, HideBySig
    MergeDeniedSet(PermissionSet): PrivateScope, Assembly, HideBySig
    Contains(IPermission): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Demand(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    DemandNonCAS(): PrivateScope, Assembly, HideBySig
    Assert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    Deny(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject (Obsolete)
    PermitOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    GetFirstPerm(): PrivateScope, Assembly, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyWithNoIdentityPermissions(): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumeratorInternal(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    FilterHostProtectionPermissions(HostProtectionResource, HostProtectionResource): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsPermissionTag(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    FromXml(SecurityElement, Boolean, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    FromXml(SecurityDocument, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    CreatePerm(Object, Boolean): PrivateScope, Assembly, Static, HideBySig
    CreatePermission(Object, Int32): PrivateScope, Assembly, HideBySig
    CreateEmptyPermissionSetXml(): PrivateScope, Assembly, Static, HideBySig
    ToXml(String): PrivateScope, Assembly, HideBySig
    InternalToXml(): PrivateScope, Assembly, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncodeXml(): PrivateScope, Assembly, HideBySig
    ConvertPermissionSet(String, Byte[], String): PrivateScope, Public, Static, HideBySig (Obsolete)
    ContainsNonCodeAccessPermissions(): PrivateScope, Public, HideBySig
    RevertAssert(): PrivateScope, Public, Static, HideBySig
    RemoveRefusedPermissionSet(PermissionSet, PermissionSet, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    RemoveAssertedPermissionSet(PermissionSet, PermissionSet, PermissionSet&(Out)): PrivateScope, Assembly, Static, HideBySig
    IsIntersectingAssertedPermissions(PermissionSet, PermissionSet): PrivateScope, Assembly, Static, HideBySig
    set_IgnoreTypeLoadFailures(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.Security.PermissionTokenType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.PermissionTokenType Normal = 1 : Public, Static, Literal, HasDefault
    System.Security.PermissionTokenType IUnrestricted = 2 : Public, Static, Literal, HasDefault
    System.Security.PermissionTokenType DontKnow = 4 : Public, Static, Literal, HasDefault
    System.Security.PermissionTokenType BuiltIn = 8 : Public, Static, Literal, HasDefault
Class System.Security.PermissionTokenKeyComparer: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEqualityComparer
  Methods:
    Compare(Object, Object): PrivateScope, Public, HideBySig
    Equals(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.PermissionToken: AutoLayout, AnsiClass, Class, Sealed, Serializable
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Security.PermissionTokenType, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityEncodable
  Fields:
    Int32 m_index : Assembly
    System.Security.PermissionTokenType m_type IsVolatile : Assembly
    System.String m_strTypeName : Assembly
    System.Security.Util.TokenBasedSet s_tokenSet : Assembly, Static
  Methods:
    IsMscorlibClassName(String): PrivateScope, Assembly, Static, HideBySig
    GetToken(Type): PrivateScope, Public, Static, HideBySig
    FindToken(Type): PrivateScope, Public, Static, HideBySig
    GetToken(IPermission): PrivateScope, Public, Static, HideBySig
    GetToken(String): PrivateScope, Public, Static, HideBySig
    GetToken(String, Boolean): PrivateScope, Public, Static, HideBySig
    FindTokenByIndex(Int32): PrivateScope, Public, Static, HideBySig
    IsTokenProperlyAssigned(IPermission, PermissionToken): PrivateScope, Public, Static, HideBySig
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.PermissionTokenFactory: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetToken(Type, IPermission): PrivateScope, Assembly, HideBySig
    FindToken(Type): PrivateScope, Assembly, HideBySig
    FindTokenByIndex(Int32): PrivateScope, Assembly, HideBySig
    GetToken(String): PrivateScope, Assembly, HideBySig
    BuiltInGetToken(Int32, IPermission, Type): PrivateScope, Assembly, HideBySig
Class System.Security.PermissionSetTriple: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSetTriple): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Security.PermissionSet AssertSet : Assembly
    System.Security.PermissionSet GrantSet : Assembly
    System.Security.PermissionSet RefusedSet : Assembly
  Methods:
    Reset(): PrivateScope, Assembly, HideBySig
    IsEmpty(): PrivateScope, Assembly, HideBySig
    Update(PermissionSetTriple, PermissionSetTriple&(Out)): PrivateScope, Assembly, HideBySig
    UpdateAssert(PermissionSet): PrivateScope, Assembly, HideBySig
    UpdateGrant(PermissionSet, ZoneIdentityPermission&(Out), UrlIdentityPermission&(Out)): PrivateScope, Assembly, HideBySig
    UpdateGrant(PermissionSet): PrivateScope, Assembly, HideBySig
    UpdateRefused(PermissionSet): PrivateScope, Assembly, HideBySig
    CheckDemand(CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckSetDemand(PermissionSet, PermissionSet&(Out), RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckDemandNoThrow(CodeAccessPermission, PermissionToken): PrivateScope, Assembly, HideBySig
    CheckSetDemandNoThrow(PermissionSet): PrivateScope, Assembly, HideBySig
    CheckFlags(Int32&): PrivateScope, Assembly, HideBySig
Class System.Security.PermissionListSet: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    UpdateDomainPLS(PermissionListSet): PrivateScope, Assembly, HideBySig
    UpdateDomainPLS(PermissionSet, PermissionSet): PrivateScope, Assembly, HideBySig
    CreateCompressedState(CompressedStack, CompressedStack): PrivateScope, Assembly, Static, HideBySig
    CreateCompressedState(IntPtr, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    CreateCompressedState_HG(): PrivateScope, Assembly, Static, HideBySig
    CheckDemandNoThrow(CodeAccessPermission): PrivateScope, Assembly, HideBySig
    CheckSetDemandNoThrow(PermissionSet): PrivateScope, Assembly, HideBySig
    CheckDemand(CodeAccessPermission, PermissionToken, RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckSetDemand(PermissionSet, RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    CheckSetDemandWithModification(PermissionSet, PermissionSet&(Out), RuntimeMethodHandleInternal): PrivateScope, Assembly, HideBySig
    DemandFlagsOrGrantSet(Int32, PermissionSet): PrivateScope, Assembly, HideBySig
    GetZoneAndOrigin(ArrayList, ArrayList, PermissionToken, PermissionToken): PrivateScope, Assembly, HideBySig
Class System.Security.PolicyManager: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddLevel(PolicyLevel): PrivateScope, Assembly, HideBySig
    PolicyHierarchy(): PrivateScope, Assembly, HideBySig, HasSecurity
    Resolve(Evidence): PrivateScope, Assembly, HideBySig
    CodeGroupResolve(Evidence, Boolean): PrivateScope, Assembly, HideBySig
    IsGacAssembly(Evidence): PrivateScope, Assembly, Static, HideBySig
    ResolveCodeGroups(Evidence): PrivateScope, Assembly, HideBySig
    ResolveCodeGroup(CodeGroup, Evidence): PrivateScope, Assembly, Static, HideBySig
    CheckMembershipCondition(IMembershipCondition, Evidence, Object&(Out)): PrivateScope, Assembly, Static, HideBySig
    Save(): PrivateScope, Assembly, HideBySig
    EncodeLevel(PolicyLevel): PrivateScope, Assembly, Static, HideBySig
    CanUseQuickCache(CodeGroup): PrivateScope, Assembly, Static, HideBySig
Class System.Security.ReadOnlyPermissionSet: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.PermissionSet
    Void .ctor(System.Security.SecurityElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
Class System.Security.ReadOnlyPermissionSetEnumerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.IEnumerator): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.SecureString: AutoLayout, AnsiClass, Class, Public, Sealed
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecureString): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Length 'get ' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    AppendChar(Char): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InsertAt(Int32, Char): PrivateScope, Public, HideBySig
    IsReadOnly(): PrivateScope, Public, HideBySig
    MakeReadOnly(): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    SetAt(Int32, Char): PrivateScope, Public, HideBySig
    ToBSTR(): PrivateScope, Assembly, HideBySig
    ToUniStr(Boolean): PrivateScope, Assembly, HideBySig
    ToAnsiStr(Boolean): PrivateScope, Assembly, HideBySig
Class System.Security.SafeBSTRHandle: AutoLayout, AnsiClass, Class, Sealed, HasSecurity, BeforeFieldInit
  :System.Runtime.InteropServices.SafeBuffer
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    Allocate(String, UInt32): PrivateScope, Assembly, Static, HideBySig
    ClearBuffer(): PrivateScope, Assembly, HideBySig
    get_Length(): PrivateScope, Assembly, HideBySig, SpecialName
    Copy(SafeBSTRHandle, SafeBSTRHandle): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.SecurityContextSource: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityContextSource CurrentAppDomain = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityContextSource CurrentAssembly = 1 : Public, Static, Literal, HasDefault
Struct System.Security.SecurityContextDisableFlow: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityContextDisableFlow Nothing = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityContextDisableFlow WI = 1 : Public, Static, Literal, HasDefault
    System.Security.SecurityContextDisableFlow All = 16383 : Public, Static, Literal, HasDefault
Struct System.Security.WindowsImpersonationFlowMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.WindowsImpersonationFlowMode IMP_FASTFLOW = 0 : Public, Static, Literal, HasDefault
    System.Security.WindowsImpersonationFlowMode IMP_NOFLOW = 1 : Public, Static, Literal, HasDefault
    System.Security.WindowsImpersonationFlowMode IMP_ALWAYSFLOW = 2 : Public, Static, Literal, HasDefault
    System.Security.WindowsImpersonationFlowMode IMP_DEFAULT = 0 : Public, Static, Literal, HasDefault
Struct System.Security.SecurityContextSwitcher: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IDisposable
  Fields:
    Reader prevSC : Assembly
    System.Security.SecurityContext currSC : Assembly
    System.Threading.ExecutionContext currEC : Assembly
    System.Threading.CompressedStackSwitcher cssw : Assembly
    System.Security.Principal.WindowsImpersonationContext wic : Assembly
  Methods:
    Undo(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    UndoNoThrow(): PrivateScope, Assembly, HideBySig
Class System.Security.SecurityContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Boolean isNewCapture IsVolatile : Assembly
    System.Security.SecurityContextDisableFlow _disableFlow IsVolatile : Assembly
    TryCode tryCode IsVolatile : Assembly, Static
    CleanupCode cleanupCode IsVolatile : Assembly, Static
  Properties:
    System.Security.SecurityContext FullTrustSecurityContext 'get ' : 
    System.Threading.ExecutionContext ExecutionContext 'set' : 
    System.Security.Principal.WindowsIdentity WindowsIdentity 'get set' : 
    System.Threading.CompressedStack CompressedStack 'get set' : 
    Boolean AlwaysFlowImpersonationPolicy 'get ' : 
  Methods:
    set_ExecutionContext(ExecutionContext): PrivateScope, Assembly, HideBySig, SpecialName
    set_CompressedStack(CompressedStack): PrivateScope, Assembly, HideBySig, SpecialName
    IsFlowSuppressed(SecurityContextDisableFlow): PrivateScope, Assembly, Static, HideBySig
    Run(SecurityContext, ContextCallback, Object): PrivateScope, Public, Static, HideBySig, RequireSecObject
    RunInternal(SecurityContext, ContextCallback, Object): PrivateScope, Assembly, Static, HideBySig
    runTryCode(Object): PrivateScope, Assembly, Static, HideBySig
    runFinallyCode(Object, Boolean): PrivateScope, Assembly, Static, HideBySig
    SetSecurityContext(SecurityContext, Reader, Boolean, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CreateCopy(): PrivateScope, Public, HideBySig
    Capture(): PrivateScope, Public, Static, HideBySig
    RestoreCurrentWI(Reader, Reader, WindowsIdentity, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetImpersonationFlowMode(): PrivateScope, Assembly, Static, HideBySig
    IsDefaultThreadSecurityInfo(): PrivateScope, Assembly, Static, HideBySig
    get_FullTrustSecurityContext(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_WindowsIdentity(): PrivateScope, Assembly, HideBySig, SpecialName
    set_WindowsIdentity(WindowsIdentity): PrivateScope, Assembly, HideBySig, SpecialName
    get_CompressedStack(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SuppressFlow(): PrivateScope, Public, Static, HideBySig
    SuppressFlowWindowsIdentity(): PrivateScope, Public, Static, HideBySig
    SuppressFlow(SecurityContextDisableFlow): PrivateScope, Assembly, Static, HideBySig
    RestoreFlow(): PrivateScope, Public, Static, HideBySig
    IsFlowSuppressed(): PrivateScope, Public, Static, HideBySig
    IsWindowsIdentityFlowSuppressed(): PrivateScope, Public, Static, HideBySig
    SetSecurityContext(SecurityContext, Reader, Boolean): PrivateScope, Assembly, Static, HideBySig, RequireSecObject
    CreateMutableCopy(): PrivateScope, Assembly, HideBySig
    Capture(Reader, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    CreateFullTrustSecurityContext(): PrivateScope, Assembly, Static, HideBySig
    get_AlwaysFlowImpersonationPolicy(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetCurrentWI(Reader): PrivateScope, Assembly, Static, HideBySig
    GetCurrentWI(Reader, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsDefaultFTSecurityContext(): PrivateScope, Assembly, HideBySig
    CurrentlyInDefaultFTSecurityContext(Reader): PrivateScope, Assembly, Static, HideBySig
Class System.Security.SecurityException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(System.String, System.Reflection.AssemblyName, System.Security.PermissionSet, System.Security.PermissionSet, System.Reflection.MethodInfo, System.Security.Permissions.SecurityAction, System.Object, System.Security.IPermission, System.Security.Policy.Evidence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object, System.Object, System.Reflection.MethodInfo, System.Object, System.Security.IPermission): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Type, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet, System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.PermissionSet, System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.SecurityAction Action 'get set' : 
    System.Type PermissionType 'get set' : 
    System.Security.IPermission FirstPermissionThatFailed 'get set' : 
    System.String PermissionState 'get set' : 
    System.Object Demanded 'get set' : 
    System.String GrantedSet 'get set' : 
    System.String RefusedSet 'get set' : 
    System.Object DenySetInstance 'get set' : 
    System.Object PermitOnlySetInstance 'get set' : 
    System.Reflection.AssemblyName FailedAssemblyInfo 'get set' : 
    System.Reflection.MethodInfo Method 'get set' : 
    System.Security.SecurityZone Zone 'get set' : 
    System.String Url 'get set' : 
  Methods:
    GetResString(String): PrivateScope, Assembly, Static, HideBySig
    MakeSecurityException(AssemblyName, Evidence, PermissionSet, PermissionSet, RuntimeMethodHandleInternal, SecurityAction, Object, IPermission): PrivateScope, Assembly, Static, HideBySig
    set_Method(MethodInfo): PrivateScope, Public, HideBySig, SpecialName
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(SecurityAction): PrivateScope, Public, HideBySig, SpecialName
    get_PermissionType(): PrivateScope, Public, HideBySig, SpecialName
    set_PermissionType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_FirstPermissionThatFailed(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_FirstPermissionThatFailed(IPermission): PrivateScope, Public, HideBySig, SpecialName
    get_PermissionState(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_PermissionState(String): PrivateScope, Public, HideBySig, SpecialName
    get_Demanded(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_Demanded(Object): PrivateScope, Public, HideBySig, SpecialName
    get_GrantedSet(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_GrantedSet(String): PrivateScope, Public, HideBySig, SpecialName
    get_RefusedSet(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_RefusedSet(String): PrivateScope, Public, HideBySig, SpecialName
    get_DenySetInstance(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_DenySetInstance(Object): PrivateScope, Public, HideBySig, SpecialName
    get_PermitOnlySetInstance(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_PermitOnlySetInstance(Object): PrivateScope, Public, HideBySig, SpecialName
    get_FailedAssemblyInfo(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_FailedAssemblyInfo(AssemblyName): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Zone(): PrivateScope, Public, HideBySig, SpecialName
    set_Zone(SecurityZone): PrivateScope, Public, HideBySig, SpecialName
    get_Url(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class System.Security.SecurityState: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  Methods:
    IsStateAvailable(): PrivateScope, Public, HideBySig
    EnsureState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.HostProtectionException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.Permissions.HostProtectionResource, System.Security.Permissions.HostProtectionResource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.HostProtectionResource ProtectedResources 'get ' : 
    System.Security.Permissions.HostProtectionResource DemandedResources 'get ' : 
  Methods:
    get_ProtectedResources(): PrivateScope, Public, HideBySig, SpecialName
    get_DemandedResources(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.PolicyLevelType: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.PolicyLevelType User = 0 : Public, Static, Literal, HasDefault
    System.Security.PolicyLevelType Machine = 1 : Public, Static, Literal, HasDefault
    System.Security.PolicyLevelType Enterprise = 2 : Public, Static, Literal, HasDefault
    System.Security.PolicyLevelType AppDomain = 3 : Public, Static, Literal, HasDefault
Class System.Security.SecurityManager: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.Security.PolicyManager PolicyManager 'get ' : 
    Boolean CheckExecutionRights 'get set' :  (Obsolete)
    Boolean SecurityEnabled 'get set' :  (Obsolete)
  Methods:
    get_PolicyManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    IsGranted(IPermission): PrivateScope, Public, Static, HideBySig (Obsolete)
    GetStandardSandbox(Evidence): PrivateScope, Public, Static, HideBySig
    GetZoneAndOrigin(ArrayList&(Out), ArrayList&(Out)): PrivateScope, Public, Static, HideBySig
    LoadPolicyLevelFromFile(String, PolicyLevelType): PrivateScope, Public, Static, HideBySig, HasSecurity (Obsolete)
    LoadPolicyLevelFromString(String, PolicyLevelType): PrivateScope, Public, Static, HideBySig, HasSecurity (Obsolete)
    SavePolicyLevel(PolicyLevel): PrivateScope, Public, Static, HideBySig, HasSecurity (Obsolete)
    ResolvePolicy(Evidence, PermissionSet, PermissionSet, PermissionSet, PermissionSet&(Out)): PrivateScope, Public, Static, HideBySig (Obsolete)
    ResolvePolicy(Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    ResolvePolicy(Evidence[]): PrivateScope, Public, Static, HideBySig (Obsolete)
    CurrentThreadRequiresSecurityContextCapture(): PrivateScope, Public, Static, HideBySig
    ResolveSystemPolicy(Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    ResolvePolicyGroups(Evidence): PrivateScope, Public, Static, HideBySig (Obsolete)
    PolicyHierarchy(): PrivateScope, Public, Static, HideBySig (Obsolete)
    SavePolicy(): PrivateScope, Public, Static, HideBySig, HasSecurity (Obsolete)
    get_CheckExecutionRights(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CheckExecutionRights(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SecurityEnabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_SecurityEnabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    GetSpecialFlags(PermissionSet, PermissionSet): PrivateScope, Assembly, Static, HideBySig
    IsSameType(String, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    _SetThreadSecurity(Boolean): PrivateScope, Assembly, Static, HideBySig
    GetGrantedPermissions(ObjectHandleOnStack, ObjectHandleOnStack, StackCrawlMarkHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Class System.Security.SecurityRuntime: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Fields:
    Boolean StackContinue = True : Assembly, Static, Literal, HasDefault
    Boolean StackHalt = False : Assembly, Static, Literal, HasDefault
  Methods:
    GetSecurityObjectForFrame(StackCrawlMark&, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetMethodInfo(RuntimeMethodHandleInternal): PrivateScope, Assembly, Static, HideBySig
    Assert(PermissionSet, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    AssertAllPossible(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    PermitOnly(PermissionSet, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    RevertAssert(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    RevertPermitOnly(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    RevertAll(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    Deny(PermissionSet, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    RevertDeny(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.SecurityZone: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.SecurityZone MyComputer = 0 : Public, Static, Literal, HasDefault
    System.Security.SecurityZone Intranet = 1 : Public, Static, Literal, HasDefault
    System.Security.SecurityZone Trusted = 2 : Public, Static, Literal, HasDefault
    System.Security.SecurityZone Internet = 3 : Public, Static, Literal, HasDefault
    System.Security.SecurityZone Untrusted = 4 : Public, Static, Literal, HasDefault
    System.Security.SecurityZone NoZone = -1 : Public, Static, Literal, HasDefault
Class System.Security.VerificationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Security.AccessControl.InheritanceFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.InheritanceFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.InheritanceFlags ContainerInherit = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.InheritanceFlags ObjectInherit = 2 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.PropagationFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.PropagationFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.PropagationFlags NoPropagateInherit = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.PropagationFlags InheritOnly = 2 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.AuditFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AuditFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AuditFlags Success = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AuditFlags Failure = 2 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.SecurityInfos: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.SecurityInfos Owner = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.SecurityInfos Group = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.SecurityInfos DiscretionaryAcl = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.SecurityInfos SystemAcl = 8 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.ResourceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.ResourceType Unknown = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType FileObject = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType Service = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType Printer = 3 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType RegistryKey = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType LMShare = 5 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType KernelObject = 6 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType WindowObject = 7 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType DSObject = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType DSObjectAll = 9 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType ProviderDefined = 10 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType WmiGuidObject = 11 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ResourceType RegistryWow6432Key = 12 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.AccessControlSections: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AccessControlSections None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlSections Audit = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlSections Access = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlSections Owner = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlSections Group = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlSections All = 15 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.AccessControlActions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AccessControlActions None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlActions View = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlActions Change = 2 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.AceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AceType AccessAllowed = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessDenied = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAudit = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAlarm = 3 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessAllowedCompound = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessAllowedObject = 5 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessDeniedObject = 6 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAuditObject = 7 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAlarmObject = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessAllowedCallback = 9 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessDeniedCallback = 10 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessAllowedCallbackObject = 11 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType AccessDeniedCallbackObject = 12 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAuditCallback = 13 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAlarmCallback = 14 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAuditCallbackObject = 15 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType SystemAlarmCallbackObject = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceType MaxDefinedAceType = 16 : Public, Static, Literal, HasDefault
Struct System.Security.AccessControl.AceFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AceFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags ObjectInherit = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags ContainerInherit = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags NoPropagateInherit = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags InheritOnly = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags Inherited = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags SuccessfulAccess = 64 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags FailedAccess = 128 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags InheritanceFlags = 15 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceFlags AuditFlags = 192 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.GenericAce: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.Security.AccessControl.AceType, System.Security.AccessControl.AceFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 _indexInAcl : Assembly
    Int32 HeaderLength = 4 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Security.AccessControl.AceType AceType 'get ' : 
    System.Security.AccessControl.AceFlags AceFlags 'get set' : 
    Boolean IsInherited 'get ' : 
    System.Security.AccessControl.InheritanceFlags InheritanceFlags 'get ' : 
    System.Security.AccessControl.PropagationFlags PropagationFlags 'get ' : 
    System.Security.AccessControl.AuditFlags AuditFlags 'get ' : 
    Int32 BinaryLength 'get ' : 
  Methods:
    MarshalHeader(Byte[], Int32): PrivateScope, Assembly, HideBySig
    AceFlagsFromAuditFlags(AuditFlags): PrivateScope, Assembly, Static, HideBySig
    AceFlagsFromInheritanceFlags(InheritanceFlags, PropagationFlags): PrivateScope, Assembly, Static, HideBySig
    VerifyHeader(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    CreateFromBinaryForm(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    get_AceType(): PrivateScope, Public, HideBySig, SpecialName
    get_AceFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_AceFlags(AceFlags): PrivateScope, Public, HideBySig, SpecialName
    get_IsInherited(): PrivateScope, Public, HideBySig, SpecialName
    get_InheritanceFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_PropagationFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_AuditFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Copy(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(GenericAce, GenericAce): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GenericAce, GenericAce): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.AccessControl.KnownAce: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.GenericAce
    Void .ctor(System.Security.AccessControl.AceType, System.Security.AccessControl.AceFlags, Int32, System.Security.Principal.SecurityIdentifier): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 AccessMaskLength = 4 : Assembly, Static, Literal, HasDefault
  Properties:
    Int32 AccessMask 'get set' : 
    System.Security.Principal.SecurityIdentifier SecurityIdentifier 'get set' : 
  Methods:
    get_AccessMask(): PrivateScope, Public, HideBySig, SpecialName
    set_AccessMask(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityIdentifier(SecurityIdentifier): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.CustomAce: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.GenericAce
    Void .ctor(System.Security.AccessControl.AceType, System.Security.AccessControl.AceFlags, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MaxOpaqueLength : Public, Static, InitOnly
  Properties:
    Int32 OpaqueLength 'get ' : 
    Int32 BinaryLength 'get ' : 
  Methods:
    get_OpaqueLength(): PrivateScope, Public, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetOpaque(): PrivateScope, Public, HideBySig
    SetOpaque(Byte[]): PrivateScope, Public, HideBySig
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.AccessControl.CompoundAceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.CompoundAceType Impersonation = 1 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.CompoundAce: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.KnownAce
    Void .ctor(System.Security.AccessControl.AceFlags, Int32, System.Security.AccessControl.CompoundAceType, System.Security.Principal.SecurityIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.CompoundAceType CompoundAceType 'get set' : 
    Int32 BinaryLength 'get ' : 
  Methods:
    ParseBinaryForm(Byte[], Int32, Int32&(Out), CompoundAceType&(Out), SecurityIdentifier&(Out)): PrivateScope, Assembly, Static, HideBySig
    get_CompoundAceType(): PrivateScope, Public, HideBySig, SpecialName
    set_CompoundAceType(CompoundAceType): PrivateScope, Public, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.AccessControl.AceQualifier: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AceQualifier AccessAllowed = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceQualifier AccessDenied = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceQualifier SystemAudit = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AceQualifier SystemAlarm = 3 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.QualifiedAce: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.KnownAce
    Void .ctor(System.Security.AccessControl.AceType, System.Security.AccessControl.AceFlags, Int32, System.Security.Principal.SecurityIdentifier, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.AceQualifier AceQualifier 'get ' : 
    Boolean IsCallback 'get ' : 
    Int32 MaxOpaqueLengthInternal 'get ' : 
    Int32 OpaqueLength 'get ' : 
  Methods:
    get_AceQualifier(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallback(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxOpaqueLengthInternal(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_OpaqueLength(): PrivateScope, Public, HideBySig, SpecialName
    GetOpaque(): PrivateScope, Public, HideBySig
    SetOpaque(Byte[]): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.CommonAce: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.QualifiedAce
    Void .ctor(System.Security.AccessControl.AceFlags, System.Security.AccessControl.AceQualifier, Int32, System.Security.Principal.SecurityIdentifier, Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BinaryLength 'get ' : 
    Int32 MaxOpaqueLengthInternal 'get ' : 
  Methods:
    ParseBinaryForm(Byte[], Int32, AceQualifier&(Out), Int32&(Out), SecurityIdentifier&(Out), Boolean&(Out), Byte[]&(Out)): PrivateScope, Assembly, Static, HideBySig
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    MaxOpaqueLength(Boolean): PrivateScope, Public, Static, HideBySig
    get_MaxOpaqueLengthInternal(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.AccessControl.ObjectAceFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.ObjectAceFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ObjectAceFlags ObjectAceTypePresent = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ObjectAceFlags InheritedObjectAceTypePresent = 2 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.ObjectAce: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.QualifiedAce
    Void .ctor(System.Security.AccessControl.AceFlags, System.Security.AccessControl.AceQualifier, Int32, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid, Boolean, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 AccessMaskWithObjectType : Assembly, Static, InitOnly
  Properties:
    System.Security.AccessControl.ObjectAceFlags ObjectAceFlags 'get set' : 
    System.Guid ObjectAceType 'get set' : 
    System.Guid InheritedObjectAceType 'get set' : 
    Int32 BinaryLength 'get ' : 
    Int32 MaxOpaqueLengthInternal 'get ' : 
  Methods:
    ObjectTypesMatch(ObjectAceFlags, Guid): PrivateScope, Assembly, HideBySig
    InheritedObjectTypesMatch(ObjectAceFlags, Guid): PrivateScope, Assembly, HideBySig
    ParseBinaryForm(Byte[], Int32, AceQualifier&(Out), Int32&(Out), SecurityIdentifier&(Out), ObjectAceFlags&(Out), Guid&(Out), Guid&(Out), Boolean&(Out), Byte[]&(Out)): PrivateScope, Assembly, Static, HideBySig
    get_ObjectAceFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectAceFlags(ObjectAceFlags): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectAceType(): PrivateScope, Public, HideBySig, SpecialName
    set_ObjectAceType(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_InheritedObjectAceType(): PrivateScope, Public, HideBySig, SpecialName
    set_InheritedObjectAceType(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    MaxOpaqueLength(Boolean): PrivateScope, Public, Static, HideBySig
    get_MaxOpaqueLengthInternal(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Class System.Security.AccessControl.AceEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Security.AccessControl.GenericAcl): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Security.AccessControl.GenericAce Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.AccessControl.GenericAcl: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Byte AclRevision : Public, Static, InitOnly
    Byte AclRevisionDS : Public, Static, InitOnly
    Int32 MaxBinaryLength : Public, Static, InitOnly
    Int32 HeaderLength = 8 : Assembly, Static, Literal, HasDefault
  Properties:
    Byte Revision 'get ' : 
    Int32 BinaryLength 'get ' : 
    System.Security.AccessControl.GenericAce Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_Revision(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, GenericAce): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyTo(GenericAce[], Int32): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.RawAcl: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.GenericAcl
    Void .ctor(Byte, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte Revision 'get ' : 
    Int32 Count 'get ' : 
    Int32 BinaryLength 'get ' : 
    System.Security.AccessControl.GenericAce Item [Int32] 'get set' : 
  Methods:
    SetBinaryForm(Byte[], Int32): PrivateScope, Assembly, HideBySig
    get_Revision(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, GenericAce): PrivateScope, Public, Virtual, HideBySig, SpecialName
    InsertAce(Int32, GenericAce): PrivateScope, Public, HideBySig
    RemoveAce(Int32): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.CommonAcl: AutoLayout, AnsiClass, Class, Public, Abstract
  :System.Security.AccessControl.GenericAcl
    Void .ctor(Boolean, Boolean, Byte, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawAcl, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.RawAcl RawAcl 'get ' : 
    Byte Revision 'get ' : 
    Int32 Count 'get ' : 
    Int32 BinaryLength 'get ' : 
    Boolean IsCanonical 'get ' : 
    Boolean IsContainer 'get ' : 
    Boolean IsDS 'get ' : 
    System.Security.AccessControl.GenericAce Item [Int32] 'get set' : 
  Methods:
    get_RawAcl(): PrivateScope, Assembly, HideBySig, SpecialName
    CheckAccessType(AccessControlType): PrivateScope, Assembly, HideBySig
    CheckFlags(InheritanceFlags, PropagationFlags): PrivateScope, Assembly, HideBySig
    AddQualifiedAce(SecurityIdentifier, AceQualifier, Int32, AceFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Assembly, HideBySig
    SetQualifiedAce(SecurityIdentifier, AceQualifier, Int32, AceFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Assembly, HideBySig
    RemoveQualifiedAces(SecurityIdentifier, AceQualifier, Int32, AceFlags, Boolean, ObjectAceFlags, Guid, Guid): PrivateScope, Assembly, HideBySig
    RemoveQualifiedAcesSpecific(SecurityIdentifier, AceQualifier, Int32, AceFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Assembly, HideBySig
    OnAclModificationTried(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_Revision(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_IsCanonical(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContainer(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDS(): PrivateScope, Public, HideBySig, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Item(Int32, GenericAce): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    RemoveInheritedAces(): PrivateScope, Public, HideBySig
    Purge(SecurityIdentifier): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.SystemAcl: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.CommonAcl
    Void .ctor(Boolean, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Byte, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawAcl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawAcl, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    AddAudit(SecurityIdentifier, ObjectAuditRule): PrivateScope, Public, HideBySig
    AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    SetAudit(SecurityIdentifier, ObjectAuditRule): PrivateScope, Public, HideBySig
    SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    RemoveAudit(SecurityIdentifier, ObjectAuditRule): PrivateScope, Public, HideBySig
    RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.DiscretionaryAcl: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.CommonAcl
    Void .ctor(Boolean, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Byte, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawAcl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawAcl, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean EveryOneFullAccessForNullDacl 'get set' : 
  Methods:
    AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags): PrivateScope, Public, HideBySig
    AddAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule): PrivateScope, Public, HideBySig
    AddAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    SetAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule): PrivateScope, Public, HideBySig
    SetAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    RemoveAccess(AccessControlType, SecurityIdentifier, ObjectAccessRule): PrivateScope, Public, HideBySig
    RemoveAccess(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    RemoveAccessSpecific(AccessControlType, SecurityIdentifier, ObjectAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessSpecific(AccessControlType, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid): PrivateScope, Public, HideBySig
    get_EveryOneFullAccessForNullDacl(): PrivateScope, Assembly, HideBySig, SpecialName
    set_EveryOneFullAccessForNullDacl(Boolean): PrivateScope, Assembly, HideBySig, SpecialName
    OnAclModificationTried(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateAllowEveryoneFullAccess(Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.AccessControl.CryptoKeyRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.CryptoKeyRights ReadData = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights WriteData = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights ReadExtendedAttributes = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights WriteExtendedAttributes = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights ReadAttributes = 128 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights WriteAttributes = 256 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights FullControl = 2032027 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights GenericAll = 268435456 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights GenericExecute = 536870912 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights GenericWrite = 1073741824 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.CryptoKeyRights GenericRead = -2147483648 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.CryptoKeyAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.CryptoKeyRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.CryptoKeyRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.CryptoKeyRights CryptoKeyRights 'get ' : 
  Methods:
    get_CryptoKeyRights(): PrivateScope, Public, HideBySig, SpecialName
    RightsFromAccessMask(Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Security.AccessControl.CryptoKeyAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.CryptoKeyRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.CryptoKeyRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.CryptoKeyRights CryptoKeyRights 'get ' : 
  Methods:
    get_CryptoKeyRights(): PrivateScope, Public, HideBySig, SpecialName
    RightsFromAccessMask(Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Security.AccessControl.CryptoKeySecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.AccessControl.CommonSecurityDescriptor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
    System.Security.AccessControl.AccessControlSections ChangedAccessControlSections 'get ' : 
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Final, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Final, Virtual, HideBySig
    AddAccessRule(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleAll(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(CryptoKeyAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(CryptoKeyAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(CryptoKeyAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(CryptoKeyAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(CryptoKeyAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(CryptoKeyAuditRule): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ChangedAccessControlSections(): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.Security.AccessControl.EventWaitHandleRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.EventWaitHandleRights Modify = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.EventWaitHandleRights FullControl = 2031619 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.EventWaitHandleAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights 'get ' : 
  Methods:
    get_EventWaitHandleRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.EventWaitHandleAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.EventWaitHandleRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights 'get ' : 
  Methods:
    get_EventWaitHandleRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.EventWaitHandleSecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafeWaitHandle, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Virtual, HideBySig
    GetAccessControlSectionsFromChanges(): PrivateScope, Assembly, HideBySig
    Persist(SafeWaitHandle): PrivateScope, Assembly, HideBySig
    AddAccessRule(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleAll(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(EventWaitHandleAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(EventWaitHandleAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(EventWaitHandleAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(EventWaitHandleAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(EventWaitHandleAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(EventWaitHandleAuditRule): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Security.AccessControl.FileSystemRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.FileSystemRights ReadData = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ListDirectory = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights WriteData = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights CreateFiles = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights AppendData = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights CreateDirectories = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ReadExtendedAttributes = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights WriteExtendedAttributes = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ExecuteFile = 32 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Traverse = 32 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights DeleteSubdirectoriesAndFiles = 64 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ReadAttributes = 128 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights WriteAttributes = 256 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights FullControl = 2032127 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Read = 131209 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights ReadAndExecute = 131241 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Write = 278 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.FileSystemRights Modify = 197055 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.FileSystemAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.FileSystemRights FileSystemRights 'get ' : 
  Methods:
    get_FileSystemRights(): PrivateScope, Public, HideBySig, SpecialName
    AccessMaskFromRights(FileSystemRights, AccessControlType): PrivateScope, Assembly, Static, HideBySig
    RightsFromAccessMask(Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Security.AccessControl.FileSystemAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.FileSystemRights FileSystemRights 'get ' : 
  Methods:
    get_FileSystemRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.FileSystemSecurity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String, System.Security.AccessControl.AccessControlSections, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Microsoft.Win32.SafeHandles.SafeFileHandle, System.Security.AccessControl.AccessControlSections, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Final, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Final, Virtual, HideBySig
    GetAccessControlSectionsFromChanges(): PrivateScope, Assembly, HideBySig
    Persist(String): PrivateScope, Assembly, HideBySig, HasSecurity
    Persist(SafeFileHandle, String): PrivateScope, Assembly, HideBySig, HasSecurity
    AddAccessRule(FileSystemAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(FileSystemAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(FileSystemAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(FileSystemAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleAll(FileSystemAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(FileSystemAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(FileSystemAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(FileSystemAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(FileSystemAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(FileSystemAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(FileSystemAuditRule): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Security.AccessControl.FileSecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.FileSystemSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(Microsoft.Win32.SafeHandles.SafeFileHandle, System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName, HasSecurity
Class System.Security.AccessControl.DirectorySecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.FileSystemSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
Struct System.Security.AccessControl.MutexRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.MutexRights Modify = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.MutexRights FullControl = 2031617 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.MutexAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.MutexRights MutexRights 'get ' : 
  Methods:
    get_MutexRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.MutexAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.MutexRights MutexRights 'get ' : 
  Methods:
    get_MutexRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.MutexSecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafeWaitHandle, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AddAccessRule(MutexAccessRule): PrivateScope, Public, HideBySig
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Virtual, HideBySig
    GetAccessControlSectionsFromChanges(): PrivateScope, Assembly, HideBySig
    Persist(SafeWaitHandle): PrivateScope, Assembly, HideBySig
    SetAccessRule(MutexAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(MutexAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(MutexAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleAll(MutexAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(MutexAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(MutexAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(MutexAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(MutexAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(MutexAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(MutexAuditRule): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Security.AccessControl.NativeObjectSecurity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.CommonObjectSecurity
    Void .ctor(System.Security.AccessControl.ResourceType, System.Security.AccessControl.CommonSecurityDescriptor): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.AccessControl.ResourceType, System.Security.AccessControl.CommonSecurityDescriptor, ExceptionFromErrorCode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct System.Security.AccessControl.AccessControlModification: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AccessControlModification Add = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlModification Set = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlModification Reset = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlModification Remove = 3 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlModification RemoveAll = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlModification RemoveSpecific = 5 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.ObjectSecurity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    System.Security.AccessControl.CommonSecurityDescriptor _securityDescriptor : Assembly
  Properties:
    Boolean AreAccessRulesProtected 'get ' : 
    Boolean AreAuditRulesProtected 'get ' : 
    Boolean AreAccessRulesCanonical 'get ' : 
    Boolean AreAuditRulesCanonical 'get ' : 
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    GetOwner(Type): PrivateScope, Public, HideBySig
    SetOwner(IdentityReference): PrivateScope, Public, HideBySig
    GetGroup(Type): PrivateScope, Public, HideBySig
    SetGroup(IdentityReference): PrivateScope, Public, HideBySig
    PurgeAccessRules(IdentityReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PurgeAuditRules(IdentityReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AreAccessRulesProtected(): PrivateScope, Public, HideBySig, SpecialName
    SetAccessRuleProtection(Boolean, Boolean): PrivateScope, Public, HideBySig
    get_AreAuditRulesProtected(): PrivateScope, Public, HideBySig, SpecialName
    SetAuditRuleProtection(Boolean, Boolean): PrivateScope, Public, HideBySig
    get_AreAccessRulesCanonical(): PrivateScope, Public, HideBySig, SpecialName
    get_AreAuditRulesCanonical(): PrivateScope, Public, HideBySig, SpecialName
    IsSddlConversionSupported(): PrivateScope, Public, Static, HideBySig
    GetSecurityDescriptorSddlForm(AccessControlSections): PrivateScope, Public, HideBySig
    SetSecurityDescriptorSddlForm(String): PrivateScope, Public, HideBySig
    SetSecurityDescriptorSddlForm(String, AccessControlSections): PrivateScope, Public, HideBySig
    GetSecurityDescriptorBinaryForm(): PrivateScope, Public, HideBySig
    SetSecurityDescriptorBinaryForm(Byte[]): PrivateScope, Public, HideBySig
    SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ModifyAccessRule(AccessControlModification, AccessRule, Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ModifyAuditRule(AccessControlModification, AuditRule, Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.AccessControl.AccessRule`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, T, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Rights   'get ' : 
  Methods:
    get_Rights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.AuditRule`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, T, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, T, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    T Rights   'get ' : 
  Methods:
    get_Rights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.ObjectSecurity`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.Security.AccessControl.NativeObjectSecurity
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Virtual, HideBySig
    AddAccessRule(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAccessRule(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetAccessRule(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAccessRule(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAccessRuleAll(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAccessRuleSpecific(AccessRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddAuditRule(AuditRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAuditRule(AuditRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAuditRule(AuditRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAuditRuleAll(AuditRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAuditRuleSpecific(AuditRule`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Security.AccessControl.CommonObjectSecurity: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.ObjectSecurity
    Void .ctor(System.Security.AccessControl.CommonSecurityDescriptor): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAccessRules(Boolean, Boolean, Type): PrivateScope, Public, HideBySig
    GetAuditRules(Boolean, Boolean, Type): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.DirectoryObjectSecurity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.ObjectSecurity
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAccessRules(Boolean, Boolean, Type): PrivateScope, Public, HideBySig
    GetAuditRules(Boolean, Boolean, Type): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.Privilege: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String CreateToken = SeCreateTokenPrivilege : Public, Static, Literal, HasDefault
    System.String AssignPrimaryToken = SeAssignPrimaryTokenPrivilege : Public, Static, Literal, HasDefault
    System.String LockMemory = SeLockMemoryPrivilege : Public, Static, Literal, HasDefault
    System.String IncreaseQuota = SeIncreaseQuotaPrivilege : Public, Static, Literal, HasDefault
    System.String UnsolicitedInput = SeUnsolicitedInputPrivilege : Public, Static, Literal, HasDefault
    System.String MachineAccount = SeMachineAccountPrivilege : Public, Static, Literal, HasDefault
    System.String TrustedComputingBase = SeTcbPrivilege : Public, Static, Literal, HasDefault
    System.String Security = SeSecurityPrivilege : Public, Static, Literal, HasDefault
    System.String TakeOwnership = SeTakeOwnershipPrivilege : Public, Static, Literal, HasDefault
    System.String LoadDriver = SeLoadDriverPrivilege : Public, Static, Literal, HasDefault
    System.String SystemProfile = SeSystemProfilePrivilege : Public, Static, Literal, HasDefault
    System.String SystemTime = SeSystemtimePrivilege : Public, Static, Literal, HasDefault
    System.String ProfileSingleProcess = SeProfileSingleProcessPrivilege : Public, Static, Literal, HasDefault
    System.String IncreaseBasePriority = SeIncreaseBasePriorityPrivilege : Public, Static, Literal, HasDefault
    System.String CreatePageFile = SeCreatePagefilePrivilege : Public, Static, Literal, HasDefault
    System.String CreatePermanent = SeCreatePermanentPrivilege : Public, Static, Literal, HasDefault
    System.String Backup = SeBackupPrivilege : Public, Static, Literal, HasDefault
    System.String Restore = SeRestorePrivilege : Public, Static, Literal, HasDefault
    System.String Shutdown = SeShutdownPrivilege : Public, Static, Literal, HasDefault
    System.String Debug = SeDebugPrivilege : Public, Static, Literal, HasDefault
    System.String Audit = SeAuditPrivilege : Public, Static, Literal, HasDefault
    System.String SystemEnvironment = SeSystemEnvironmentPrivilege : Public, Static, Literal, HasDefault
    System.String ChangeNotify = SeChangeNotifyPrivilege : Public, Static, Literal, HasDefault
    System.String RemoteShutdown = SeRemoteShutdownPrivilege : Public, Static, Literal, HasDefault
    System.String Undock = SeUndockPrivilege : Public, Static, Literal, HasDefault
    System.String SyncAgent = SeSyncAgentPrivilege : Public, Static, Literal, HasDefault
    System.String EnableDelegation = SeEnableDelegationPrivilege : Public, Static, Literal, HasDefault
    System.String ManageVolume = SeManageVolumePrivilege : Public, Static, Literal, HasDefault
    System.String Impersonate = SeImpersonatePrivilege : Public, Static, Literal, HasDefault
    System.String CreateGlobal = SeCreateGlobalPrivilege : Public, Static, Literal, HasDefault
    System.String TrustedCredentialManagerAccess = SeTrustedCredManAccessPrivilege : Public, Static, Literal, HasDefault
    System.String ReserveProcessor = SeReserveProcessorPrivilege : Public, Static, Literal, HasDefault
  Properties:
    Boolean NeedToRevert 'get ' : 
  Methods:
    Enable(): PrivateScope, Public, HideBySig
    get_NeedToRevert(): PrivateScope, Public, HideBySig, SpecialName
    Revert(): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.PrivilegeNotHeldException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.UnauthorizedAccessException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String PrivilegeName 'get ' : 
  Methods:
    get_PrivilegeName(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.AccessControl.RegistryRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.RegistryRights QueryValues = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights SetValue = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights CreateSubKey = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights EnumerateSubKeys = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights Notify = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights CreateLink = 32 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights ExecuteKey = 131097 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights ReadKey = 131097 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights WriteKey = 131078 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.RegistryRights FullControl = 983103 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.RegistryAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.RegistryRights RegistryRights 'get ' : 
  Methods:
    get_RegistryRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.RegistryAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.AccessControl.RegistryRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.RegistryRights RegistryRights 'get ' : 
  Methods:
    get_RegistryRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.RegistrySecurity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafeRegistryHandle, System.String, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Virtual, HideBySig
    GetAccessControlSectionsFromChanges(): PrivateScope, Assembly, HideBySig
    Persist(SafeRegistryHandle, String): PrivateScope, Assembly, HideBySig, HasSecurity
    AddAccessRule(RegistryAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(RegistryAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(RegistryAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(RegistryAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleAll(RegistryAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(RegistryAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(RegistryAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(RegistryAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(RegistryAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(RegistryAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(RegistryAuditRule): PrivateScope, Public, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Security.AccessControl.AccessControlType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.AccessControlType Allow = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.AccessControlType Deny = 1 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.AuthorizationRule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Security.Principal.IdentityReference IdentityReference 'get ' : 
    Boolean IsInherited 'get ' : 
    System.Security.AccessControl.InheritanceFlags InheritanceFlags 'get ' : 
    System.Security.AccessControl.PropagationFlags PropagationFlags 'get ' : 
  Methods:
    get_IdentityReference(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInherited(): PrivateScope, Public, HideBySig, SpecialName
    get_InheritanceFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_PropagationFlags(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.AccessRule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.AuthorizationRule
  Properties:
    System.Security.AccessControl.AccessControlType AccessControlType 'get ' : 
  Methods:
    get_AccessControlType(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.ObjectAccessRule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
  Properties:
    System.Guid ObjectType 'get ' : 
    System.Guid InheritedObjectType 'get ' : 
    System.Security.AccessControl.ObjectAceFlags ObjectFlags 'get ' : 
  Methods:
    get_ObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_InheritedObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectFlags(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.AuditRule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.AuthorizationRule
  Properties:
    System.Security.AccessControl.AuditFlags AuditFlags 'get ' : 
  Methods:
    get_AuditFlags(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.ObjectAuditRule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
  Properties:
    System.Guid ObjectType 'get ' : 
    System.Guid InheritedObjectType 'get ' : 
    System.Security.AccessControl.ObjectAceFlags ObjectFlags 'get ' : 
  Methods:
    get_ObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_InheritedObjectType(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectFlags(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.AccessControl.AuthorizationRuleCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.ReadOnlyCollectionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.AuthorizationRule Item [Int32] 'get ' : 
  Methods:
    AddRule(AuthorizationRule): PrivateScope, Public, HideBySig
    CopyTo(AuthorizationRule[], Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct System.Security.AccessControl.ControlFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.AccessControl.ControlFlags None = 0 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags OwnerDefaulted = 1 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags GroupDefaulted = 2 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclPresent = 4 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclDefaulted = 8 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SystemAclPresent = 16 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SystemAclDefaulted = 32 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclUntrusted = 64 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags ServerSecurity = 128 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInheritRequired = 256 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SystemAclAutoInheritRequired = 512 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclAutoInherited = 1024 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SystemAclAutoInherited = 2048 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags DiscretionaryAclProtected = 4096 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SystemAclProtected = 8192 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags RMControlValid = 16384 : Public, Static, Literal, HasDefault
    System.Security.AccessControl.ControlFlags SelfRelative = 32768 : Public, Static, Literal, HasDefault
Class System.Security.AccessControl.GenericSecurityDescriptor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    Int32 HeaderLength = 20 : Assembly, Static, Literal, HasDefault
    Int32 OwnerFoundAt = 4 : Assembly, Static, Literal, HasDefault
    Int32 GroupFoundAt = 8 : Assembly, Static, Literal, HasDefault
    Int32 SaclFoundAt = 12 : Assembly, Static, Literal, HasDefault
    Int32 DaclFoundAt = 16 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Security.AccessControl.GenericAcl GenericSacl 'get ' : 
    System.Security.AccessControl.GenericAcl GenericDacl 'get ' : 
    Byte Revision 'get ' : 
    System.Security.AccessControl.ControlFlags ControlFlags 'get ' : 
    System.Security.Principal.SecurityIdentifier Owner 'get set' : 
    System.Security.Principal.SecurityIdentifier Group 'get set' : 
    Int32 BinaryLength 'get ' : 
  Methods:
    get_BinaryLength(): PrivateScope, Public, HideBySig, SpecialName
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, HideBySig
    UnmarshalInt(Byte[], Int32): PrivateScope, Assembly, Static, HideBySig
    get_GenericSacl(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_GenericDacl(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    IsSddlConversionSupported(): PrivateScope, Public, Static, HideBySig
    get_Revision(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ControlFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Owner(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Owner(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Group(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetSddlForm(AccessControlSections): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.RawSecurityDescriptor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.GenericSecurityDescriptor
    Void .ctor(System.Security.AccessControl.ControlFlags, System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.RawAcl, System.Security.AccessControl.RawAcl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.GenericAcl GenericSacl 'get ' : 
    System.Security.AccessControl.GenericAcl GenericDacl 'get ' : 
    System.Security.AccessControl.ControlFlags ControlFlags 'get ' : 
    System.Security.Principal.SecurityIdentifier Owner 'get set' : 
    System.Security.Principal.SecurityIdentifier Group 'get set' : 
    System.Security.AccessControl.RawAcl SystemAcl 'get set' : 
    System.Security.AccessControl.RawAcl DiscretionaryAcl 'get set' : 
    Byte ResourceManagerControl 'get set' : 
  Methods:
    get_GenericSacl(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_GenericDacl(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_ControlFlags(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Owner(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Owner(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Group(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SystemAcl(): PrivateScope, Public, HideBySig, SpecialName
    set_SystemAcl(RawAcl): PrivateScope, Public, HideBySig, SpecialName
    get_DiscretionaryAcl(): PrivateScope, Public, HideBySig, SpecialName
    set_DiscretionaryAcl(RawAcl): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceManagerControl(): PrivateScope, Public, HideBySig, SpecialName
    set_ResourceManagerControl(Byte): PrivateScope, Public, HideBySig, SpecialName
    SetFlags(ControlFlags): PrivateScope, Public, HideBySig
Class System.Security.AccessControl.CommonSecurityDescriptor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.AccessControl.GenericSecurityDescriptor
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.ControlFlags, System.Security.Principal.SecurityIdentifier, System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.SystemAcl, System.Security.AccessControl.DiscretionaryAcl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawSecurityDescriptor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.Security.AccessControl.RawSecurityDescriptor, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.AccessControl.GenericAcl GenericSacl 'get ' : 
    System.Security.AccessControl.GenericAcl GenericDacl 'get ' : 
    Boolean IsContainer 'get ' : 
    Boolean IsDS 'get ' : 
    System.Security.AccessControl.ControlFlags ControlFlags 'get ' : 
    System.Security.Principal.SecurityIdentifier Owner 'get set' : 
    System.Security.Principal.SecurityIdentifier Group 'get set' : 
    System.Security.AccessControl.SystemAcl SystemAcl 'get set' : 
    System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl 'get set' : 
    Boolean IsSystemAclCanonical 'get ' : 
    Boolean IsDiscretionaryAclCanonical 'get ' : 
    Boolean IsSystemAclPresent 'get ' : 
    Boolean IsDiscretionaryAclPresent 'get ' : 
  Methods:
    get_GenericSacl(): PrivateScope, Assembly, Final, Virtual, HideBySig, SpecialName
    get_GenericDacl(): PrivateScope, Assembly, Final, Virtual, HideBySig, SpecialName
    get_IsContainer(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDS(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFlags(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Owner(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Owner(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Group(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Group(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SystemAcl(): PrivateScope, Public, HideBySig, SpecialName
    set_SystemAcl(SystemAcl): PrivateScope, Public, HideBySig, SpecialName
    get_DiscretionaryAcl(): PrivateScope, Public, HideBySig, SpecialName
    set_DiscretionaryAcl(DiscretionaryAcl): PrivateScope, Public, HideBySig, SpecialName
    get_IsSystemAclCanonical(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDiscretionaryAclCanonical(): PrivateScope, Public, HideBySig, SpecialName
    SetSystemAclProtection(Boolean, Boolean): PrivateScope, Public, HideBySig
    SetDiscretionaryAclProtection(Boolean, Boolean): PrivateScope, Public, HideBySig
    PurgeAccessControl(SecurityIdentifier): PrivateScope, Public, HideBySig
    PurgeAudit(SecurityIdentifier): PrivateScope, Public, HideBySig
    AddDiscretionaryAcl(Byte, Int32): PrivateScope, Public, HideBySig
    AddSystemAcl(Byte, Int32): PrivateScope, Public, HideBySig
    UpdateControlFlags(ControlFlags, ControlFlags): PrivateScope, Assembly, HideBySig
    AddControlFlags(ControlFlags): PrivateScope, Assembly, HideBySig
    RemoveControlFlags(ControlFlags): PrivateScope, Assembly, HideBySig
    get_IsSystemAclPresent(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsDiscretionaryAclPresent(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Security.AccessControl.Win32: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 TRUE = 1 : Assembly, Static, Literal, HasDefault
  Methods:
    ConvertSdToSddl(Byte[], Int32, SecurityInfos, String&(Out)): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    GetSecurityInfo(ResourceType, String, SafeHandle, AccessControlSections, RawSecurityDescriptor&(Out)): PrivateScope, Assembly, Static, HideBySig
    SetSecurityInfo(ResourceType, String, SafeHandle, SecurityInfos, SecurityIdentifier, SecurityIdentifier, GenericAcl, GenericAcl): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.CapiNative: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AcquireCsp(String, String, ProviderType, CryptAcquireContextFlags): PrivateScope, Assembly, Static, HideBySig
    CreateHashAlgorithm(SafeCspHandle, AlgorithmID): PrivateScope, Assembly, Static, HideBySig
    GenerateRandomBytes(SafeCspHandle, Byte[]): PrivateScope, Assembly, Static, HideBySig
    GenerateRandomBytes(SafeCspHandle, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetHashPropertyInt32(SafeCspHashHandle, HashProperty): PrivateScope, Assembly, Static, HideBySig
    GetHashProperty(SafeCspHashHandle, HashProperty): PrivateScope, Assembly, Static, HideBySig
    GetKeyPropertyInt32(SafeCspKeyHandle, KeyProperty): PrivateScope, Assembly, Static, HideBySig
    GetKeyProperty(SafeCspKeyHandle, KeyProperty): PrivateScope, Assembly, Static, HideBySig
    SetHashProperty(SafeCspHashHandle, HashProperty, Byte[]): PrivateScope, Assembly, Static, HideBySig
    VerifySignature(SafeCspHandle, SafeCspKeyHandle, AlgorithmID, AlgorithmID, Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.SafeCspHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class System.Security.Cryptography.SafeCspHashHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class System.Security.Cryptography.SafeCspKeyHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct System.Security.Cryptography.CipherMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CipherMode CBC = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CipherMode ECB = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CipherMode OFB = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CipherMode CFB = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CipherMode CTS = 5 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.PaddingMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.PaddingMode None = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.PaddingMode PKCS7 = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.PaddingMode Zeros = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.PaddingMode ANSIX923 = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.PaddingMode ISO10126 = 5 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.KeySizes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MinSize 'get ' : 
    Int32 MaxSize 'get ' : 
    Int32 SkipSize 'get ' : 
  Methods:
    get_MinSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSize(): PrivateScope, Public, HideBySig, SpecialName
    get_SkipSize(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.CryptographicException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.CryptographicUnexpectedOperationException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Security.Cryptography.CryptographicException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface System.Security.Cryptography.ICryptoTransform: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    get_InputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.RandomNumberGenerator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBytes(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNonZeroBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Cryptography.RNGCryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.RandomNumberGenerator
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig
    GetNonZeroBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.Aes: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.AsymmetricAlgorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int32 KeySize 'get set' : 
    System.Security.Cryptography.KeySizes[] LegalKeySizes 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
    System.String KeyExchangeAlgorithm 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LegalKeySizes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Cryptography.AsymmetricKeyExchangeDeformatter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.String Parameters 'get set' : 
  Methods:
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Parameters(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DecryptKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.AsymmetricKeyExchangeFormatter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.String Parameters 'get ' : 
  Methods:
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateKeyExchange(Byte[], Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.AsymmetricSignatureDeformatter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifySignature(HashAlgorithm, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifySignature(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.AsymmetricSignatureFormatter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateSignature(HashAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Cryptography.FromBase64TransformMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.FromBase64TransformMode IgnoreWhiteSpaces = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.FromBase64TransformMode DoNotIgnoreWhiteSpaces = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.ToBase64Transform: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICryptoTransform
    System.IDisposable
  Properties:
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    get_InputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.FromBase64Transform: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.FromBase64TransformMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICryptoTransform
    System.IDisposable
  Properties:
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    get_InputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
Struct System.Security.Cryptography.CryptoAPITransformMode: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CryptoAPITransformMode Encrypt = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CryptoAPITransformMode Decrypt = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CryptoAPITransform: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32[], System.Object[], Byte[], System.Security.Cryptography.PaddingMode, System.Security.Cryptography.CipherMode, Int32, Int32, Boolean, System.Security.Cryptography.CryptoAPITransformMode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICryptoTransform
    System.IDisposable
  Properties:
    IntPtr KeyHandle 'get ' : 
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    get_KeyHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_InputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Security.Cryptography.CspProviderFlags: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CspProviderFlags NoFlags = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseMachineKeyStore = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseDefaultKeyContainer = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseNonExportableKey = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseExistingKey = 8 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseArchivableKey = 16 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags UseUserProtectedKey = 32 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags NoPrompt = 64 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspProviderFlags CreateEphemeralKey = 128 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CspParameters: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, System.String, System.Security.AccessControl.CryptoKeySecurity, System.Security.SecureString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, System.String, System.Security.AccessControl.CryptoKeySecurity, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.String, System.String, System.Security.Cryptography.CspProviderFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 ProviderType : Public
    System.String ProviderName : Public
    System.String KeyContainerName : Public
    Int32 KeyNumber : Public
  Properties:
    System.Security.Cryptography.CspProviderFlags Flags 'get set' : 
    System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity 'get set' : 
    System.Security.SecureString KeyPassword 'get set' : 
    IntPtr ParentWindowHandle 'get set' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(CspProviderFlags): PrivateScope, Public, HideBySig, SpecialName
    get_CryptoKeySecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_CryptoKeySecurity(CryptoKeySecurity): PrivateScope, Public, HideBySig, SpecialName
    get_KeyPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyPassword(SecureString): PrivateScope, Public, HideBySig, SpecialName
    get_ParentWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.CryptoConfig: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllowOnlyFipsAlgorithms 'get ' : 
  Methods:
    get_AllowOnlyFipsAlgorithms(): PrivateScope, Public, Static, HideBySig, SpecialName
    AddAlgorithm(Type, String[]): PrivateScope, Public, Static, HideBySig
    CreateFromName(String, Object[]): PrivateScope, Public, Static, HideBySig
    CreateFromName(String): PrivateScope, Public, Static, HideBySig
    AddOID(String, String[]): PrivateScope, Public, Static, HideBySig
    MapNameToOID(String): PrivateScope, Public, Static, HideBySig
    MapNameToOID(String, OidGroup): PrivateScope, Assembly, Static, HideBySig
    EncodeOID(String): PrivateScope, Public, Static, HideBySig
Struct System.Security.Cryptography.CryptoStreamMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CryptoStreamMode Read = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CryptoStreamMode Write = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CryptoStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, System.Security.Cryptography.ICryptoTransform, System.Security.Cryptography.CryptoStreamMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Security.Cryptography.ICryptoTransform, System.Security.Cryptography.CryptoStreamMode, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean HasFlushedFinalBlock 'get ' : 
  Methods:
    FlushFinalBlock(): PrivateScope, Public, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HasFlushedFinalBlock(): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    FlushAsync(CancellationToken): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteAsync(Byte[], Int32, Int32, CancellationToken): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.DES: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Properties:
    Byte[] Key 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    IsWeakKey(Byte[]): PrivateScope, Public, Static, HideBySig
    IsSemiWeakKey(Byte[]): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.DESCryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.DES
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.DeriveBytes: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    GetBytes(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Security.Cryptography.DSAParameters: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] P : Public
    Byte[] Q : Public
    Byte[] G : Public
    Byte[] Y : Public
    Byte[] J : Public
    Byte[] X : Public, NotSerialized
    Byte[] Seed : Public
    Int32 Counter : Public
Class System.Security.Cryptography.DSA: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    Create(Int32): PrivateScope, Public, Static, HideBySig
    Create(DSAParameters): PrivateScope, Public, Static, HideBySig
    CreateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifySignature(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SignData(Byte[], HashAlgorithmName): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32, HashAlgorithmName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SignData(Stream, HashAlgorithmName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyData(Byte[], Byte[], HashAlgorithmName): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyData(Stream, Byte[], HashAlgorithmName): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ExportParameters(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportParameters(DSAParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HashAlgorithmNameNullOrEmpty(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.DSACspObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] P : Assembly
    Byte[] Q : Assembly
    Byte[] G : Assembly
    Byte[] Y : Assembly
    Byte[] J : Assembly
    Byte[] X : Assembly
    Byte[] Seed : Assembly
    Int32 Counter : Assembly
Class System.Security.Cryptography.DSACryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.DSA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICspAsymmetricAlgorithm
  Properties:
    Boolean PublicOnly 'get ' : 
    System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo 'get ' : 
    Int32 KeySize 'get ' : 
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
    Boolean UseMachineKeyStore 'get set' : 
    Boolean PersistKeyInCsp 'get set' : 
  Methods:
    get_PublicOnly(): PrivateScope, Public, HideBySig, SpecialName
    get_CspKeyContainerInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseMachineKeyStore(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseMachineKeyStore(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PersistKeyInCsp(): PrivateScope, Public, HideBySig, SpecialName
    set_PersistKeyInCsp(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ExportParameters(Boolean): PrivateScope, Public, Virtual, HideBySig
    ExportCspBlob(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ImportParameters(DSAParameters): PrivateScope, Public, Virtual, HideBySig
    ImportCspBlob(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SignData(Stream): PrivateScope, Public, HideBySig
    SignData(Byte[]): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Byte[]): PrivateScope, Public, HideBySig
    CreateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig
    VerifySignature(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    SignHash(Byte[], String): PrivateScope, Public, HideBySig
    VerifyHash(Byte[], String, Byte[]): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.DSASignatureDeformatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricSignatureDeformatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig
    VerifySignature(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.DSASignatureFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricSignatureFormatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig
    CreateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.HMAC: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.KeyedHashAlgorithm
  Fields:
    System.String m_hashName : Assembly
    System.Security.Cryptography.HashAlgorithm m_hash1 : Assembly
    System.Security.Cryptography.HashAlgorithm m_hash2 : Assembly
  Properties:
    Byte[] Key 'get set' : 
    System.String HashName 'get set' : 
  Methods:
    InitializeKey(Byte[]): PrivateScope, Assembly, HideBySig
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_HashName(): PrivateScope, Public, HideBySig, SpecialName
    set_HashName(String): PrivateScope, Public, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    Initialize(): PrivateScope, Public, Virtual, HideBySig
    GetHashAlgorithmWithFipsFallback(Func`1, Func`1): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.HMACMD5: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.HMACRIPEMD160: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.HMACSHA1: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.HMACSHA256: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.HMACSHA384: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ProduceLegacyHmacValues 'get set' : 
  Methods:
    get_ProduceLegacyHmacValues(): PrivateScope, Public, HideBySig, SpecialName
    set_ProduceLegacyHmacValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.HMACSHA512: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.HMAC
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ProduceLegacyHmacValues 'get set' : 
  Methods:
    get_ProduceLegacyHmacValues(): PrivateScope, Public, HideBySig, SpecialName
    set_ProduceLegacyHmacValues(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.HashAlgorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
    System.Security.Cryptography.ICryptoTransform
  Properties:
    Int32 HashSize 'get ' : 
    Byte[] Hash 'get ' : 
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    get_HashSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Hash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    ComputeHash(Stream): PrivateScope, Public, HideBySig
    ComputeHash(Byte[]): PrivateScope, Public, HideBySig
    ComputeHash(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    get_InputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Cryptography.HashAlgorithmName: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.HashAlgorithmName]
  Properties:
    System.Security.Cryptography.HashAlgorithmName MD5 'get ' : 
    System.Security.Cryptography.HashAlgorithmName SHA1 'get ' : 
    System.Security.Cryptography.HashAlgorithmName SHA256 'get ' : 
    System.Security.Cryptography.HashAlgorithmName SHA384 'get ' : 
    System.Security.Cryptography.HashAlgorithmName SHA512 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_MD5(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SHA1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SHA256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SHA384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SHA512(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(HashAlgorithmName): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(HashAlgorithmName, HashAlgorithmName): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(HashAlgorithmName, HashAlgorithmName): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Security.Cryptography.KeyNumber: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.KeyNumber Exchange = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.KeyNumber Signature = 2 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CspKeyContainerInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.CspParameters, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean MachineKeyStore 'get ' : 
    System.String ProviderName 'get ' : 
    Int32 ProviderType 'get ' : 
    System.String KeyContainerName 'get ' : 
    System.String UniqueKeyContainerName 'get ' : 
    System.Security.Cryptography.KeyNumber KeyNumber 'get ' : 
    Boolean Exportable 'get ' : 
    Boolean HardwareDevice 'get ' : 
    Boolean Removable 'get ' : 
    Boolean Accessible 'get ' : 
    Boolean Protected 'get ' : 
    System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity 'get ' : 
    Boolean RandomlyGenerated 'get ' : 
  Methods:
    get_MachineKeyStore(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderType(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyContainerName(): PrivateScope, Public, HideBySig, SpecialName
    get_UniqueKeyContainerName(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_Exportable(): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareDevice(): PrivateScope, Public, HideBySig, SpecialName
    get_Removable(): PrivateScope, Public, HideBySig, SpecialName
    get_Accessible(): PrivateScope, Public, HideBySig, SpecialName
    get_Protected(): PrivateScope, Public, HideBySig, SpecialName
    get_CryptoKeySecurity(): PrivateScope, Public, HideBySig, SpecialName
    get_RandomlyGenerated(): PrivateScope, Public, HideBySig, SpecialName
Interface System.Security.Cryptography.ICspAsymmetricAlgorithm: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo 'get ' : 
  Methods:
    get_CspKeyContainerInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ExportCspBlob(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportCspBlob(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.KeyedHashAlgorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Properties:
    Byte[] Key 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.MACTripleDES: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.KeyedHashAlgorithm
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.PaddingMode Padding 'get set' : 
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
    get_Padding(): PrivateScope, Public, HideBySig, SpecialName
    set_Padding(PaddingMode): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.TailStream: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Buffer 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.MD5: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.MD5CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.MD5
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.MaskGenerationMethod: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Methods:
    GenerateMask(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.PasswordDeriveBytes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.DeriveBytes
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[], System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[], System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], System.String, Int32, System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[], System.String, Int32, System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String HashName 'get set' : 
    Int32 IterationCount 'get set' : 
    Byte[] Salt 'get set' : 
  Methods:
    get_HashName(): PrivateScope, Public, HideBySig, SpecialName
    set_HashName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    set_IterationCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Salt(): PrivateScope, Public, HideBySig, SpecialName
    set_Salt(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    GetBytes(Int32): PrivateScope, Public, Virtual, HideBySig (Obsolete)
    Reset(): PrivateScope, Public, Virtual, HideBySig
    CryptDeriveKey(String, String, Int32, Byte[]): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.PKCS1MaskGenerationMethod: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.MaskGenerationMethod
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String HashName 'get set' : 
  Methods:
    get_HashName(): PrivateScope, Public, HideBySig, SpecialName
    set_HashName(String): PrivateScope, Public, HideBySig, SpecialName
    GenerateMask(Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RC2: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Properties:
    Int32 EffectiveKeySize 'get set' : 
    Int32 KeySize 'get set' : 
  Methods:
    get_EffectiveKeySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EffectiveKeySize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.RC2CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.RC2
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EffectiveKeySize 'get set' : 
    Boolean UseSalt 'get set' : 
  Methods:
    get_EffectiveKeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_EffectiveKeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseSalt(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSalt(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.Rfc2898DeriveBytes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.DeriveBytes
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32, System.Security.Cryptography.HashAlgorithmName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Byte[], Int32, System.Security.Cryptography.HashAlgorithmName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[], Int32, System.Security.Cryptography.HashAlgorithmName): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 IterationCount 'get set' : 
    Byte[] Salt 'get set' : 
  Methods:
    get_IterationCount(): PrivateScope, Public, HideBySig, SpecialName
    set_IterationCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Salt(): PrivateScope, Public, HideBySig, SpecialName
    set_Salt(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    GetBytes(Int32): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    CryptDeriveKey(String, String, Int32, Byte[]): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.RIPEMD160: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.RIPEMD160Managed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.RIPEMD160
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.RSAParameters: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte[] Exponent : Public
    Byte[] Modulus : Public
    Byte[] P : Public, NotSerialized
    Byte[] Q : Public, NotSerialized
    Byte[] DP : Public, NotSerialized
    Byte[] DQ : Public, NotSerialized
    Byte[] InverseQ : Public, NotSerialized
    Byte[] D : Public, NotSerialized
Class System.Security.Cryptography.RSA: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Properties:
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    Create(Int32): PrivateScope, Public, Static, HideBySig
    Create(RSAParameters): PrivateScope, Public, Static, HideBySig
    Encrypt(Byte[], RSAEncryptionPadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Decrypt(Byte[], RSAEncryptionPadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SignHash(Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SignData(Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32, HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SignData(Stream, HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyData(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Int32, Int32, Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VerifyData(Stream, Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, HideBySig
    HashAlgorithmNameNullOrEmpty(): PrivateScope, Assembly, Static, HideBySig
    DecryptValue(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EncryptValue(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ExportParameters(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ImportParameters(RSAParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.RSASignaturePadding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.RSASignaturePadding]
  Properties:
    System.Security.Cryptography.RSASignaturePadding Pkcs1 'get ' : 
    System.Security.Cryptography.RSASignaturePadding Pss 'get ' : 
    System.Security.Cryptography.RSASignaturePaddingMode Mode 'get ' : 
  Methods:
    get_Pkcs1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pss(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(RSASignaturePadding): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(RSASignaturePadding, RSASignaturePadding): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RSASignaturePadding, RSASignaturePadding): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.RSASignaturePaddingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.RSASignaturePaddingMode Pkcs1 = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.RSASignaturePaddingMode Pss = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.RSACspObject: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] Exponent : Assembly
    Byte[] Modulus : Assembly
    Byte[] P : Assembly
    Byte[] Q : Assembly
    Byte[] DP : Assembly
    Byte[] DQ : Assembly
    Byte[] InverseQ : Assembly
    Byte[] D : Assembly
Class System.Security.Cryptography.RSACryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.RSA
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, System.Security.Cryptography.CspParameters): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICspAsymmetricAlgorithm
  Properties:
    Boolean PublicOnly 'get ' : 
    System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo 'get ' : 
    Int32 KeySize 'get ' : 
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
    Boolean UseMachineKeyStore 'get set' : 
    Boolean PersistKeyInCsp 'get set' : 
  Methods:
    get_PublicOnly(): PrivateScope, Public, HideBySig, SpecialName
    get_CspKeyContainerInfo(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseMachineKeyStore(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_UseMachineKeyStore(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PersistKeyInCsp(): PrivateScope, Public, HideBySig, SpecialName
    set_PersistKeyInCsp(Boolean): PrivateScope, Public, HideBySig, SpecialName
    ExportParameters(Boolean): PrivateScope, Public, Virtual, HideBySig
    ExportCspBlob(Boolean): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ImportParameters(RSAParameters): PrivateScope, Public, Virtual, HideBySig
    ImportCspBlob(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SignData(Stream, Object): PrivateScope, Public, HideBySig
    SignData(Byte[], Object): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32, Object): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Object, Byte[]): PrivateScope, Public, HideBySig
    SignHash(Byte[], String): PrivateScope, Public, HideBySig
    SignHash(Byte[], Int32): PrivateScope, Assembly, HideBySig
    VerifyHash(Byte[], String, Byte[]): PrivateScope, Public, HideBySig
    VerifyHash(Byte[], Int32, Byte[]): PrivateScope, Assembly, HideBySig
    Encrypt(Byte[], Boolean): PrivateScope, Public, HideBySig
    Decrypt(Byte[], Boolean): PrivateScope, Public, HideBySig
    DecryptValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    EncryptValue(Byte[]): PrivateScope, Public, Virtual, HideBySig
    Encrypt(Byte[], RSAEncryptionPadding): PrivateScope, Public, Virtual, HideBySig
    Decrypt(Byte[], RSAEncryptionPadding): PrivateScope, Public, Virtual, HideBySig
    SignHash(Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig
    VerifyHash(Byte[], Byte[], HashAlgorithmName, RSASignaturePadding): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAEncryptionPadding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.RSAEncryptionPadding]
  Properties:
    System.Security.Cryptography.RSAEncryptionPadding Pkcs1 'get ' : 
    System.Security.Cryptography.RSAEncryptionPadding OaepSHA1 'get ' : 
    System.Security.Cryptography.RSAEncryptionPadding OaepSHA256 'get ' : 
    System.Security.Cryptography.RSAEncryptionPadding OaepSHA384 'get ' : 
    System.Security.Cryptography.RSAEncryptionPadding OaepSHA512 'get ' : 
    System.Security.Cryptography.RSAEncryptionPaddingMode Mode 'get ' : 
    System.Security.Cryptography.HashAlgorithmName OaepHashAlgorithm 'get ' : 
  Methods:
    get_Pkcs1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OaepSHA1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OaepSHA256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OaepSHA384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OaepSHA512(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateOaep(HashAlgorithmName): PrivateScope, Public, Static, HideBySig
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_OaepHashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(RSAEncryptionPadding): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(RSAEncryptionPadding, RSAEncryptionPadding): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RSAEncryptionPadding, RSAEncryptionPadding): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.RSAEncryptionPaddingMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.RSAEncryptionPaddingMode Pkcs1 = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.RSAEncryptionPaddingMode Oaep = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Parameters 'get set' : 
  Methods:
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parameters(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DecryptKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAOAEPKeyExchangeFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Parameter 'get set' : 
    System.String Parameters 'get ' : 
    System.Security.Cryptography.RandomNumberGenerator Rng 'get set' : 
  Methods:
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Rng(): PrivateScope, Public, HideBySig, SpecialName
    set_Rng(RandomNumberGenerator): PrivateScope, Public, HideBySig, SpecialName
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    CreateKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateKeyExchange(Byte[], Type): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.RandomNumberGenerator RNG 'get set' : 
    System.String Parameters 'get set' : 
  Methods:
    get_RNG(): PrivateScope, Public, HideBySig, SpecialName
    set_RNG(RandomNumberGenerator): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parameters(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    DecryptKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricKeyExchangeFormatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Parameters 'get ' : 
    System.Security.Cryptography.RandomNumberGenerator Rng 'get set' : 
  Methods:
    get_Parameters(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Rng(): PrivateScope, Public, HideBySig, SpecialName
    set_Rng(RandomNumberGenerator): PrivateScope, Public, HideBySig, SpecialName
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    CreateKeyExchange(Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateKeyExchange(Byte[], Type): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAPKCS1SignatureDeformatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricSignatureDeformatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig
    VerifySignature(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.RSAPKCS1SignatureFormatter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricSignatureFormatter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetKey(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig
    SetHashAlgorithm(String): PrivateScope, Public, Virtual, HideBySig
    CreateSignature(Byte[]): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.Rijndael: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.RijndaelManaged: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.Rijndael
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.RijndaelManagedTransformMode: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.RijndaelManagedTransformMode Encrypt = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.RijndaelManagedTransformMode Decrypt = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.RijndaelManagedTransform: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Byte[], System.Security.Cryptography.CipherMode, Byte[], Int32, Int32, System.Security.Cryptography.PaddingMode, System.Security.Cryptography.RijndaelManagedTransformMode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICryptoTransform
    System.IDisposable
  Properties:
    Int32 BlockSizeValue 'get ' : 
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Boolean CanReuseTransform 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    get_BlockSizeValue(): PrivateScope, Public, HideBySig, SpecialName
    get_InputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanReuseTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.SafeProvHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    System.Security.Cryptography.SafeProvHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Security.Cryptography.SafeKeyHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    System.Security.Cryptography.SafeKeyHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Security.Cryptography.SafeHashHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    System.Security.Cryptography.SafeHashHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Security.Cryptography.SHA1: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.SHA1CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.SHA1
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA1Managed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.SHA1
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA256: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.SHA256Managed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.SHA256
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA384: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.SHA384Managed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.SHA384
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA512: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.HashAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.SHA512Managed: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.SHA512
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SignatureDescription: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String KeyAlgorithm 'get set' : 
    System.String DigestAlgorithm 'get set' : 
    System.String FormatterAlgorithm 'get set' : 
    System.String DeformatterAlgorithm 'get set' : 
  Methods:
    get_KeyAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyAlgorithm(String): PrivateScope, Public, HideBySig, SpecialName
    get_DigestAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_DigestAlgorithm(String): PrivateScope, Public, HideBySig, SpecialName
    get_FormatterAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_FormatterAlgorithm(String): PrivateScope, Public, HideBySig, SpecialName
    get_DeformatterAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_DeformatterAlgorithm(String): PrivateScope, Public, HideBySig, SpecialName
    CreateDeformatter(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFormatter(AsymmetricAlgorithm): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDigest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Cryptography.RSAPKCS1SignatureDescription: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SignatureDescription
  Methods:
    CreateDeformatter(AsymmetricAlgorithm): PrivateScope, Public, Final, Virtual, HideBySig
    CreateFormatter(AsymmetricAlgorithm): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.Cryptography.RSAPKCS1SignatureDescription
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.RSAPKCS1SHA256SignatureDescription: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.Cryptography.RSAPKCS1SignatureDescription
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.RSAPKCS1SHA384SignatureDescription: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.Cryptography.RSAPKCS1SignatureDescription
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.RSAPKCS1SHA512SignatureDescription: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.Cryptography.RSAPKCS1SignatureDescription
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.DSASignatureDescription: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Security.Cryptography.SignatureDescription
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.SymmetricAlgorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int32 BlockSize 'get set' : 
    Int32 FeedbackSize 'get set' : 
    Byte[] IV  'get set' : 
    Byte[] Key 'get set' : 
    System.Security.Cryptography.KeySizes[] LegalBlockSizes 'get ' : 
    System.Security.Cryptography.KeySizes[] LegalKeySizes 'get ' : 
    Int32 KeySize 'get set' : 
    System.Security.Cryptography.CipherMode Mode 'get set' : 
    System.Security.Cryptography.PaddingMode Padding 'get set' : 
  Methods:
    ValidKeySize(Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, HideBySig
    get_BlockSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FeedbackSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FeedbackSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IV(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LegalBlockSizes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LegalKeySizes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Mode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Mode(CipherMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Padding(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Padding(PaddingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    CreateEncryptor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDecryptor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.TripleDES: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Properties:
    Byte[] Key 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    IsWeakKey(Byte[]): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.TripleDESCryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Cryptography.TripleDES
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.CspAlgorithmType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CspAlgorithmType Rsa = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CspAlgorithmType Dss = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.Constants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 S_OK = 0 : Assembly, Static, Literal, HasDefault
    Int32 NTE_FILENOTFOUND = -2147024894 : Assembly, Static, Literal, HasDefault
    Int32 NTE_NO_KEY = -2146893811 : Assembly, Static, Literal, HasDefault
    Int32 NTE_BAD_KEYSET = -2146893802 : Assembly, Static, Literal, HasDefault
    Int32 NTE_KEYSET_NOT_DEF = -2146893799 : Assembly, Static, Literal, HasDefault
    Int32 KP_IV = 1 : Assembly, Static, Literal, HasDefault
    Int32 KP_MODE = 4 : Assembly, Static, Literal, HasDefault
    Int32 KP_MODE_BITS = 5 : Assembly, Static, Literal, HasDefault
    Int32 KP_EFFECTIVE_KEYLEN = 19 : Assembly, Static, Literal, HasDefault
    Int32 ALG_CLASS_SIGNATURE = 8192 : Assembly, Static, Literal, HasDefault
    Int32 ALG_CLASS_DATA_ENCRYPT = 24576 : Assembly, Static, Literal, HasDefault
    Int32 ALG_CLASS_HASH = 32768 : Assembly, Static, Literal, HasDefault
    Int32 ALG_CLASS_KEY_EXCHANGE = 40960 : Assembly, Static, Literal, HasDefault
    Int32 ALG_TYPE_DSS = 512 : Assembly, Static, Literal, HasDefault
    Int32 ALG_TYPE_RSA = 1024 : Assembly, Static, Literal, HasDefault
    Int32 ALG_TYPE_BLOCK = 1536 : Assembly, Static, Literal, HasDefault
    Int32 ALG_TYPE_STREAM = 2048 : Assembly, Static, Literal, HasDefault
    Int32 ALG_TYPE_ANY = 0 : Assembly, Static, Literal, HasDefault
    Int32 CALG_MD5 = 32771 : Assembly, Static, Literal, HasDefault
    Int32 CALG_SHA1 = 32772 : Assembly, Static, Literal, HasDefault
    Int32 CALG_SHA_256 = 32780 : Assembly, Static, Literal, HasDefault
    Int32 CALG_SHA_384 = 32781 : Assembly, Static, Literal, HasDefault
    Int32 CALG_SHA_512 = 32782 : Assembly, Static, Literal, HasDefault
    Int32 CALG_RSA_KEYX = 41984 : Assembly, Static, Literal, HasDefault
    Int32 CALG_RSA_SIGN = 9216 : Assembly, Static, Literal, HasDefault
    Int32 CALG_DSS_SIGN = 8704 : Assembly, Static, Literal, HasDefault
    Int32 CALG_DES = 26113 : Assembly, Static, Literal, HasDefault
    Int32 CALG_RC2 = 26114 : Assembly, Static, Literal, HasDefault
    Int32 CALG_3DES = 26115 : Assembly, Static, Literal, HasDefault
    Int32 CALG_3DES_112 = 26121 : Assembly, Static, Literal, HasDefault
    Int32 CALG_AES_128 = 26126 : Assembly, Static, Literal, HasDefault
    Int32 CALG_AES_192 = 26127 : Assembly, Static, Literal, HasDefault
    Int32 CALG_AES_256 = 26128 : Assembly, Static, Literal, HasDefault
    Int32 CALG_RC4 = 26625 : Assembly, Static, Literal, HasDefault
    Int32 PROV_RSA_FULL = 1 : Assembly, Static, Literal, HasDefault
    Int32 PROV_DSS_DH = 13 : Assembly, Static, Literal, HasDefault
    Int32 PROV_RSA_AES = 24 : Assembly, Static, Literal, HasDefault
    Int32 AT_KEYEXCHANGE = 1 : Assembly, Static, Literal, HasDefault
    Int32 AT_SIGNATURE = 2 : Assembly, Static, Literal, HasDefault
    Int32 PUBLICKEYBLOB = 6 : Assembly, Static, Literal, HasDefault
    Int32 PRIVATEKEYBLOB = 7 : Assembly, Static, Literal, HasDefault
    Int32 CRYPT_OAEP = 64 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_VERIFYCONTEXT = 4026531840 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_NEWKEYSET = 8 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_DELETEKEYSET = 16 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_MACHINE_KEYSET = 32 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_SILENT = 64 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_EXPORTABLE = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_KEYLEN = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_PUBLICKEYONLY = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_EXPORTABLE = 3 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_REMOVABLE = 4 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_HARDWARE = 5 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_ACCESSIBLE = 6 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_PROTECTED = 7 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_UNIQUE_CONTAINER = 8 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_ALGID = 9 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_PP_CLIENT_HWND = 10 : Assembly, Static, Literal, HasDefault
    UInt32 CLR_PP_PIN = 11 : Assembly, Static, Literal, HasDefault
    System.String OID_RSA_SMIMEalgCMS3DESwrap = 1.2.840.113549.1.9.16.3.6 : Assembly, Static, Literal, HasDefault
    System.String OID_RSA_MD5 = 1.2.840.113549.2.5 : Assembly, Static, Literal, HasDefault
    System.String OID_RSA_RC2CBC = 1.2.840.113549.3.2 : Assembly, Static, Literal, HasDefault
    System.String OID_RSA_DES_EDE3_CBC = 1.2.840.113549.3.7 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_desCBC = 1.3.14.3.2.7 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_SHA1 = 1.3.14.3.2.26 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_SHA256 = 2.16.840.1.101.3.4.2.1 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_SHA384 = 2.16.840.1.101.3.4.2.2 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_SHA512 = 2.16.840.1.101.3.4.2.3 : Assembly, Static, Literal, HasDefault
    System.String OID_OIWSEC_RIPEMD160 = 1.3.36.3.2.1 : Assembly, Static, Literal, HasDefault
Class System.Security.Cryptography.Utils: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Int32 DefaultRsaProviderType = 24 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Security.Cryptography.SafeProvHandle StaticProvHandle 'get ' : 
    System.Security.Cryptography.SafeProvHandle StaticDssProvHandle 'get ' : 
    System.Security.Cryptography.RNGCryptoServiceProvider StaticRandomNumberGenerator 'get ' : 
  Methods:
    CreateHash(SafeProvHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    _GetEnforceFipsPolicySetting(): PrivateScope, Assembly, Static, HideBySig
    _AcquireCSP(CspParameters, SafeProvHandle&): PrivateScope, Assembly, Static, HideBySig
    get_StaticProvHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_StaticDssProvHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    AcquireProvHandle(CspParameters): PrivateScope, Assembly, Static, HideBySig
    CreateProvHandle(CspParameters, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetKeySetSecurityInfo(SafeProvHandle, AccessControlSections): PrivateScope, Assembly, Static, HideBySig
    SetKeySetSecurityInfo(SafeProvHandle, CryptoKeySecurity, AccessControlSections): PrivateScope, Assembly, Static, HideBySig
    ExportCspBlobHelper(Boolean, CspParameters, SafeKeyHandle): PrivateScope, Assembly, Static, HideBySig
    GetKeyPairHelper(CspAlgorithmType, CspParameters, Boolean, Int32, SafeProvHandle&, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    ImportCspBlobHelper(CspAlgorithmType, Byte[], Boolean, CspParameters&, Boolean, SafeProvHandle&, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    SaveCspParameters(CspAlgorithmType, CspParameters, CspProviderFlags, Boolean&): PrivateScope, Assembly, Static, HideBySig
    get_StaticRandomNumberGenerator(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GenerateRandom(Int32): PrivateScope, Assembly, Static, HideBySig
    ReadLegacyFipsPolicy(): PrivateScope, Assembly, Static, HideBySig, HasSecurity
    HasAlgorithm(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ObjToAlgId(Object, OidGroup): PrivateScope, Assembly, Static, HideBySig
    ObjToHashAlgorithm(Object): PrivateScope, Assembly, Static, HideBySig
    DiscardWhiteSpaces(String): PrivateScope, Assembly, Static, HideBySig
    DiscardWhiteSpaces(String, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertByteArrayToInt(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ConvertIntToByteArray(Int32): PrivateScope, Assembly, Static, HideBySig
    ConvertIntToByteArray(UInt32, Byte[]&): PrivateScope, Assembly, Static, HideBySig
    FixupKeyParity(Byte[]): PrivateScope, Assembly, Static, HideBySig
    DWORDFromLittleEndian(UInt32*, Int32, Byte*): PrivateScope, Assembly, Static, HideBySig
    DWORDToLittleEndian(Byte[], UInt32[], Int32): PrivateScope, Assembly, Static, HideBySig
    DWORDFromBigEndian(UInt32*, Int32, Byte*): PrivateScope, Assembly, Static, HideBySig
    DWORDToBigEndian(Byte[], UInt32[], Int32): PrivateScope, Assembly, Static, HideBySig
    QuadWordFromBigEndian(UInt64*, Int32, Byte*): PrivateScope, Assembly, Static, HideBySig
    QuadWordToBigEndian(Byte[], UInt64[], Int32): PrivateScope, Assembly, Static, HideBySig
    Int(UInt32): PrivateScope, Assembly, Static, HideBySig
    RsaOaepEncrypt(RSA, HashAlgorithm, PKCS1MaskGenerationMethod, RandomNumberGenerator, Byte[]): PrivateScope, Assembly, Static, HideBySig
    RsaOaepDecrypt(RSA, HashAlgorithm, PKCS1MaskGenerationMethod, Byte[]): PrivateScope, Assembly, Static, HideBySig
    RsaPkcs1Padding(RSA, Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    CompareBigIntArrays(Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    OidToHashAlgorithmName(String): PrivateScope, Assembly, Static, HideBySig
    DoesRsaKeyOverride(RSA, String, Type[]): PrivateScope, Assembly, Static, HideBySig
    EndHash(SafeHashHandle): PrivateScope, Assembly, Static, HideBySig
    GetPersistKeyInCsp(SafeProvHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    HashData(SafeHashHandle, Byte[], Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    SetKeyParamDw(SafeKeyHandle, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SetKeyParamRgb(SafeKeyHandle, Int32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SetPersistKeyInCsp(SafeProvHandle, Boolean): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SetProviderParameter(SafeProvHandle, Int32, UInt32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SignValue(SafeKeyHandle, Int32, Int32, Int32, Byte[]): PrivateScope, Assembly, Static, HideBySig
    VerifySign(SafeKeyHandle, Int32, Int32, Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    _CreateCSP(CspParameters, Boolean, SafeProvHandle&): PrivateScope, Assembly, Static, HideBySig
    _DecryptData(SafeKeyHandle, Byte[], Int32, Int32, Byte[]&, Int32, PaddingMode, Boolean): PrivateScope, Assembly, Static, HideBySig
    _EncryptData(SafeKeyHandle, Byte[], Int32, Int32, Byte[]&, Int32, PaddingMode, Boolean): PrivateScope, Assembly, Static, HideBySig
    _ExportKey(SafeKeyHandle, Int32, Object): PrivateScope, Assembly, Static, HideBySig
    _GenerateKey(SafeProvHandle, Int32, CspProviderFlags, Int32, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    _GetKeyParameter(SafeKeyHandle, UInt32): PrivateScope, Assembly, Static, HideBySig
    _GetKeySetSecurityInfo(SafeProvHandle, SecurityInfos, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    _GetProviderParameter(SafeProvHandle, Int32, UInt32): PrivateScope, Assembly, Static, HideBySig
    _GetUserKey(SafeProvHandle, Int32, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    _ImportBulkKey(SafeProvHandle, Int32, Boolean, Byte[], SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    _ImportCspBlob(Byte[], SafeProvHandle, CspProviderFlags, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    _ImportKey(SafeProvHandle, Int32, CspProviderFlags, Object, SafeKeyHandle&): PrivateScope, Assembly, Static, HideBySig
    _ProduceLegacyHmacValues(): PrivateScope, Assembly, Static, HideBySig
    _OpenCSP(CspParameters, UInt32, SafeProvHandle&): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.X509Certificates.SafeCertContextHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.X509Certificates.SafeCertContextHandle InvalidHandle 'get ' : 
    IntPtr pCertContext 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_pCertContext(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.SafeCertStoreHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.X509Certificates.SafeCertStoreHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.X509Constants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    UInt32 CRYPT_EXPORTABLE = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_USER_PROTECTED = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_MACHINE_KEYSET = 32 : Assembly, Static, Literal, HasDefault
    UInt32 CRYPT_USER_KEYSET = 4096 : Assembly, Static, Literal, HasDefault
    UInt32 PKCS12_ALWAYS_CNG_KSP = 512 : Assembly, Static, Literal, HasDefault
    UInt32 PKCS12_NO_PERSIST_KEY = 32768 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_CERT = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_CTL = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_CRL = 3 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_SERIALIZED_STORE = 4 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_SERIALIZED_CERT = 5 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_SERIALIZED_CTL = 6 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_SERIALIZED_CRL = 7 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_PKCS7_SIGNED = 8 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_PKCS7_UNSIGNED = 9 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED = 10 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_PKCS10 = 11 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_PFX = 12 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_QUERY_CONTENT_CERT_PAIR = 13 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_PROV_MEMORY = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_PROV_SYSTEM = 10 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_NO_CRYPT_RELEASE_FLAG = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_SET_LOCALIZED_NAME_FLAG = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG = 4 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_DELETE_FLAG = 16 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_SHARE_STORE_FLAG = 64 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_SHARE_CONTEXT_FLAG = 128 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_MANIFOLD_FLAG = 256 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_ENUM_ARCHIVED_FLAG = 512 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_UPDATE_KEYID_FLAG = 1024 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_BACKUP_RESTORE_FLAG = 2048 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_READONLY_FLAG = 32768 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_OPEN_EXISTING_FLAG = 16384 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_CREATE_NEW_FLAG = 8192 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_STORE_MAXIMUM_ALLOWED_FLAG = 4096 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_EMAIL_TYPE = 1 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_RDN_TYPE = 2 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_SIMPLE_DISPLAY_TYPE = 4 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_FRIENDLY_DISPLAY_TYPE = 5 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_DNS_TYPE = 6 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_URL_TYPE = 7 : Assembly, Static, Literal, HasDefault
    UInt32 CERT_NAME_UPN_TYPE = 8 : Assembly, Static, Literal, HasDefault
Struct System.Security.Cryptography.X509Certificates.OidGroup: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.OidGroup AllGroups = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup HashAlgorithm = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup EncryptionAlgorithm = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup PublicKeyAlgorithm = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup SignatureAlgorithm = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup Attribute = 5 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup ExtensionOrAttribute = 6 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup EnhancedKeyUsage = 7 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup Policy = 8 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup Template = 9 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup KeyDerivationFunction = 10 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidGroup DisableSearchDS = -2147483648 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.X509Certificates.OidKeyType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.OidKeyType Oid = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidKeyType Name = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidKeyType AlgorithmID = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidKeyType SignatureID = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidKeyType CngAlgorithmID = 5 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.OidKeyType CngSignatureID = 6 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.X509Certificates.CRYPT_OID_INFO: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbSize : Assembly
    System.String pszOID : Assembly, HasFieldMarshal
    System.String pwszName : Assembly, HasFieldMarshal
    System.Security.Cryptography.X509Certificates.OidGroup dwGroupId : Assembly
    Int32 AlgId : Assembly
    Int32 cbData : Assembly
    IntPtr pbData : Assembly
Class System.Security.Cryptography.X509Certificates.X509Utils: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    _DuplicateCertContext(IntPtr, SafeCertContextHandle&): PrivateScope, Assembly, Static, HideBySig
    _GetCertRawData(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _GetThumbprint(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    GetAlgIdFromOid(String, OidGroup): PrivateScope, Assembly, Static, HideBySig
    GetFriendlyNameFromOid(String, OidGroup): PrivateScope, Assembly, Static, HideBySig
    GetOidFromFriendlyName(String, OidGroup): PrivateScope, Assembly, Static, HideBySig
    NameOrOidToAlgId(String, OidGroup): PrivateScope, Assembly, Static, HideBySig
    MapContentType(UInt32): PrivateScope, Assembly, Static, HideBySig
    MapKeyStorageFlags(X509KeyStorageFlags): PrivateScope, Assembly, Static, HideBySig
    ExportCertToMemoryStore(X509Certificate): PrivateScope, Assembly, Static, HideBySig
    PasswordToHGlobalUni(Object): PrivateScope, Assembly, Static, HideBySig
    _AddCertificateToStore(SafeCertStoreHandle, SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _ExportCertificatesToBlob(SafeCertStoreHandle, X509ContentType, IntPtr): PrivateScope, Assembly, Static, HideBySig
    _GetDateNotAfter(SafeCertContextHandle, FILE_TIME&): PrivateScope, Assembly, Static, HideBySig
    _GetDateNotBefore(SafeCertContextHandle, FILE_TIME&): PrivateScope, Assembly, Static, HideBySig
    _GetIssuerName(SafeCertContextHandle, Boolean): PrivateScope, Assembly, Static, HideBySig
    _GetPublicKeyOid(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _GetPublicKeyParameters(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _GetPublicKeyValue(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _GetSubjectInfo(SafeCertContextHandle, UInt32, Boolean): PrivateScope, Assembly, Static, HideBySig
    _GetSerialNumber(SafeCertContextHandle): PrivateScope, Assembly, Static, HideBySig
    _LoadCertFromBlob(Byte[], IntPtr, UInt32, Boolean, SafeCertContextHandle&): PrivateScope, Assembly, Static, HideBySig
    _LoadCertFromFile(String, IntPtr, UInt32, Boolean, SafeCertContextHandle&): PrivateScope, Assembly, Static, HideBySig
    _OpenX509Store(UInt32, UInt32, String, SafeCertStoreHandle&): PrivateScope, Assembly, Static, HideBySig
    _QueryCertBlobType(Byte[]): PrivateScope, Assembly, Static, HideBySig
    _QueryCertFileType(String): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Cryptography.X509Certificates.X509ContentType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.X509ContentType Unknown = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType Cert = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType SerializedCert = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType Pfx = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType Pkcs12 = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType SerializedStore = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType Pkcs7 = 5 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509ContentType Authenticode = 6 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.X509Certificates.X509KeyStorageFlags: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags DefaultKeySet = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserKeySet = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags MachineKeySet = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Exportable = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserProtected = 8 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags PersistKeySet = 16 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags EphemeralKeySet = 32 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.X509Certificates.X509Certificate: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.Security.SecureString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.SecureString): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.SecureString, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.Runtime.Serialization.IDeserializationCallback
    System.Runtime.Serialization.ISerializable
  Fields:
    System.Security.Cryptography.X509Certificates.X509KeyStorageFlags KeyStorageFlagsAll = 63 : Assembly, Static, Literal, HasDefault
  Properties:
    IntPtr Handle 'get ' : 
    System.String Issuer 'get ' : 
    System.String Subject 'get ' : 
    System.Security.Cryptography.X509Certificates.SafeCertContextHandle CertContext 'get ' : 
  Methods:
    CreateFromCertFile(String): PrivateScope, Public, Static, HideBySig
    CreateFromSignedFile(String): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    GetName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetIssuerName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetSerialNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSerialNumberString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyAlgorithmParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyAlgorithmParametersString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetKeyAlgorithm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPublicKeyString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRawCertData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRawCertDataString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCertHash(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCertHashString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEffectiveDateString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExpirationDateString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(X509Certificate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    Import(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Import(Byte[], String, X509KeyStorageFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Import(Byte[], SecureString, X509KeyStorageFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Import(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Import(String, String, X509KeyStorageFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Import(String, SecureString, X509KeyStorageFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Export(X509ContentType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Export(X509ContentType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Export(X509ContentType, SecureString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_CertContext(): PrivateScope, Assembly, HideBySig, SpecialName
    GetCertContextForCloning(): PrivateScope, Assembly, HideBySig
Struct System.Security.Permissions.EnvironmentPermissionAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.EnvironmentPermissionAccess NoAccess = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.EnvironmentPermissionAccess Read = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.EnvironmentPermissionAccess Write = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.EnvironmentPermissionAccess AllAccess = 3 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.EnvironmentStringExpressionSet: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Security.Util.StringExpressionSet
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.EnvironmentPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.EnvironmentPermissionAccess, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Methods:
    SetPathList(EnvironmentPermissionAccess, String): PrivateScope, Public, HideBySig
    AddPathList(EnvironmentPermissionAccess, String): PrivateScope, Public, HideBySig
    GetPathList(EnvironmentPermissionAccess): PrivateScope, Public, HideBySig
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Permissions.FileDialogPermissionAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.FileDialogPermissionAccess None = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileDialogPermissionAccess Open = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileDialogPermissionAccess Save = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileDialogPermissionAccess OpenSave = 3 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.FileDialogPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileDialogPermissionAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.FileDialogPermissionAccess Access 'get set' : 
  Methods:
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(FileDialogPermissionAccess): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Permissions.FileIOPermissionAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.FileIOPermissionAccess NoAccess = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileIOPermissionAccess Read = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileIOPermissionAccess Write = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileIOPermissionAccess Append = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileIOPermissionAccess PathDiscovery = 8 : Public, Static, Literal, HasDefault
    System.Security.Permissions.FileIOPermissionAccess AllAccess = 15 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.FileIOPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.Security.AccessControl.AccessControlActions, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.Security.AccessControl.AccessControlActions, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.String[], Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.FileIOPermissionAccess, System.Security.AccessControl.AccessControlActions, System.String[], Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.FileIOPermissionAccess AllLocalFiles 'get set' : 
    System.Security.Permissions.FileIOPermissionAccess AllFiles 'get set' : 
  Methods:
    SetPathList(FileIOPermissionAccess, String): PrivateScope, Public, HideBySig
    SetPathList(FileIOPermissionAccess, String[]): PrivateScope, Public, HideBySig
    SetPathList(FileIOPermissionAccess, String[], Boolean): PrivateScope, Assembly, HideBySig
    SetPathList(FileIOPermissionAccess, AccessControlActions, String[], Boolean): PrivateScope, Assembly, HideBySig
    AddPathList(FileIOPermissionAccess, String): PrivateScope, Public, HideBySig
    AddPathList(FileIOPermissionAccess, String[]): PrivateScope, Public, HideBySig
    AddPathList(FileIOPermissionAccess, String[], Boolean, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    AddPathList(FileIOPermissionAccess, AccessControlActions, String[], Boolean, Boolean, Boolean): PrivateScope, Assembly, HideBySig
    GetPathList(FileIOPermissionAccess): PrivateScope, Public, HideBySig
    get_AllLocalFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllLocalFiles(FileIOPermissionAccess): PrivateScope, Public, HideBySig, SpecialName
    get_AllFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllFiles(FileIOPermissionAccess): PrivateScope, Public, HideBySig, SpecialName
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    QuickDemand(FileIOPermissionAccess, String, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    QuickDemand(FileIOPermissionAccess, String[], Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    QuickDemand(PermissionState): PrivateScope, Assembly, Static, HideBySig
    QuickDemand(FileIOPermissionAccess, AccessControlActions, String, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    QuickDemand(FileIOPermissionAccess, AccessControlActions, String[], Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig
    EmulateFileIOPermissionChecks(String): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.FileIOAccess: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Util.StringExpressionSet, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllFiles 'get set' : 
    Boolean AllLocalFiles 'get set' : 
    Boolean PathDiscovery 'set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    AddExpressions(ArrayList, Boolean): PrivateScope, Public, HideBySig
    get_AllFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllFiles(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_AllLocalFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllLocalFiles(Boolean): PrivateScope, Public, HideBySig, SpecialName
    set_PathDiscovery(Boolean): PrivateScope, Public, HideBySig, SpecialName
    IsEmpty(): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    Union(FileIOAccess): PrivateScope, Public, HideBySig
    Intersect(FileIOAccess): PrivateScope, Public, HideBySig
    IsSubsetOf(FileIOAccess): PrivateScope, Public, HideBySig
    ToStringArray(): PrivateScope, Public, HideBySig
    IsLocalDrive(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Permissions.HostProtectionResource: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.HostProtectionResource None = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource Synchronization = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource SharedState = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource ExternalProcessMgmt = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource SelfAffectingProcessMgmt = 8 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource ExternalThreading = 16 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource SelfAffectingThreading = 32 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource SecurityInfrastructure = 64 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource UI = 128 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource MayLeakOnAbort = 256 : Public, Static, Literal, HasDefault
    System.Security.Permissions.HostProtectionResource All = 511 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.HostProtectionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.HostProtectionResource Resources 'get set' : 
    Boolean Synchronization 'get set' : 
    Boolean SharedState 'get set' : 
    Boolean ExternalProcessMgmt 'get set' : 
    Boolean SelfAffectingProcessMgmt 'get set' : 
    Boolean ExternalThreading 'get set' : 
    Boolean SelfAffectingThreading 'get set' : 
    Boolean SecurityInfrastructure 'get set' : 
    Boolean UI 'get set' : 
    Boolean MayLeakOnAbort 'get set' : 
  Methods:
    get_Resources(): PrivateScope, Public, HideBySig, SpecialName
    set_Resources(HostProtectionResource): PrivateScope, Public, HideBySig, SpecialName
    get_Synchronization(): PrivateScope, Public, HideBySig, SpecialName
    set_Synchronization(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SharedState(): PrivateScope, Public, HideBySig, SpecialName
    set_SharedState(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalProcessMgmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ExternalProcessMgmt(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SelfAffectingProcessMgmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SelfAffectingProcessMgmt(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalThreading(): PrivateScope, Public, HideBySig, SpecialName
    set_ExternalThreading(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SelfAffectingThreading(): PrivateScope, Public, HideBySig, SpecialName
    set_SelfAffectingThreading(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityInfrastructure(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityInfrastructure(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UI(): PrivateScope, Public, HideBySig, SpecialName
    set_UI(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MayLeakOnAbort(): PrivateScope, Public, HideBySig, SpecialName
    set_MayLeakOnAbort(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.HostProtectionPermission: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.HostProtectionResource): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Fields:
    System.Security.Permissions.HostProtectionResource protectedResources IsVolatile : Assembly, Static
  Properties:
    System.Security.Permissions.HostProtectionResource Resources 'get set' : 
  Methods:
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    set_Resources(HostProtectionResource): PrivateScope, Public, HideBySig, SpecialName
    get_Resources(): PrivateScope, Public, HideBySig, SpecialName
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
Interface System.Security.Permissions.IBuiltInPermission: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetTokenIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Permissions.BuiltInPermissionIndex: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 NUM_BUILTIN_UNRESTRICTED = 10 : Assembly, Static, Literal, HasDefault
    Int32 NUM_BUILTIN_NORMAL = 7 : Assembly, Static, Literal, HasDefault
    Int32 EnvironmentPermissionIndex = 0 : Assembly, Static, Literal, HasDefault
    Int32 FileDialogPermissionIndex = 1 : Assembly, Static, Literal, HasDefault
    Int32 FileIOPermissionIndex = 2 : Assembly, Static, Literal, HasDefault
    Int32 IsolatedStorageFilePermissionIndex = 3 : Assembly, Static, Literal, HasDefault
    Int32 ReflectionPermissionIndex = 4 : Assembly, Static, Literal, HasDefault
    Int32 RegistryPermissionIndex = 5 : Assembly, Static, Literal, HasDefault
    Int32 SecurityPermissionIndex = 6 : Assembly, Static, Literal, HasDefault
    Int32 UIPermissionIndex = 7 : Assembly, Static, Literal, HasDefault
    Int32 PrincipalPermissionIndex = 8 : Assembly, Static, Literal, HasDefault
    Int32 HostProtectionPermissionIndex = 9 : Assembly, Static, Literal, HasDefault
    Int32 PublisherIdentityPermissionIndex = 10 : Assembly, Static, Literal, HasDefault
    Int32 SiteIdentityPermissionIndex = 11 : Assembly, Static, Literal, HasDefault
    Int32 StrongNameIdentityPermissionIndex = 12 : Assembly, Static, Literal, HasDefault
    Int32 UrlIdentityPermissionIndex = 13 : Assembly, Static, Literal, HasDefault
    Int32 ZoneIdentityPermissionIndex = 14 : Assembly, Static, Literal, HasDefault
    Int32 GacIdentityPermissionIndex = 15 : Assembly, Static, Literal, HasDefault
    Int32 KeyContainerPermissionIndex = 16 : Assembly, Static, Literal, HasDefault
Struct System.Security.Permissions.BuiltInPermissionFlag: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.BuiltInPermissionFlag EnvironmentPermission = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag FileDialogPermission = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag FileIOPermission = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag IsolatedStorageFilePermission = 8 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag ReflectionPermission = 16 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag RegistryPermission = 32 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag SecurityPermission = 64 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag UIPermission = 128 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag PrincipalPermission = 256 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag PublisherIdentityPermission = 512 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag SiteIdentityPermission = 1024 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag StrongNameIdentityPermission = 2048 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag UrlIdentityPermission = 4096 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag ZoneIdentityPermission = 8192 : Public, Static, Literal, HasDefault
    System.Security.Permissions.BuiltInPermissionFlag KeyContainerPermission = 16384 : Public, Static, Literal, HasDefault
Struct System.Security.Permissions.IsolatedStorageContainment: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.IsolatedStorageContainment None = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment DomainIsolationByUser = 16 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment ApplicationIsolationByUser = 21 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment AssemblyIsolationByUser = 32 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment DomainIsolationByMachine = 48 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment AssemblyIsolationByMachine = 64 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment ApplicationIsolationByMachine = 69 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment DomainIsolationByRoamingUser = 80 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment AssemblyIsolationByRoamingUser = 96 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment ApplicationIsolationByRoamingUser = 101 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment AdministerIsolatedStorageByUser = 112 : Public, Static, Literal, HasDefault
    System.Security.Permissions.IsolatedStorageContainment UnrestrictedIsolatedStorage = 240 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.IsolatedStoragePermission: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.IsolatedStorageContainment, Int64, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.IsolatedStorageContainment, Int64, Boolean, Int64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
  Fields:
    Int64 m_userQuota : Assembly
    Int64 m_machineQuota : Assembly
    Int64 m_expirationDays : Assembly
    Boolean m_permanentData : Assembly
    System.Security.Permissions.IsolatedStorageContainment m_allowed : Assembly
  Properties:
    Int64 UserQuota 'get set' : 
    System.Security.Permissions.IsolatedStorageContainment UsageAllowed 'get set' : 
  Methods:
    ToXml(String): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    set_UserQuota(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_UserQuota(): PrivateScope, Public, HideBySig, SpecialName
    set_UsageAllowed(IsolatedStorageContainment): PrivateScope, Public, HideBySig, SpecialName
    get_UsageAllowed(): PrivateScope, Public, HideBySig, SpecialName
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    min(Int64, Int64): PrivateScope, Assembly, Static, HideBySig
    max(Int64, Int64): PrivateScope, Assembly, Static, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.IsolatedStorageFilePermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.IsolatedStoragePermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.IsolatedStorageContainment, Int64, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Methods:
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Permissions.PermissionState: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.PermissionState Unrestricted = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.PermissionState None = 0 : Public, Static, Literal, HasDefault
Struct System.Security.Permissions.SecurityAction: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.SecurityAction Demand = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityAction Assert = 3 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityAction Deny = 4 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.Permissions.SecurityAction PermitOnly = 5 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityAction LinkDemand = 6 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityAction InheritanceDemand = 7 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityAction RequestMinimum = 8 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.Permissions.SecurityAction RequestOptional = 9 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.Permissions.SecurityAction RequestRefuse = 10 : Public, Static, Literal, HasDefault (Obsolete)
Class System.Security.Permissions.SecurityAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Attribute
  Fields:
    System.Security.Permissions.SecurityAction m_action : Assembly
    Boolean m_unrestricted : Assembly
  Properties:
    System.Security.Permissions.SecurityAction Action 'get set' : 
    Boolean Unrestricted 'get set' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(SecurityAction): PrivateScope, Public, HideBySig, SpecialName
    get_Unrestricted(): PrivateScope, Public, HideBySig, SpecialName
    set_Unrestricted(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindSecurityAttributeTypeHandle(String): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.CodeAccessSecurityAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Security.Permissions.SecurityAttribute
Class System.Security.Permissions.EnvironmentPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Read 'get set' : 
    System.String Write 'get set' : 
    System.String All 'get set' : 
  Methods:
    get_Read(): PrivateScope, Public, HideBySig, SpecialName
    set_Read(String): PrivateScope, Public, HideBySig, SpecialName
    get_Write(): PrivateScope, Public, HideBySig, SpecialName
    set_Write(String): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    set_All(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.FileDialogPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Open 'get set' : 
    Boolean Save 'get set' : 
  Methods:
    get_Open(): PrivateScope, Public, HideBySig, SpecialName
    set_Open(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Save(): PrivateScope, Public, HideBySig, SpecialName
    set_Save(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.FileIOPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Read 'get set' : 
    System.String Write 'get set' : 
    System.String Append 'get set' : 
    System.String PathDiscovery 'get set' : 
    System.String ViewAccessControl 'get set' : 
    System.String ChangeAccessControl 'get set' : 
    System.String All 'get set' :  (Obsolete)
    System.String ViewAndModify 'get set' : 
    System.Security.Permissions.FileIOPermissionAccess AllFiles 'get set' : 
    System.Security.Permissions.FileIOPermissionAccess AllLocalFiles 'get set' : 
  Methods:
    get_Read(): PrivateScope, Public, HideBySig, SpecialName
    set_Read(String): PrivateScope, Public, HideBySig, SpecialName
    get_Write(): PrivateScope, Public, HideBySig, SpecialName
    set_Write(String): PrivateScope, Public, HideBySig, SpecialName
    get_Append(): PrivateScope, Public, HideBySig, SpecialName
    set_Append(String): PrivateScope, Public, HideBySig, SpecialName
    get_PathDiscovery(): PrivateScope, Public, HideBySig, SpecialName
    set_PathDiscovery(String): PrivateScope, Public, HideBySig, SpecialName
    get_ViewAccessControl(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewAccessControl(String): PrivateScope, Public, HideBySig, SpecialName
    get_ChangeAccessControl(): PrivateScope, Public, HideBySig, SpecialName
    set_ChangeAccessControl(String): PrivateScope, Public, HideBySig, SpecialName
    set_All(String): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewAndModify(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewAndModify(String): PrivateScope, Public, HideBySig, SpecialName
    get_AllFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllFiles(FileIOPermissionAccess): PrivateScope, Public, HideBySig, SpecialName
    get_AllLocalFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_AllLocalFiles(FileIOPermissionAccess): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.KeyContainerPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String KeyStore 'get set' : 
    System.String ProviderName 'get set' : 
    Int32 ProviderType 'get set' : 
    System.String KeyContainerName 'get set' : 
    Int32 KeySpec 'get set' : 
    System.Security.Permissions.KeyContainerPermissionFlags Flags 'get set' : 
  Methods:
    get_KeyStore(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyStore(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderType(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_KeyContainerName(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyContainerName(String): PrivateScope, Public, HideBySig, SpecialName
    get_KeySpec(): PrivateScope, Public, HideBySig, SpecialName
    set_KeySpec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.PrincipalPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Role 'get set' : 
    Boolean Authenticated 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Role(): PrivateScope, Public, HideBySig, SpecialName
    set_Role(String): PrivateScope, Public, HideBySig, SpecialName
    get_Authenticated(): PrivateScope, Public, HideBySig, SpecialName
    set_Authenticated(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.ReflectionPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.ReflectionPermissionFlag Flags 'get set' : 
    Boolean TypeInformation 'get set' :  (Obsolete)
    Boolean MemberAccess 'get set' : 
    Boolean ReflectionEmit 'get set' :  (Obsolete)
    Boolean RestrictedMemberAccess 'get set' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(ReflectionPermissionFlag): PrivateScope, Public, HideBySig, SpecialName
    get_TypeInformation(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeInformation(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MemberAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberAccess(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectionEmit(): PrivateScope, Public, HideBySig, SpecialName
    set_ReflectionEmit(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RestrictedMemberAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_RestrictedMemberAccess(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.RegistryPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Read 'get set' : 
    System.String Write 'get set' : 
    System.String Create 'get set' : 
    System.String ViewAccessControl 'get set' : 
    System.String ChangeAccessControl 'get set' : 
    System.String ViewAndModify 'get set' : 
    System.String All 'get set' :  (Obsolete)
  Methods:
    get_Read(): PrivateScope, Public, HideBySig, SpecialName
    set_Read(String): PrivateScope, Public, HideBySig, SpecialName
    get_Write(): PrivateScope, Public, HideBySig, SpecialName
    set_Write(String): PrivateScope, Public, HideBySig, SpecialName
    get_Create(): PrivateScope, Public, HideBySig, SpecialName
    set_Create(String): PrivateScope, Public, HideBySig, SpecialName
    get_ViewAccessControl(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewAccessControl(String): PrivateScope, Public, HideBySig, SpecialName
    get_ChangeAccessControl(): PrivateScope, Public, HideBySig, SpecialName
    set_ChangeAccessControl(String): PrivateScope, Public, HideBySig, SpecialName
    get_ViewAndModify(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewAndModify(String): PrivateScope, Public, HideBySig, SpecialName
    get_All(): PrivateScope, Public, HideBySig, SpecialName
    set_All(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.SecurityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.SecurityPermissionFlag Flags 'get set' : 
    Boolean Assertion 'get set' : 
    Boolean UnmanagedCode 'get set' : 
    Boolean SkipVerification 'get set' : 
    Boolean Execution 'get set' : 
    Boolean ControlThread 'get set' : 
    Boolean ControlEvidence 'get set' : 
    Boolean ControlPolicy 'get set' : 
    Boolean SerializationFormatter 'get set' : 
    Boolean ControlDomainPolicy 'get set' : 
    Boolean ControlPrincipal 'get set' : 
    Boolean ControlAppDomain 'get set' : 
    Boolean RemotingConfiguration 'get set' : 
    Boolean Infrastructure 'get set' : 
    Boolean BindingRedirects 'get set' : 
  Methods:
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(SecurityPermissionFlag): PrivateScope, Public, HideBySig, SpecialName
    get_Assertion(): PrivateScope, Public, HideBySig, SpecialName
    set_Assertion(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UnmanagedCode(): PrivateScope, Public, HideBySig, SpecialName
    set_UnmanagedCode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SkipVerification(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipVerification(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Execution(): PrivateScope, Public, HideBySig, SpecialName
    set_Execution(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlThread(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlThread(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlEvidence(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlEvidence(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlPolicy(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SerializationFormatter(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializationFormatter(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlDomainPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlDomainPolicy(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPrincipal(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlPrincipal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAppDomain(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAppDomain(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RemotingConfiguration(): PrivateScope, Public, HideBySig, SpecialName
    set_RemotingConfiguration(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Infrastructure(): PrivateScope, Public, HideBySig, SpecialName
    set_Infrastructure(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BindingRedirects(): PrivateScope, Public, HideBySig, SpecialName
    set_BindingRedirects(Boolean): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.UIPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Permissions.UIPermissionWindow Window 'get set' : 
    System.Security.Permissions.UIPermissionClipboard Clipboard 'get set' : 
  Methods:
    get_Window(): PrivateScope, Public, HideBySig, SpecialName
    set_Window(UIPermissionWindow): PrivateScope, Public, HideBySig, SpecialName
    get_Clipboard(): PrivateScope, Public, HideBySig, SpecialName
    set_Clipboard(UIPermissionClipboard): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.ZoneIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.SecurityZone Zone 'get set' : 
  Methods:
    get_Zone(): PrivateScope, Public, HideBySig, SpecialName
    set_Zone(SecurityZone): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.StrongNameIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.String Version 'get set' : 
    System.String PublicKey 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(String): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_PublicKey(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.SiteIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Site 'get set' : 
  Methods:
    get_Site(): PrivateScope, Public, HideBySig, SpecialName
    set_Site(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.UrlIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Url 'get set' : 
  Methods:
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.PublisherIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String X509Certificate 'get set' : 
    System.String CertFile 'get set' : 
    System.String SignedFile 'get set' : 
  Methods:
    get_X509Certificate(): PrivateScope, Public, HideBySig, SpecialName
    set_X509Certificate(String): PrivateScope, Public, HideBySig, SpecialName
    get_CertFile(): PrivateScope, Public, HideBySig, SpecialName
    set_CertFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_SignedFile(): PrivateScope, Public, HideBySig, SpecialName
    set_SignedFile(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.IsolatedStoragePermissionAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
  Fields:
    Int64 m_userQuota : Assembly
    System.Security.Permissions.IsolatedStorageContainment m_allowed : Assembly
  Properties:
    Int64 UserQuota 'get set' : 
    System.Security.Permissions.IsolatedStorageContainment UsageAllowed 'get set' : 
  Methods:
    set_UserQuota(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_UserQuota(): PrivateScope, Public, HideBySig, SpecialName
    set_UsageAllowed(IsolatedStorageContainment): PrivateScope, Public, HideBySig, SpecialName
    get_UsageAllowed(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Permissions.IsolatedStorageFilePermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.IsolatedStoragePermissionAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.PermissionSetAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String File 'get set' : 
    Boolean UnicodeEncoded 'get set' : 
    System.String Name 'get set' : 
    System.String XML 'get set' : 
    System.String Hex 'get set' : 
  Methods:
    get_File(): PrivateScope, Public, HideBySig, SpecialName
    set_File(String): PrivateScope, Public, HideBySig, SpecialName
    get_UnicodeEncoded(): PrivateScope, Public, HideBySig, SpecialName
    set_UnicodeEncoded(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_XML(): PrivateScope, Public, HideBySig, SpecialName
    set_XML(String): PrivateScope, Public, HideBySig, SpecialName
    get_Hex(): PrivateScope, Public, HideBySig, SpecialName
    set_Hex(String): PrivateScope, Public, HideBySig, SpecialName
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
    CreatePermissionSet(): PrivateScope, Public, HideBySig
Struct System.Security.Permissions.ReflectionPermissionFlag: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.ReflectionPermissionFlag NoFlags = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.ReflectionPermissionFlag TypeInformation = 1 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.Permissions.ReflectionPermissionFlag MemberAccess = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.ReflectionPermissionFlag ReflectionEmit = 4 : Public, Static, Literal, HasDefault (Obsolete)
    System.Security.Permissions.ReflectionPermissionFlag RestrictedMemberAccess = 8 : Public, Static, Literal, HasDefault
    System.Security.Permissions.ReflectionPermissionFlag AllFlags = 7 : Public, Static, Literal, HasDefault (Obsolete)
Class System.Security.Permissions.ReflectionPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.ReflectionPermissionFlag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Fields:
    System.Security.Permissions.ReflectionPermissionFlag AllFlagsAndMore = 15 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Security.Permissions.ReflectionPermissionFlag Flags 'get set' : 
  Methods:
    set_Flags(ReflectionPermissionFlag): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.IDRole: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean m_authenticated : Assembly
    System.String m_id : Assembly
    System.String m_role : Assembly
  Properties:
    System.Security.Principal.SecurityIdentifier Sid 'get ' : 
  Methods:
    get_Sid(): PrivateScope, Assembly, HideBySig, SpecialName
    ToXml(): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement): PrivateScope, Assembly, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.PrincipalPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.IPermission
    System.Security.ISecurityEncodable
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Methods:
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Intersect(IPermission): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Union(IPermission): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Demand(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Permissions.SecurityPermissionFlag: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.SecurityPermissionFlag NoFlags = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag Assertion = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag UnmanagedCode = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag SkipVerification = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag Execution = 8 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlThread = 16 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlEvidence = 32 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlPolicy = 64 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag SerializationFormatter = 128 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy = 256 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlPrincipal = 512 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag ControlAppDomain = 1024 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration = 2048 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag Infrastructure = 4096 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag BindingRedirects = 8192 : Public, Static, Literal, HasDefault
    System.Security.Permissions.SecurityPermissionFlag AllFlags = 16383 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.SecurityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.SecurityPermissionFlag): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.SecurityPermissionFlag Flags 'get set' : 
  Methods:
    set_Flags(SecurityPermissionFlag): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.SiteIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.String Site 'get set' : 
  Methods:
    set_Site(String): PrivateScope, Public, HideBySig, SpecialName
    get_Site(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.StrongName2: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.Permissions.StrongNamePublicKeyBlob, System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Security.Permissions.StrongNamePublicKeyBlob m_publicKeyBlob : Public
    System.String m_name : Public
    System.Version m_version : Public
  Methods:
    Copy(): PrivateScope, Public, HideBySig
    IsSubsetOf(StrongName2): PrivateScope, Public, HideBySig
    Intersect(StrongName2): PrivateScope, Public, HideBySig
    Equals(StrongName2): PrivateScope, Public, HideBySig
Class System.Security.Permissions.StrongNameIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.StrongNamePublicKeyBlob, System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.StrongNamePublicKeyBlob PublicKey 'get set' : 
    System.String Name 'get set' : 
    System.Version Version 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    set_PublicKey(StrongNamePublicKeyBlob): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    set_Version(Version): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.StrongNamePublicKeyBlob: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Byte[] PublicKey : Assembly
  Methods:
    Equals(StrongNamePublicKeyBlob): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Permissions.UIPermissionWindow: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.UIPermissionWindow NoWindows = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.UIPermissionWindow SafeSubWindows = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.UIPermissionWindow SafeTopLevelWindows = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.UIPermissionWindow AllWindows = 3 : Public, Static, Literal, HasDefault
Struct System.Security.Permissions.UIPermissionClipboard: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.UIPermissionClipboard NoClipboard = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.UIPermissionClipboard OwnClipboard = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.UIPermissionClipboard AllClipboard = 2 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.UIPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.UIPermissionWindow, System.Security.Permissions.UIPermissionClipboard): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.UIPermissionWindow): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.UIPermissionClipboard): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.UIPermissionWindow Window 'get set' : 
    System.Security.Permissions.UIPermissionClipboard Clipboard 'get set' : 
  Methods:
    set_Window(UIPermissionWindow): PrivateScope, Public, HideBySig, SpecialName
    get_Window(): PrivateScope, Public, HideBySig, SpecialName
    set_Clipboard(UIPermissionClipboard): PrivateScope, Public, HideBySig, SpecialName
    get_Clipboard(): PrivateScope, Public, HideBySig, SpecialName
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.UrlIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Util.URLString): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.String Url 'get set' : 
  Methods:
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    AppendOrigin(ArrayList): PrivateScope, Assembly, HideBySig
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.ZoneIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.SecurityZone SecurityZone 'get set' : 
  Methods:
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    AppendZones(ArrayList): PrivateScope, Assembly, HideBySig
    set_SecurityZone(SecurityZone): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityZone(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.GacIdentityPermissionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Permissions.CodeAccessSecurityAttribute
    Void .ctor(System.Security.Permissions.SecurityAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreatePermission(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Permissions.GacIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Methods:
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
Interface System.Security.Permissions.IUnrestrictedPermission: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    IsUnrestricted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Permissions.KeyContainerPermissionFlags: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.KeyContainerPermissionFlags NoFlags = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Create = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Open = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Delete = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Import = 16 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Export = 32 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Sign = 256 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags Decrypt = 512 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags ViewAcl = 4096 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags ChangeAcl = 8192 : Public, Static, Literal, HasDefault
    System.Security.Permissions.KeyContainerPermissionFlags AllFlags = 13111 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.KeyContainerPermissionAccessEntry: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.Permissions.KeyContainerPermissionAccessEntry): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.Permissions.KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CspParameters, System.Security.Permissions.KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.String, Int32, System.Security.Permissions.KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String KeyStore 'get set' : 
    System.String ProviderName 'get set' : 
    Int32 ProviderType 'get set' : 
    System.String KeyContainerName 'get set' : 
    Int32 KeySpec 'get set' : 
    System.Security.Permissions.KeyContainerPermissionFlags Flags 'get set' : 
  Methods:
    get_KeyStore(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyStore(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderType(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_KeyContainerName(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyContainerName(String): PrivateScope, Public, HideBySig, SpecialName
    get_KeySpec(): PrivateScope, Public, HideBySig, SpecialName
    set_KeySpec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(KeyContainerPermissionAccessEntry): PrivateScope, Assembly, HideBySig
    IsUnrestrictedEntry(String, String, Int32, String, Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.KeyContainerPermissionAccessEntryCollection: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.Permissions.KeyContainerPermissionFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Security.Permissions.KeyContainerPermissionAccessEntry Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(KeyContainerPermissionAccessEntry): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    IndexOf(KeyContainerPermissionAccessEntry): PrivateScope, Public, HideBySig
    Remove(KeyContainerPermissionAccessEntry): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    CopyTo(KeyContainerPermissionAccessEntry[], Int32): PrivateScope, Public, HideBySig
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(System.Security.Permissions.KeyContainerPermissionAccessEntryCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Security.Permissions.KeyContainerPermissionAccessEntry Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Permissions.KeyContainerPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.KeyContainerPermissionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.KeyContainerPermissionFlags, System.Security.Permissions.KeyContainerPermissionAccessEntry[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Permissions.KeyContainerPermissionFlags Flags 'get ' : 
    System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries 'get ' : 
  Methods:
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_AccessEntries(): PrivateScope, Public, HideBySig, SpecialName
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    VerifyFlags(KeyContainerPermissionFlags): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Permissions.PublisherIdentityPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IBuiltInPermission
  Properties:
    System.Security.Cryptography.X509Certificates.X509Certificate Certificate 'get set' : 
  Methods:
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
    set_Certificate(X509Certificate): PrivateScope, Public, HideBySig, SpecialName
    get_Certificate(): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Permissions.RegistryPermissionAccess: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Permissions.RegistryPermissionAccess NoAccess = 0 : Public, Static, Literal, HasDefault
    System.Security.Permissions.RegistryPermissionAccess Read = 1 : Public, Static, Literal, HasDefault
    System.Security.Permissions.RegistryPermissionAccess Write = 2 : Public, Static, Literal, HasDefault
    System.Security.Permissions.RegistryPermissionAccess Create = 4 : Public, Static, Literal, HasDefault
    System.Security.Permissions.RegistryPermissionAccess AllAccess = 7 : Public, Static, Literal, HasDefault
Class System.Security.Permissions.RegistryPermission: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.CodeAccessPermission
    Void .ctor(System.Security.Permissions.PermissionState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.RegistryPermissionAccess, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.RegistryPermissionAccess, System.Security.AccessControl.AccessControlActions, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Permissions.IUnrestrictedPermission
    System.Security.Permissions.IBuiltInPermission
  Methods:
    FromXml(SecurityElement): PrivateScope, Public, Virtual, HideBySig
    SetPathList(RegistryPermissionAccess, String): PrivateScope, Public, HideBySig
    SetPathList(AccessControlActions, String): PrivateScope, Assembly, HideBySig
    AddPathList(RegistryPermissionAccess, String): PrivateScope, Public, HideBySig
    AddPathList(RegistryPermissionAccess, AccessControlActions, String): PrivateScope, Public, HideBySig
    GetPathList(RegistryPermissionAccess): PrivateScope, Public, HideBySig
    IsUnrestricted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(IPermission): PrivateScope, Public, Virtual, HideBySig
    Intersect(IPermission): PrivateScope, Public, Virtual, HideBySig
    Union(IPermission): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    GetTokenIndex(): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Claims.Claim: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String, System.String, System.String, System.Security.Claims.ClaimsIdentity, System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, System.Security.Claims.ClaimsIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.String, System.String, System.Security.Claims.ClaimsIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Issuer 'get ' : 
    System.String OriginalIssuer 'get ' : 
    System.Collections.Generic.IDictionary`2[System.String,System.String] Properties 'get ' : 
    System.Security.Claims.ClaimsIdentity Subject 'get set' : 
    System.String Type 'get ' : 
    System.String Value 'get ' : 
    System.String ValueType 'get ' : 
  Methods:
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalIssuer(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    set_Subject(ClaimsIdentity): PrivateScope, Assembly, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(ClaimsIdentity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteTo(BinaryWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Claims.ClaimsIdentity: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim], System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim], System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim], System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IIdentity, System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim], System.String, System.String, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Principal.IIdentity
  Fields:
    System.String DefaultIssuer = LOCAL AUTHORITY : Public, Static, Literal, NotSerialized, HasDefault
    System.String DefaultNameClaimType = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name : Public, Static, Literal, NotSerialized, HasDefault
    System.String DefaultRoleClaimType = http://schemas.microsoft.com/ws/2008/06/identity/claims/role : Public, Static, Literal, NotSerialized, HasDefault
  Properties:
    System.String AuthenticationType 'get ' : 
    Boolean IsAuthenticated 'get ' : 
    System.Security.Claims.ClaimsIdentity Actor 'get set' : 
    System.Object BootstrapContext 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] Claims 'get ' : 
    System.Collections.ObjectModel.Collection`1[System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]] ExternalClaims 'get ' : 
    System.String Label 'get set' : 
    System.String Name 'get ' : 
    System.String NameClaimType 'get ' : 
    System.String RoleClaimType 'get ' : 
  Methods:
    get_AuthenticationType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAuthenticated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Actor(): PrivateScope, Public, HideBySig, SpecialName
    set_Actor(ClaimsIdentity): PrivateScope, Public, HideBySig, SpecialName
    get_BootstrapContext(): PrivateScope, Public, HideBySig, SpecialName
    set_BootstrapContext(Object): PrivateScope, Public, HideBySig, SpecialName
    get_Claims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExternalClaims(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NameClaimType(): PrivateScope, Public, HideBySig, SpecialName
    get_RoleClaimType(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddClaim(Claim): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddClaims(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TryRemoveClaim(Claim): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveClaim(Claim): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindAll(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindAll(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasClaim(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasClaim(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindFirst(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindFirst(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteTo(BinaryWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Claims.ClaimsPrincipal: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IPrincipal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Principal.IPrincipal
  Properties:
    System.Func`2[System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity],System.Security.Claims.ClaimsIdentity] PrimaryIdentitySelector 'get set' : 
    System.Func`1[System.Security.Claims.ClaimsPrincipal] ClaimsPrincipalSelector 'get set' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] Claims 'get ' : 
    System.Security.Claims.ClaimsPrincipal Current 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity] Identities 'get ' : 
    System.Security.Principal.IIdentity Identity 'get ' : 
  Methods:
    AddIdentity(ClaimsIdentity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PrimaryIdentitySelector(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_PrimaryIdentitySelector(Func`2): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClaimsPrincipalSelector(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ClaimsPrincipalSelector(Func`1): PrivateScope, Public, Static, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddIdentities(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Claims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    FindAll(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindAll(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindFirst(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FindFirst(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasClaim(Predicate`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasClaim(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Identities(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Identity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsInRole(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteTo(BinaryWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Claims.ClaimTypes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String ClaimTypeNamespace = http://schemas.microsoft.com/ws/2008/06/identity/claims : Assembly, Static, Literal, HasDefault
    System.String AuthenticationInstant = http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant : Public, Static, Literal, HasDefault
    System.String AuthenticationMethod = http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod : Public, Static, Literal, HasDefault
    System.String CookiePath = http://schemas.microsoft.com/ws/2008/06/identity/claims/cookiepath : Public, Static, Literal, HasDefault
    System.String DenyOnlyPrimarySid = http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarysid : Public, Static, Literal, HasDefault
    System.String DenyOnlyPrimaryGroupSid = http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarygroupsid : Public, Static, Literal, HasDefault
    System.String DenyOnlyWindowsDeviceGroup = http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlywindowsdevicegroup : Public, Static, Literal, HasDefault
    System.String Dsa = http://schemas.microsoft.com/ws/2008/06/identity/claims/dsa : Public, Static, Literal, HasDefault
    System.String Expiration = http://schemas.microsoft.com/ws/2008/06/identity/claims/expiration : Public, Static, Literal, HasDefault
    System.String Expired = http://schemas.microsoft.com/ws/2008/06/identity/claims/expired : Public, Static, Literal, HasDefault
    System.String GroupSid = http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid : Public, Static, Literal, HasDefault
    System.String IsPersistent = http://schemas.microsoft.com/ws/2008/06/identity/claims/ispersistent : Public, Static, Literal, HasDefault
    System.String PrimaryGroupSid = http://schemas.microsoft.com/ws/2008/06/identity/claims/primarygroupsid : Public, Static, Literal, HasDefault
    System.String PrimarySid = http://schemas.microsoft.com/ws/2008/06/identity/claims/primarysid : Public, Static, Literal, HasDefault
    System.String Role = http://schemas.microsoft.com/ws/2008/06/identity/claims/role : Public, Static, Literal, HasDefault
    System.String SerialNumber = http://schemas.microsoft.com/ws/2008/06/identity/claims/serialnumber : Public, Static, Literal, HasDefault
    System.String UserData = http://schemas.microsoft.com/ws/2008/06/identity/claims/userdata : Public, Static, Literal, HasDefault
    System.String Version = http://schemas.microsoft.com/ws/2008/06/identity/claims/version : Public, Static, Literal, HasDefault
    System.String WindowsAccountName = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname : Public, Static, Literal, HasDefault
    System.String WindowsDeviceClaim = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdeviceclaim : Public, Static, Literal, HasDefault
    System.String WindowsDeviceGroup = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdevicegroup : Public, Static, Literal, HasDefault
    System.String WindowsUserClaim = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsuserclaim : Public, Static, Literal, HasDefault
    System.String WindowsFqbnVersion = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsfqbnversion : Public, Static, Literal, HasDefault
    System.String WindowsSubAuthority = http://schemas.microsoft.com/ws/2008/06/identity/claims/windowssubauthority : Public, Static, Literal, HasDefault
    System.String ClaimType2005Namespace = http://schemas.xmlsoap.org/ws/2005/05/identity/claims : Assembly, Static, Literal, HasDefault
    System.String Anonymous = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/anonymous : Public, Static, Literal, HasDefault
    System.String Authentication = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authentication : Public, Static, Literal, HasDefault
    System.String AuthorizationDecision = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authorizationdecision : Public, Static, Literal, HasDefault
    System.String Country = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country : Public, Static, Literal, HasDefault
    System.String DateOfBirth = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth : Public, Static, Literal, HasDefault
    System.String Dns = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dns : Public, Static, Literal, HasDefault
    System.String DenyOnlySid = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/denyonlysid : Public, Static, Literal, HasDefault
    System.String Email = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress : Public, Static, Literal, HasDefault
    System.String Gender = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender : Public, Static, Literal, HasDefault
    System.String GivenName = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname : Public, Static, Literal, HasDefault
    System.String Hash = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/hash : Public, Static, Literal, HasDefault
    System.String HomePhone = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/homephone : Public, Static, Literal, HasDefault
    System.String Locality = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality : Public, Static, Literal, HasDefault
    System.String MobilePhone = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobilephone : Public, Static, Literal, HasDefault
    System.String Name = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name : Public, Static, Literal, HasDefault
    System.String NameIdentifier = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier : Public, Static, Literal, HasDefault
    System.String OtherPhone = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/otherphone : Public, Static, Literal, HasDefault
    System.String PostalCode = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode : Public, Static, Literal, HasDefault
    System.String Rsa = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa : Public, Static, Literal, HasDefault
    System.String Sid = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/sid : Public, Static, Literal, HasDefault
    System.String Spn = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/spn : Public, Static, Literal, HasDefault
    System.String StateOrProvince = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/stateorprovince : Public, Static, Literal, HasDefault
    System.String StreetAddress = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress : Public, Static, Literal, HasDefault
    System.String Surname = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname : Public, Static, Literal, HasDefault
    System.String System = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/system : Public, Static, Literal, HasDefault
    System.String Thumbprint = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/thumbprint : Public, Static, Literal, HasDefault
    System.String Upn = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn : Public, Static, Literal, HasDefault
    System.String Uri = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/uri : Public, Static, Literal, HasDefault
    System.String Webpage = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/webpage : Public, Static, Literal, HasDefault
    System.String X500DistinguishedName = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/x500distinguishedname : Public, Static, Literal, HasDefault
    System.String ClaimType2009Namespace = http://schemas.xmlsoap.org/ws/2009/09/identity/claims : Assembly, Static, Literal, HasDefault
    System.String Actor = http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor : Public, Static, Literal, HasDefault
Class System.Security.Claims.ClaimValueTypes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Base64Binary = http://www.w3.org/2001/XMLSchema#base64Binary : Public, Static, Literal, HasDefault
    System.String Base64Octet = http://www.w3.org/2001/XMLSchema#base64Octet : Public, Static, Literal, HasDefault
    System.String Boolean = http://www.w3.org/2001/XMLSchema#boolean : Public, Static, Literal, HasDefault
    System.String Date = http://www.w3.org/2001/XMLSchema#date : Public, Static, Literal, HasDefault
    System.String DateTime = http://www.w3.org/2001/XMLSchema#dateTime : Public, Static, Literal, HasDefault
    System.String Double = http://www.w3.org/2001/XMLSchema#double : Public, Static, Literal, HasDefault
    System.String Fqbn = http://www.w3.org/2001/XMLSchema#fqbn : Public, Static, Literal, HasDefault
    System.String HexBinary = http://www.w3.org/2001/XMLSchema#hexBinary : Public, Static, Literal, HasDefault
    System.String Integer = http://www.w3.org/2001/XMLSchema#integer : Public, Static, Literal, HasDefault
    System.String Integer32 = http://www.w3.org/2001/XMLSchema#integer32 : Public, Static, Literal, HasDefault
    System.String Integer64 = http://www.w3.org/2001/XMLSchema#integer64 : Public, Static, Literal, HasDefault
    System.String Sid = http://www.w3.org/2001/XMLSchema#sid : Public, Static, Literal, HasDefault
    System.String String = http://www.w3.org/2001/XMLSchema#string : Public, Static, Literal, HasDefault
    System.String Time = http://www.w3.org/2001/XMLSchema#time : Public, Static, Literal, HasDefault
    System.String UInteger32 = http://www.w3.org/2001/XMLSchema#uinteger32 : Public, Static, Literal, HasDefault
    System.String UInteger64 = http://www.w3.org/2001/XMLSchema#uinteger64 : Public, Static, Literal, HasDefault
    System.String DnsName = http://schemas.xmlsoap.org/claims/dns : Public, Static, Literal, HasDefault
    System.String Email = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress : Public, Static, Literal, HasDefault
    System.String Rsa = http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa : Public, Static, Literal, HasDefault
    System.String UpnName = http://schemas.xmlsoap.org/claims/UPN : Public, Static, Literal, HasDefault
    System.String DsaKeyValue = http://www.w3.org/2000/09/xmldsig#DSAKeyValue : Public, Static, Literal, HasDefault
    System.String KeyInfo = http://www.w3.org/2000/09/xmldsig#KeyInfo : Public, Static, Literal, HasDefault
    System.String RsaKeyValue = http://www.w3.org/2000/09/xmldsig#RSAKeyValue : Public, Static, Literal, HasDefault
    System.String DaytimeDuration = http://www.w3.org/TR/2002/WD-xquery-operators-20020816#dayTimeDuration : Public, Static, Literal, HasDefault
    System.String YearMonthDuration = http://www.w3.org/TR/2002/WD-xquery-operators-20020816#yearMonthDuration : Public, Static, Literal, HasDefault
    System.String Rfc822Name = urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name : Public, Static, Literal, HasDefault
    System.String X500Name = urn:oasis:names:tc:xacml:1.0:data-type:x500Name : Public, Static, Literal, HasDefault
Class System.Security.Claims.RoleClaimProvider: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.String, System.String[], System.Security.Claims.ClaimsIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] Claims 'get ' : 
  Methods:
    get_Claims(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Principal.GenericIdentity: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Security.Claims.ClaimsIdentity
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] Claims 'get ' : 
    System.String Name 'get ' : 
    System.String AuthenticationType 'get ' : 
    Boolean IsAuthenticated 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_Claims(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuthenticationType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsAuthenticated(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Security.Principal.GenericPrincipal: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Security.Claims.ClaimsPrincipal
    Void .ctor(System.Security.Principal.IIdentity, System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Principal.IIdentity Identity 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsInRole(String): PrivateScope, Public, Virtual, HideBySig
Interface System.Security.Principal.IIdentity: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.String Name 'get ' : 
    System.String AuthenticationType 'get ' : 
    Boolean IsAuthenticated 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AuthenticationType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsAuthenticated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Security.Principal.IPrincipal: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Security.Principal.IIdentity Identity 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsInRole(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Principal.PrincipalPolicy: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.PrincipalPolicy UnauthenticatedPrincipal = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.PrincipalPolicy NoPrincipal = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.PrincipalPolicy WindowsPrincipal = 2 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.TokenAccessLevels: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.TokenAccessLevels AssignPrimary = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels Duplicate = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels Impersonate = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels Query = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels QuerySource = 16 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels AdjustPrivileges = 32 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels AdjustGroups = 64 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels AdjustDefault = 128 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels AdjustSessionId = 256 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels Read = 131080 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels Write = 131296 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels AllAccess = 983551 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenAccessLevels MaximumAllowed = 33554432 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.TokenImpersonationLevel: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.TokenImpersonationLevel None = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenImpersonationLevel Anonymous = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenImpersonationLevel Identification = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenImpersonationLevel Impersonation = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenImpersonationLevel Delegation = 4 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.WindowsAccountType: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.WindowsAccountType Normal = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsAccountType Guest = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsAccountType System = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsAccountType Anonymous = 3 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.WinSecurityContext: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.WinSecurityContext Thread = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.WinSecurityContext Process = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.WinSecurityContext Both = 3 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.ImpersonationQueryResult: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.ImpersonationQueryResult Impersonated = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.ImpersonationQueryResult NotImpersonated = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.ImpersonationQueryResult Failed = 2 : Public, Static, Literal, HasDefault
Class System.Security.Principal.WindowsIdentity: AutoLayout, AnsiClass, Class, Public, Serializable
  :System.Security.Claims.ClaimsIdentity
    Void .ctor(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(IntPtr, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(IntPtr, System.String, System.Security.Principal.WindowsAccountType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(IntPtr, System.String, System.Security.Principal.WindowsAccountType, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.Security.Claims.ClaimsIdentity, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
    System.IDisposable
  Fields:
    System.String DefaultIssuer = AD AUTHORITY : Public, Static, Literal, NotSerialized, HasDefault
  Properties:
    System.String AuthenticationType 'get ' : 
    System.Security.Principal.TokenImpersonationLevel ImpersonationLevel 'get ' : 
    Boolean IsAuthenticated 'get ' : 
    Boolean IsGuest 'get ' : 
    Boolean IsSystem 'get ' : 
    Boolean IsAnonymous 'get ' : 
    System.String Name 'get ' : 
    System.Security.Principal.SecurityIdentifier Owner 'get ' : 
    System.Security.Principal.SecurityIdentifier User 'get ' : 
    System.Security.Principal.IdentityReferenceCollection Groups 'get ' : 
    IntPtr Token 'get ' : 
    Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] UserClaims 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] DeviceClaims 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] Claims 'get ' : 
  Methods:
    GetCurrent(): PrivateScope, Public, Static, HideBySig, HasSecurity
    GetCurrent(Boolean): PrivateScope, Public, Static, HideBySig, HasSecurity
    GetCurrent(TokenAccessLevels): PrivateScope, Public, Static, HideBySig, HasSecurity
    GetAnonymous(): PrivateScope, Public, Static, HideBySig
    get_AuthenticationType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_ImpersonationLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAuthenticated(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsGuest(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSystem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsAnonymous(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetName(): PrivateScope, Assembly, HideBySig, RequireSecObject
    get_Owner(): PrivateScope, Public, HideBySig, SpecialName
    get_User(): PrivateScope, Public, HideBySig, SpecialName
    get_Groups(): PrivateScope, Public, HideBySig, SpecialName
    get_Token(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName, HasSecurity
    RunImpersonated(SafeAccessTokenHandle, Action): PrivateScope, Public, Static, HideBySig, RequireSecObject
    RunImpersonated(SafeAccessTokenHandle, Func`1): PrivateScope, Public, Static, HideBySig, RequireSecObject
    Impersonate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, RequireSecObject
    Impersonate(IntPtr): PrivateScope, Public, Static, HideBySig, HasSecurity, RequireSecObject
    Impersonate(StackCrawlMark&): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AccessToken(): PrivateScope, Public, HideBySig, SpecialName
    SafeRevertToSelf(StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    SafeImpersonate(SafeAccessTokenHandle, WindowsIdentity, StackCrawlMark&): PrivateScope, Assembly, Static, HideBySig
    GetCurrentThreadWI(): PrivateScope, Assembly, Static, HideBySig
    UpdateThreadWI(WindowsIdentity): PrivateScope, Assembly, Static, HideBySig
    GetCurrentInternal(TokenAccessLevels, Boolean): PrivateScope, Assembly, Static, HideBySig
    GetSpecialSerializationCtor(): PrivateScope, Assembly, Static, HideBySig
    GetCurrentThreadToken(TokenAccessLevels, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    QueryImpersonation(): PrivateScope, Assembly, Static, HideBySig
    GetTokenInternal(): PrivateScope, Assembly, HideBySig
    CloneAsBase(): PrivateScope, Assembly, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_UserClaims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeviceClaims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Claims(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Security.Principal.KerbLogonSubmitType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.KerbLogonSubmitType KerbInteractiveLogon = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbSmartCardLogon = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbWorkstationUnlockLogon = 7 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbSmartCardUnlockLogon = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbProxyLogon = 9 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbTicketLogon = 10 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbTicketUnlockLogon = 11 : Public, Static, Literal, HasDefault
    System.Security.Principal.KerbLogonSubmitType KerbS4ULogon = 12 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.SecurityLogonType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.SecurityLogonType Interactive = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.SecurityLogonType Network = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.SecurityLogonType Batch = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.SecurityLogonType Service = 5 : Public, Static, Literal, HasDefault
    System.Security.Principal.SecurityLogonType Proxy = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.SecurityLogonType Unlock = 7 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.TokenType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.TokenType TokenPrimary = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenType TokenImpersonation = 2 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.TokenInformationClass: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.TokenInformationClass TokenUser = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenGroups = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenPrivileges = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenOwner = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenPrimaryGroup = 5 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenDefaultDacl = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenSource = 7 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenType = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenImpersonationLevel = 9 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenStatistics = 10 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenRestrictedSids = 11 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenSessionId = 12 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenGroupsAndPrivileges = 13 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenSessionReference = 14 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenSandBoxInert = 15 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenAuditPolicy = 16 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenOrigin = 17 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenElevationType = 18 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenLinkedToken = 19 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenElevation = 20 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenHasRestrictions = 21 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenAccessInformation = 22 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenVirtualizationAllowed = 23 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenVirtualizationEnabled = 24 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenIntegrityLevel = 25 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenUIAccess = 26 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenMandatoryPolicy = 27 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenLogonSid = 28 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenIsAppContainer = 29 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenCapabilities = 30 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenAppContainerSid = 31 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenAppContainerNumber = 32 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenUserClaimAttributes = 33 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenDeviceClaimAttributes = 34 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenRestrictedUserClaimAttributes = 35 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenRestrictedDeviceClaimAttributes = 36 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenDeviceGroups = 37 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass TokenRestrictedDeviceGroups = 38 : Public, Static, Literal, HasDefault
    System.Security.Principal.TokenInformationClass MaxTokenInfoClass = 39 : Public, Static, Literal, HasDefault
Class System.Security.Principal.WindowsImpersonationContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle, System.Security.Principal.WindowsIdentity, Boolean, System.Security.FrameSecurityDescriptor): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Undo(): PrivateScope, Public, HideBySig
    UndoNoThrow(): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Security.Principal.WindowsBuiltInRole: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.WindowsBuiltInRole Administrator = 544 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole User = 545 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole Guest = 546 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole PowerUser = 547 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole AccountOperator = 548 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole SystemOperator = 549 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole PrintOperator = 550 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole BackupOperator = 551 : Public, Static, Literal, HasDefault
    System.Security.Principal.WindowsBuiltInRole Replicator = 552 : Public, Static, Literal, HasDefault
Class System.Security.Principal.WindowsPrincipal: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Security.Claims.ClaimsPrincipal
    Void .ctor(System.Security.Principal.WindowsIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Principal.IIdentity Identity 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] UserClaims 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim] DeviceClaims 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsInRole(String): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_UserClaims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeviceClaims(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsInRole(WindowsBuiltInRole): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInRole(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsInRole(SecurityIdentifier): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Principal.IdentityReference: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsValidTargetType(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Translate(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig, Abstract
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig, Abstract
    op_Equality(IdentityReference, IdentityReference): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(IdentityReference, IdentityReference): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Principal.IdentityReferenceCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[System.Security.Principal.IdentityReference]
    System.Collections.Generic.IEnumerable`1[System.Security.Principal.IdentityReference]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Security.Principal.IdentityReference Item [Int32] 'get set' : 
    System.Collections.Generic.List`1[System.Security.Principal.IdentityReference] Identities 'get ' : 
  Methods:
    CopyTo(IdentityReference[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(IdentityReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(IdentityReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(IdentityReference): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, IdentityReference): PrivateScope, Public, HideBySig, SpecialName
    get_Identities(): PrivateScope, Assembly, HideBySig, SpecialName
    Translate(Type): PrivateScope, Public, HideBySig
    Translate(Type, Boolean): PrivateScope, Public, HideBySig, HasSecurity
Class System.Security.Principal.IdentityReferenceEnumerator: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Security.Principal.IdentityReferenceCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Security.Principal.IdentityReference]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Security.Principal.IdentityReference Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Principal.NTAccount: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Principal.IdentityReference
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MaximumAccountNameLength = 256 : Assembly, Static, Literal, HasDefault
    Int32 MaximumDomainNameLength = 255 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsValidTargetType(Type): PrivateScope, Public, Virtual, HideBySig
    Translate(Type): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Translate(IdentityReferenceCollection, Type, Boolean): PrivateScope, Assembly, Static, HideBySig
    Translate(IdentityReferenceCollection, Type, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    op_Equality(NTAccount, NTAccount): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(NTAccount, NTAccount): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Security.Principal.IdentifierAuthority: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.IdentifierAuthority NullAuthority = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority WorldAuthority = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority LocalAuthority = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority CreatorAuthority = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority NonUniqueAuthority = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority NTAuthority = 5 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority SiteServerAuthority = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority InternetSiteAuthority = 7 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority ExchangeAuthority = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.IdentifierAuthority ResourceManagerAuthority = 9 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.SidNameUse: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.SidNameUse User = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Group = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Domain = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Alias = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse WellKnownGroup = 5 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse DeletedAccount = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Invalid = 7 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Unknown = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.SidNameUse Computer = 9 : Public, Static, Literal, HasDefault
Struct System.Security.Principal.WellKnownSidType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.WellKnownSidType NullSid = 0 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType WorldSid = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType LocalSid = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType CreatorOwnerSid = 3 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType CreatorGroupSid = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType CreatorOwnerServerSid = 5 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType CreatorGroupServerSid = 6 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType NTAuthoritySid = 7 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType DialupSid = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType NetworkSid = 9 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BatchSid = 10 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType InteractiveSid = 11 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType ServiceSid = 12 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AnonymousSid = 13 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType ProxySid = 14 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType EnterpriseControllersSid = 15 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType SelfSid = 16 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AuthenticatedUserSid = 17 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType RestrictedCodeSid = 18 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType TerminalServerSid = 19 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType RemoteLogonIdSid = 20 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType LogonIdsSid = 21 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType LocalSystemSid = 22 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType LocalServiceSid = 23 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType NetworkServiceSid = 24 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinDomainSid = 25 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinAdministratorsSid = 26 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinUsersSid = 27 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinGuestsSid = 28 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinPowerUsersSid = 29 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinAccountOperatorsSid = 30 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinSystemOperatorsSid = 31 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinPrintOperatorsSid = 32 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinBackupOperatorsSid = 33 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinReplicatorSid = 34 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinPreWindows2000CompatibleAccessSid = 35 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinRemoteDesktopUsersSid = 36 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinNetworkConfigurationOperatorsSid = 37 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountAdministratorSid = 38 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountGuestSid = 39 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountKrbtgtSid = 40 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountDomainAdminsSid = 41 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountDomainUsersSid = 42 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountDomainGuestsSid = 43 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountComputersSid = 44 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountControllersSid = 45 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountCertAdminsSid = 46 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountSchemaAdminsSid = 47 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountEnterpriseAdminsSid = 48 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountPolicyAdminsSid = 49 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType AccountRasAndIasServersSid = 50 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType NtlmAuthenticationSid = 51 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType DigestAuthenticationSid = 52 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType SChannelAuthenticationSid = 53 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType ThisOrganizationSid = 54 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType OtherOrganizationSid = 55 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinIncomingForestTrustBuildersSid = 56 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinPerformanceMonitoringUsersSid = 57 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinPerformanceLoggingUsersSid = 58 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType BuiltinAuthorizationAccessSid = 59 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType WinBuiltinTerminalServerLicenseServersSid = 60 : Public, Static, Literal, HasDefault
    System.Security.Principal.WellKnownSidType MaxDefined = 60 : Public, Static, Literal, HasDefault
Class System.Security.Principal.SecurityIdentifier: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Security.Principal.IdentityReference
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.WellKnownSidType, System.Security.Principal.SecurityIdentifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.SecurityIdentifier, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentifierAuthority, Int32[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[System.Security.Principal.SecurityIdentifier]
  Fields:
    Int64 MaxIdentifierAuthority : Assembly, Static, InitOnly
    Byte MaxSubAuthorities : Assembly, Static, InitOnly
    Int32 MinBinaryLength : Public, Static, InitOnly
    Int32 MaxBinaryLength : Public, Static, InitOnly
  Properties:
    Byte Revision 'get ' : 
    Byte[] BinaryForm 'get ' : 
    System.Security.Principal.IdentifierAuthority IdentifierAuthority 'get ' : 
    Int32 SubAuthorityCount 'get ' : 
    Int32 BinaryLength 'get ' : 
    System.Security.Principal.SecurityIdentifier AccountDomainSid 'get ' : 
    System.String Value 'get ' : 
  Methods:
    get_Revision(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_BinaryForm(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IdentifierAuthority(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SubAuthorityCount(): PrivateScope, Assembly, HideBySig, SpecialName
    get_BinaryLength(): PrivateScope, Public, HideBySig, SpecialName
    get_AccountDomainSid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(SecurityIdentifier): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsValidTargetTypeStatic(Type): PrivateScope, Assembly, Static, HideBySig
    IsValidTargetType(Type): PrivateScope, Public, Virtual, HideBySig
    GetAccountDomainSid(): PrivateScope, Assembly, HideBySig
    IsAccountSid(): PrivateScope, Public, HideBySig
    Translate(Type): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    op_Equality(SecurityIdentifier, SecurityIdentifier): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SecurityIdentifier, SecurityIdentifier): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(SecurityIdentifier): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetSubAuthority(Int32): PrivateScope, Assembly, HideBySig
    IsWellKnown(WellKnownSidType): PrivateScope, Public, HideBySig
    GetBinaryForm(Byte[], Int32): PrivateScope, Public, HideBySig
    IsEqualDomainSid(SecurityIdentifier): PrivateScope, Public, HideBySig
    Translate(IdentityReferenceCollection, Type, Boolean): PrivateScope, Assembly, Static, HideBySig
    Translate(IdentityReferenceCollection, Type, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Principal.PolicyRights: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Principal.PolicyRights POLICY_VIEW_LOCAL_INFORMATION = 1 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_VIEW_AUDIT_INFORMATION = 2 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_GET_PRIVATE_INFORMATION = 4 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_TRUST_ADMIN = 8 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_CREATE_ACCOUNT = 16 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_CREATE_SECRET = 32 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_CREATE_PRIVILEGE = 64 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_SET_DEFAULT_QUOTA_LIMITS = 128 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_SET_AUDIT_REQUIREMENTS = 256 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_AUDIT_LOG_ADMIN = 512 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_SERVER_ADMIN = 1024 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_LOOKUP_NAMES = 2048 : Public, Static, Literal, HasDefault
    System.Security.Principal.PolicyRights POLICY_NOTIFICATION = 4096 : Public, Static, Literal, HasDefault
Class System.Security.Principal.Win32: AutoLayout, AnsiClass, Class, Abstract, Sealed
  Fields:
    Int32 FALSE = 0 : Assembly, Static, Literal, HasDefault
    Int32 TRUE = 1 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean LsaLookupNames2Supported 'get ' : 
    Boolean WellKnownSidApisSupported 'get ' : 
  Methods:
    InitializeReferencedDomainsPointer(SafeLsaMemoryHandle): PrivateScope, Assembly, Static, HideBySig
    ImpersonateLoggedOnUser(SafeAccessTokenHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    OpenThreadToken(TokenAccessLevels, WinSecurityContext, SafeAccessTokenHandle&(Out)): PrivateScope, Assembly, Static, HideBySig
    RevertToSelf(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    get_LsaLookupNames2Supported(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_WellKnownSidApisSupported(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    LsaOpenPolicy(String, PolicyRights): PrivateScope, Assembly, Static, HideBySig
    ConvertIntPtrSidToByteArraySid(IntPtr): PrivateScope, Assembly, Static, HideBySig
    CreateSidFromString(String, Byte[]&(Out)): PrivateScope, Assembly, Static, HideBySig
    CreateWellKnownSid(WellKnownSidType, SecurityIdentifier, Byte[]&(Out)): PrivateScope, Assembly, Static, HideBySig
    IsEqualDomainSid(SecurityIdentifier, SecurityIdentifier): PrivateScope, Assembly, Static, HideBySig
    GetWindowsAccountDomainSid(SecurityIdentifier, SecurityIdentifier&(Out)): PrivateScope, Assembly, Static, HideBySig
    IsWellKnownSid(SecurityIdentifier, WellKnownSidType): PrivateScope, Assembly, Static, HideBySig
    SetThreadToken(SafeAccessTokenHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Class System.Security.Principal.IdentityNotMappedException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Security.Principal.IdentityReferenceCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Principal.IdentityReferenceCollection UnmappedIdentities 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
    get_UnmappedIdentities(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Policy.AllMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Methods:
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.AppDomainEvidenceFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.AppDomain): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IRuntimeEvidenceFactory
  Properties:
    System.Security.IEvidenceFactory Target 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetFactorySuppliedEvidence(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateEvidence(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Policy.ApplicationDirectory: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Directory 'get ' : 
  Methods:
    get_Directory(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.ApplicationDirectoryMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Methods:
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.ApplicationSecurityInfo: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.ActivationContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.ApplicationId ApplicationId 'get set' : 
    System.ApplicationId DeploymentId 'get set' : 
    System.Security.PermissionSet DefaultRequestSet 'get set' : 
    System.Security.Policy.Evidence ApplicationEvidence 'get set' : 
  Methods:
    get_ApplicationId(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationId(ApplicationId): PrivateScope, Public, HideBySig, SpecialName
    get_DeploymentId(): PrivateScope, Public, HideBySig, SpecialName
    set_DeploymentId(ApplicationId): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultRequestSet(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultRequestSet(PermissionSet): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationEvidence(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationEvidence(Evidence): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Policy.ApplicationSecurityManager: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts 'get ' : 
    System.Security.Policy.IApplicationTrustManager ApplicationTrustManager 'get ' : 
  Methods:
    DetermineApplicationTrust(ActivationContext, TrustManagerContext): PrivateScope, Public, Static, HideBySig, HasSecurity
    get_UserApplicationTrusts(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    get_ApplicationTrustManager(): PrivateScope, Public, Static, HideBySig, SpecialName, HasSecurity
    DetermineApplicationTrustInternal(ActivationContext, TrustManagerContext): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Policy.ApplicationVersionMatch: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Policy.ApplicationVersionMatch MatchExactVersion = 0 : Public, Static, Literal, HasDefault
    System.Security.Policy.ApplicationVersionMatch MatchAllVersions = 1 : Public, Static, Literal, HasDefault
Class System.Security.Policy.ApplicationTrust: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.ApplicationIdentity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet, System.Collections.Generic.IEnumerable`1[System.Security.Policy.StrongName]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityEncodable
  Properties:
    System.ApplicationIdentity ApplicationIdentity 'get set' : 
    System.Security.Policy.PolicyStatement DefaultGrantSet 'get set' : 
    System.Collections.Generic.IList`1[System.Security.Policy.StrongName] FullTrustAssemblies 'get ' : 
    Boolean IsApplicationTrustedToRun 'get set' : 
    Boolean Persist 'get set' : 
    System.Object ExtraInfo 'get set' : 
  Methods:
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ApplicationIdentity(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationIdentity(ApplicationIdentity): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultGrantSet(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultGrantSet(PolicyStatement): PrivateScope, Public, HideBySig, SpecialName
    get_FullTrustAssemblies(): PrivateScope, Public, HideBySig, SpecialName
    get_IsApplicationTrustedToRun(): PrivateScope, Public, HideBySig, SpecialName
    set_IsApplicationTrustedToRun(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Persist(): PrivateScope, Public, HideBySig, SpecialName
    set_Persist(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ExtraInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtraInfo(Object): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.Security.Policy.ApplicationTrustCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Security.Policy.ApplicationTrust Item [Int32] 'get ' : 
    System.Security.Policy.ApplicationTrust Item [System.String] 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    Add(ApplicationTrust): PrivateScope, Public, HideBySig
    AddRange(ApplicationTrust[]): PrivateScope, Public, HideBySig
    AddRange(ApplicationTrustCollection): PrivateScope, Public, HideBySig
    Find(ApplicationIdentity, ApplicationVersionMatch): PrivateScope, Public, HideBySig
    Remove(ApplicationIdentity, ApplicationVersionMatch): PrivateScope, Public, HideBySig
    Remove(ApplicationTrust): PrivateScope, Public, HideBySig
    RemoveRange(ApplicationTrust[]): PrivateScope, Public, HideBySig
    RemoveRange(ApplicationTrustCollection): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    CopyTo(ApplicationTrust[], Int32): PrivateScope, Public, HideBySig
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Security.Policy.ApplicationTrustEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Security.Policy.ApplicationTrustCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Security.Policy.ApplicationTrust Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Policy.AssemblyEvidenceFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    System.Security.Policy.IRuntimeEvidenceFactory
  Properties:
    Microsoft.Win32.SafeHandles.SafePEFileHandle PEFile 'get ' : 
    System.Security.IEvidenceFactory Target 'get ' : 
  Methods:
    get_PEFile(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GenerateEvidence(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetFactorySuppliedEvidence(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface System.Security.Policy.IUnionSemanticCodeGroup: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    InternalResolve(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Policy.CodeGroup: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition, System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IList Children 'get set' : 
    System.Security.Policy.IMembershipCondition MembershipCondition 'get set' : 
    System.Security.Policy.PolicyStatement PolicyStatement 'get set' : 
    System.String Name 'get set' : 
    System.String Description 'get set' : 
    System.String PermissionSetName 'get ' : 
    System.String AttributeString 'get ' : 
    System.String MergeLogic 'get ' : 
  Methods:
    AddChild(CodeGroup): PrivateScope, Public, HideBySig
    AddChildInternal(CodeGroup): PrivateScope, Assembly, HideBySig
    RemoveChild(CodeGroup): PrivateScope, Public, HideBySig
    get_Children(): PrivateScope, Public, HideBySig, SpecialName
    set_Children(IList): PrivateScope, Public, HideBySig, SpecialName
    GetChildrenInternal(): PrivateScope, Assembly, HideBySig
    get_MembershipCondition(): PrivateScope, Public, HideBySig, SpecialName
    set_MembershipCondition(IMembershipCondition): PrivateScope, Public, HideBySig, SpecialName
    get_PolicyStatement(): PrivateScope, Public, HideBySig, SpecialName
    set_PolicyStatement(PolicyStatement): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    Resolve(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_PermissionSetName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AttributeString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MergeLogic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToXml(): PrivateScope, Public, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, HideBySig
    ToXml(PolicyLevel): PrivateScope, Public, HideBySig
    GetTypeName(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    ToXml(PolicyLevel, String): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, HideBySig
    ParseChildren(): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CodeGroup, Boolean): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.CodeGroupPositionMarker: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32, Int32, System.Security.SecurityElement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 elementIndex : Assembly
    Int32 groupIndex : Assembly
    System.Security.SecurityElement element : Assembly
Class System.Security.Policy.Evidence: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.Evidence): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object[], System.Object[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(System.Security.Policy.EvidenceBase[], System.Security.Policy.EvidenceBase[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IRuntimeEvidenceFactory): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Type[] RuntimeEvidenceTypes 'get ' : 
    Boolean IsUnmodified 'get ' : 
    Boolean Locked 'get set' : 
    System.Security.Policy.IRuntimeEvidenceFactory Target 'get set' : 
    Int32 Count 'get ' :  (Obsolete)
    Int32 RawCount 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_RuntimeEvidenceTypes(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    AddHost(Object): PrivateScope, Public, HideBySig (Obsolete)
    AddAssembly(Object): PrivateScope, Public, HideBySig (Obsolete)
    AddAssemblyEvidence(T): PrivateScope, Public, HideBySig
    AddHostEvidence(T): PrivateScope, Public, HideBySig
    get_IsUnmodified(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Target(IRuntimeEvidenceFactory): PrivateScope, Assembly, HideBySig, SpecialName
    GetEvidenceTypeDescriptor(Type): PrivateScope, Assembly, HideBySig
    Merge(Evidence): PrivateScope, Public, HideBySig
    MergeWithNoDuplicates(Evidence): PrivateScope, Assembly, HideBySig
    RawSerialize(): PrivateScope, Assembly, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetHostEnumerator(): PrivateScope, Public, HideBySig
    GetAssemblyEnumerator(): PrivateScope, Public, HideBySig
    GetRawAssemblyEvidenceEnumerator(): PrivateScope, Assembly, HideBySig
    GetRawHostEvidenceEnumerator(): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetAssemblyEvidence(): PrivateScope, Public, HideBySig
    GetAssemblyEvidence(Type): PrivateScope, Assembly, HideBySig
    GetHostEvidence(): PrivateScope, Public, HideBySig
    GetDelayEvaluatedHostEvidence(): PrivateScope, Assembly, HideBySig
    GetHostEvidence(Type): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_RawCount(): PrivateScope, Assembly, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    RemoveType(Type): PrivateScope, Public, HideBySig
    MarkAllEvidenceAsUsed(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.EvidenceBase: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Interface System.Security.Policy.ILegacyEvidenceAdapter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Object EvidenceObject 'get ' : 
    System.Type EvidenceType 'get ' : 
  Methods:
    get_EvidenceObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EvidenceType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Security.Policy.LegacyEvidenceWrapper: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.ILegacyEvidenceAdapter
  Properties:
    System.Object EvidenceObject 'get ' : 
    System.Type EvidenceType 'get ' : 
  Methods:
    get_EvidenceObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EvidenceType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.Security.Policy.LegacyEvidenceList: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Security.Policy.EvidenceBase]
    System.Collections.IEnumerable
    System.Security.Policy.ILegacyEvidenceAdapter
  Properties:
    System.Object EvidenceObject 'get ' : 
    System.Type EvidenceType 'get ' : 
  Methods:
    get_EvidenceObject(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EvidenceType(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(EvidenceBase): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class System.Security.Policy.EvidenceTypeDescriptor: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Policy.EvidenceBase AssemblyEvidence 'get set' : 
    Boolean Generated 'get set' : 
    Boolean HostCanGenerate 'get set' : 
    System.Security.Policy.EvidenceBase HostEvidence 'get set' : 
  Methods:
    get_AssemblyEvidence(): PrivateScope, Public, HideBySig, SpecialName
    set_AssemblyEvidence(EvidenceBase): PrivateScope, Public, HideBySig, SpecialName
    get_Generated(): PrivateScope, Public, HideBySig, SpecialName
    set_Generated(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HostCanGenerate(): PrivateScope, Public, HideBySig, SpecialName
    set_HostCanGenerate(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HostEvidence(): PrivateScope, Public, HideBySig, SpecialName
    set_HostEvidence(EvidenceBase): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
Class System.Security.Policy.FileCodeGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.CodeGroup
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition, System.Security.Permissions.FileIOPermissionAccess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IUnionSemanticCodeGroup
  Properties:
    System.String MergeLogic 'get ' : 
    System.String PermissionSetName 'get ' : 
    System.String AttributeString 'get ' : 
  Methods:
    Resolve(Evidence): PrivateScope, Public, Virtual, HideBySig
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, Virtual, HideBySig
    CalculatePolicy(Url): PrivateScope, Assembly, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_MergeLogic(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PermissionSetName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AttributeString(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetTypeName(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Security.Policy.FirstMatchCodeGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit (Obsolete)
  :System.Security.Policy.CodeGroup
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition, System.Security.Policy.PolicyStatement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String MergeLogic 'get ' : 
  Methods:
    Resolve(Evidence): PrivateScope, Public, Virtual, HideBySig
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_MergeLogic(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetTypeName(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Interface System.Security.Policy.IIdentityPermissionFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateIdentityPermission(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.Policy.IConstantMembershipCondition: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
Interface System.Security.Policy.IDelayEvaluatedEvidence: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    Boolean IsVerified 'get ' : 
    Boolean WasUsed 'get ' : 
  Methods:
    get_IsVerified(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WasUsed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MarkUsed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.Policy.IMembershipCondition: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
  Methods:
    Check(Evidence): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Equals(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.Policy.IReportMatchMembershipCondition: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
  Methods:
    Check(Evidence, Object&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.Policy.IRuntimeEvidenceFactory: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Properties:
    System.Security.IEvidenceFactory Target 'get ' : 
  Methods:
    get_Target(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetFactorySuppliedEvidence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GenerateEvidence(Type): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Security.Policy.IApplicationTrustManager: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Security.ISecurityEncodable
  Methods:
    DetermineApplicationTrust(ActivationContext, TrustManagerContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Policy.TrustManagerUIContext: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Policy.TrustManagerUIContext Install = 0 : Public, Static, Literal, HasDefault
    System.Security.Policy.TrustManagerUIContext Upgrade = 1 : Public, Static, Literal, HasDefault
    System.Security.Policy.TrustManagerUIContext Run = 2 : Public, Static, Literal, HasDefault
Class System.Security.Policy.TrustManagerContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.TrustManagerUIContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Policy.TrustManagerUIContext UIContext 'get set' : 
    Boolean NoPrompt 'get set' : 
    Boolean IgnorePersistedDecision 'get set' : 
    Boolean KeepAlive 'get set' : 
    Boolean Persist 'get set' : 
    System.ApplicationIdentity PreviousApplicationIdentity 'get set' : 
  Methods:
    get_UIContext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UIContext(TrustManagerUIContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NoPrompt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NoPrompt(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IgnorePersistedDecision(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IgnorePersistedDecision(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_KeepAlive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_KeepAlive(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Persist(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Persist(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreviousApplicationIdentity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PreviousApplicationIdentity(ApplicationIdentity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Security.Policy.CodeConnectAccess: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 DefaultPort : Public, Static, InitOnly
    Int32 OriginPort : Public, Static, InitOnly
    System.String OriginScheme : Public, Static, InitOnly
    System.String AnyScheme : Public, Static, InitOnly
    Int32 NoPort = -1 : Assembly, Static, Literal, HasDefault
    Int32 AnyPort = -2 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String Scheme 'get ' : 
    Int32 Port 'get ' : 
    Boolean IsOriginScheme 'get ' : 
    Boolean IsAnyScheme 'get ' : 
    Boolean IsDefaultPort 'get ' : 
    Boolean IsOriginPort 'get ' : 
    System.String StrPort 'get ' : 
  Methods:
    CreateOriginSchemeAccess(Int32): PrivateScope, Public, Static, HideBySig
    CreateAnySchemeAccess(Int32): PrivateScope, Public, Static, HideBySig
    get_Scheme(): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_IsOriginScheme(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsAnyScheme(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsDefaultPort(): PrivateScope, Assembly, HideBySig, SpecialName
    get_IsOriginPort(): PrivateScope, Assembly, HideBySig, SpecialName
    get_StrPort(): PrivateScope, Assembly, HideBySig, SpecialName
    IsValidScheme(String): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Policy.NetCodeGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.CodeGroup
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IUnionSemanticCodeGroup
  Fields:
    System.String AnyOtherOriginScheme : Public, Static, InitOnly
    System.String AbsentOriginScheme : Public, Static, InitOnly
  Properties:
    System.String MergeLogic 'get ' : 
    System.String PermissionSetName 'get ' : 
    System.String AttributeString 'get ' : 
  Methods:
    ResetConnectAccess(): PrivateScope, Public, HideBySig
    AddConnectAccess(String, CodeConnectAccess): PrivateScope, Public, HideBySig
    GetConnectAccessRules(): PrivateScope, Public, HideBySig
    Resolve(Evidence): PrivateScope, Public, Virtual, HideBySig
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, Virtual, HideBySig
    CreateWebPermission(String, String, String, String): PrivateScope, Assembly, HideBySig
    CalculatePolicy(String, String, String): PrivateScope, Assembly, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_MergeLogic(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PermissionSetName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AttributeString(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetTypeName(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct System.Security.Policy.EvidenceTypeGenerated: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Policy.EvidenceTypeGenerated AssemblySupplied = 0 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Gac = 1 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Hash = 2 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated PermissionRequest = 3 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Publisher = 4 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Site = 5 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated StrongName = 6 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Url = 7 : Public, Static, Literal, HasDefault
    System.Security.Policy.EvidenceTypeGenerated Zone = 8 : Public, Static, Literal, HasDefault
Class System.Security.Policy.PEFileEvidenceFactory: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Interfaces:
    System.Security.Policy.IRuntimeEvidenceFactory
  Properties:
    Microsoft.Win32.SafeHandles.SafePEFileHandle PEFile 'get ' : 
    System.Security.IEvidenceFactory Target 'get ' : 
  Methods:
    get_PEFile(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FireEvidenceGeneratedEvent(EvidenceTypeGenerated): PrivateScope, Assembly, HideBySig
    GetFactorySuppliedEvidence(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GenerateEvidence(Type): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Policy.PermissionRequestEvidence: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit (Obsolete)
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.Security.PermissionSet, System.Security.PermissionSet, System.Security.PermissionSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.PermissionSet RequestedPermissions 'get ' : 
    System.Security.PermissionSet OptionalPermissions 'get ' : 
    System.Security.PermissionSet DeniedPermissions 'get ' : 
  Methods:
    get_RequestedPermissions(): PrivateScope, Public, HideBySig, SpecialName
    get_OptionalPermissions(): PrivateScope, Public, HideBySig, SpecialName
    get_DeniedPermissions(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.PolicyException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Struct System.Security.Policy.ConfigId: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Policy.ConfigId None = 0 : Public, Static, Literal, HasDefault
    System.Security.Policy.ConfigId MachinePolicyLevel = 1 : Public, Static, Literal, HasDefault
    System.Security.Policy.ConfigId UserPolicyLevel = 2 : Public, Static, Literal, HasDefault
    System.Security.Policy.ConfigId EnterprisePolicyLevel = 3 : Public, Static, Literal, HasDefault
Class System.Security.Policy.PolicyLevel: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
    Void .ctor(System.Security.PolicyLevelType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PolicyLevelType, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PolicyLevelType, System.String, System.Security.Policy.ConfigId): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Label 'get ' : 
    System.Security.PolicyLevelType Type 'get ' : 
    System.Security.Policy.ConfigId ConfigId 'get ' : 
    System.String Path 'get ' : 
    System.String StoreLocation 'get ' : 
    System.Security.Policy.CodeGroup RootCodeGroup 'get set' : 
    System.Collections.IList NamedPermissionSets 'get ' : 
    System.Collections.IList FullTrustAssemblies 'get ' :  (Obsolete)
  Methods:
    GetLocationFromType(PolicyLevelType): PrivateScope, Assembly, Static, HideBySig
    CreateAppDomainLevel(): PrivateScope, Public, Static, HideBySig (Obsolete)
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_ConfigId(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Path(): PrivateScope, Assembly, HideBySig, SpecialName
    get_StoreLocation(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_RootCodeGroup(): PrivateScope, Public, HideBySig, SpecialName
    set_RootCodeGroup(CodeGroup): PrivateScope, Public, HideBySig, SpecialName
    get_NamedPermissionSets(): PrivateScope, Public, HideBySig, SpecialName
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, HideBySig
    AddFullTrustAssembly(StrongName): PrivateScope, Public, HideBySig (Obsolete)
    AddFullTrustAssembly(StrongNameMembershipCondition): PrivateScope, Public, HideBySig (Obsolete)
    RemoveFullTrustAssembly(StrongName): PrivateScope, Public, HideBySig (Obsolete)
    RemoveFullTrustAssembly(StrongNameMembershipCondition): PrivateScope, Public, HideBySig (Obsolete)
    get_FullTrustAssemblies(): PrivateScope, Public, HideBySig, SpecialName
    AddNamedPermissionSet(NamedPermissionSet): PrivateScope, Public, HideBySig
    RemoveNamedPermissionSet(NamedPermissionSet): PrivateScope, Public, HideBySig
    RemoveNamedPermissionSet(String): PrivateScope, Public, HideBySig
    ChangeNamedPermissionSet(String, PermissionSet): PrivateScope, Public, HideBySig
    GetNamedPermissionSet(String): PrivateScope, Public, HideBySig
    Recover(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Resolve(Evidence): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Public, HideBySig
    FromXml(SecurityElement): PrivateScope, Public, HideBySig
    GetBuiltInSet(String): PrivateScope, Assembly, Static, HideBySig
    GetNamedPermissionSetInternal(String): PrivateScope, Assembly, HideBySig
    Resolve(Evidence, Int32, Byte[]): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.CodeGroupStackFrame: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Security.Policy.CodeGroup current : Assembly
    System.Security.Policy.PolicyStatement policy : Assembly
    System.Security.Policy.CodeGroupStackFrame parent : Assembly
Class System.Security.Policy.CodeGroupStack: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Push(CodeGroupStackFrame): PrivateScope, Assembly, HideBySig
    Pop(): PrivateScope, Assembly, HideBySig
    IsEmpty(): PrivateScope, Assembly, HideBySig
Struct System.Security.Policy.PolicyStatementAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Policy.PolicyStatementAttribute Nothing = 0 : Public, Static, Literal, HasDefault
    System.Security.Policy.PolicyStatementAttribute Exclusive = 1 : Public, Static, Literal, HasDefault
    System.Security.Policy.PolicyStatementAttribute LevelFinal = 2 : Public, Static, Literal, HasDefault
    System.Security.Policy.PolicyStatementAttribute All = 3 : Public, Static, Literal, HasDefault
Class System.Security.Policy.PolicyStatement: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.PermissionSet, System.Security.Policy.PolicyStatementAttribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.ISecurityPolicyEncodable
    System.Security.ISecurityEncodable
  Fields:
    System.Security.PermissionSet m_permSet : Assembly
    System.Security.Policy.PolicyStatementAttribute m_attributes : Assembly
  Properties:
    System.Security.PermissionSet PermissionSet 'get set' : 
    System.Security.Policy.PolicyStatementAttribute Attributes 'get set' : 
    System.String AttributeString 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Security.Policy.IDelayEvaluatedEvidence] DependentEvidence 'get ' : 
    Boolean HasDependentEvidence 'get ' : 
  Methods:
    get_PermissionSet(): PrivateScope, Public, HideBySig, SpecialName
    ToXml(PolicyLevel, Boolean): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement, PolicyLevel, Boolean): PrivateScope, Assembly, HideBySig
    set_PermissionSet(PermissionSet): PrivateScope, Public, HideBySig, SpecialName
    SetPermissionSetNoCopy(PermissionSet): PrivateScope, Assembly, HideBySig
    GetPermissionSetNoCopy(): PrivateScope, Assembly, HideBySig
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(PolicyStatementAttribute): PrivateScope, Public, HideBySig, SpecialName
    Copy(): PrivateScope, Public, HideBySig
    get_AttributeString(): PrivateScope, Public, HideBySig, SpecialName
    get_DependentEvidence(): PrivateScope, Assembly, HideBySig, SpecialName
    get_HasDependentEvidence(): PrivateScope, Assembly, HideBySig, SpecialName
    AddDependentEvidence(IDelayEvaluatedEvidence): PrivateScope, Assembly, HideBySig
    InplaceUnion(PolicyStatement): PrivateScope, Assembly, HideBySig
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityDocument, Int32, PolicyLevel, Boolean): PrivateScope, Assembly, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.Site: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
  Properties:
    System.String Name 'get ' : 
  Methods:
    CreateFromUrl(String): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    GetSiteString(): PrivateScope, Assembly, HideBySig
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.SiteMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.String Site 'get set' : 
  Methods:
    set_Site(String): PrivateScope, Public, HideBySig, SpecialName
    get_Site(): PrivateScope, Public, HideBySig, SpecialName
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.StrongName: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.StrongNamePublicKeyBlob, System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.StrongNamePublicKeyBlob, System.String, System.Version, System.Reflection.Assembly): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
    System.Security.Policy.IDelayEvaluatedEvidence
  Properties:
    System.Security.Permissions.StrongNamePublicKeyBlob PublicKey 'get ' : 
    System.String Name 'get ' : 
    System.Version Version 'get ' : 
  Methods:
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    CompareNames(String, String): PrivateScope, Assembly, Static, HideBySig
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    FromXml(SecurityElement): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.StrongNameMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Permissions.StrongNamePublicKeyBlob, System.String, System.Version): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.Security.Permissions.StrongNamePublicKeyBlob PublicKey 'get set' : 
    System.String Name 'get set' : 
    System.Version Version 'get set' : 
  Methods:
    set_PublicKey(StrongNamePublicKeyBlob): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(Version): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.UnionCodeGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit (Obsolete)
  :System.Security.Policy.CodeGroup
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition, System.Security.PermissionSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Policy.IMembershipCondition, System.Security.Policy.PolicyStatement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IUnionSemanticCodeGroup
  Properties:
    System.String MergeLogic 'get ' : 
  Methods:
    Resolve(Evidence): PrivateScope, Public, Virtual, HideBySig
    ResolveMatchingCodeGroups(Evidence): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    get_MergeLogic(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetTypeName(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Security.Policy.Url: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
  Properties:
    System.String Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    GetURLString(): PrivateScope, Assembly, HideBySig
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.UrlMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.String Url 'get set' : 
  Methods:
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    set_Url(String): PrivateScope, Public, HideBySig, SpecialName
    get_Url(): PrivateScope, Public, HideBySig, SpecialName
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.Zone: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.Security.SecurityZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
  Properties:
    System.Security.SecurityZone SecurityZone 'get ' : 
  Methods:
    CreateFromUrl(String): PrivateScope, Public, Static, HideBySig
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SecurityZone(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.ZoneMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.SecurityZone): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.Security.SecurityZone SecurityZone 'get set' : 
  Methods:
    set_SecurityZone(SecurityZone): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityZone(): PrivateScope, Public, HideBySig, SpecialName
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.GacInstalled: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
  Methods:
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.GacMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Methods:
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.Hash: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    Byte[] SHA1 'get ' : 
    Byte[] SHA256 'get ' : 
    Byte[] MD5 'get ' : 
  Methods:
    CreateSHA1(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateSHA256(Byte[]): PrivateScope, Public, Static, HideBySig
    CreateMD5(Byte[]): PrivateScope, Public, Static, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SHA1(): PrivateScope, Public, HideBySig, SpecialName
    get_SHA256(): PrivateScope, Public, HideBySig, SpecialName
    get_MD5(): PrivateScope, Public, HideBySig, SpecialName
    GenerateHash(HashAlgorithm): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.HashMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.HashAlgorithm, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.Security.Cryptography.HashAlgorithm HashAlgorithm 'get set' : 
    Byte[] HashValue 'get set' : 
  Methods:
    set_HashAlgorithm(HashAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashValue(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_HashValue(): PrivateScope, Public, HideBySig, SpecialName
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Policy.Publisher: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Security.Policy.EvidenceBase
    Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IIdentityPermissionFactory
  Properties:
    System.Security.Cryptography.X509Certificates.X509Certificate Certificate 'get ' : 
  Methods:
    CreateIdentityPermission(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    PublicKeyEquals(X509Certificate, X509Certificate): PrivateScope, Assembly, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Certificate(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Normalize(): PrivateScope, Assembly, HideBySig
Class System.Security.Policy.PublisherMembershipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.X509Certificates.X509Certificate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Policy.IMembershipCondition
    System.Security.ISecurityEncodable
    System.Security.ISecurityPolicyEncodable
    System.Security.Policy.IConstantMembershipCondition
    System.Security.Policy.IReportMatchMembershipCondition
  Properties:
    System.Security.Cryptography.X509Certificates.X509Certificate Certificate 'get set' : 
  Methods:
    set_Certificate(X509Certificate): PrivateScope, Public, HideBySig, SpecialName
    get_Certificate(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Check(Evidence): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Copy(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToXml(PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromXml(SecurityElement, PolicyLevel): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Util.QuickCacheEntryType: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Util.QuickCacheEntryType FullTrustZoneMyComputer = 16777216 : Public, Static, Literal, HasDefault
    System.Security.Util.QuickCacheEntryType FullTrustZoneIntranet = 33554432 : Public, Static, Literal, HasDefault
    System.Security.Util.QuickCacheEntryType FullTrustZoneInternet = 67108864 : Public, Static, Literal, HasDefault
    System.Security.Util.QuickCacheEntryType FullTrustZoneTrusted = 134217728 : Public, Static, Literal, HasDefault
    System.Security.Util.QuickCacheEntryType FullTrustZoneUntrusted = 268435456 : Public, Static, Literal, HasDefault
    System.Security.Util.QuickCacheEntryType FullTrustAll = 536870912 : Public, Static, Literal, HasDefault
Class System.Security.Util.Config: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String MachineDirectory 'get ' : 
    System.String UserDirectory 'get ' : 
  Methods:
    get_MachineDirectory(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_UserDirectory(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    SaveDataByte(String, Byte[](In), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    RecoverData(ConfigId): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    SetQuickCache(ConfigId, QuickCacheEntryType): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    GetCacheEntry(ConfigId, Int32, Byte[], Byte[]&(Out)): PrivateScope, Assembly, Static, HideBySig
    AddCacheEntry(ConfigId, Int32, Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
    ResetCacheData(ConfigId): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    WriteToEventLog(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
Class System.Security.Util.Hex: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    EncodeHexString(Byte[]): PrivateScope, Public, Static, HideBySig
    EncodeHexStringFromInt(Byte[]): PrivateScope, Assembly, Static, HideBySig
    ConvertHexDigit(Char): PrivateScope, Public, Static, HideBySig
    DecodeHexString(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Util.SiteString: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(SiteString, Boolean): PrivateScope, Assembly, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(SiteString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(SiteString, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Intersect(SiteString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Union(SiteString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Util.StringExpressionSet: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetLongPathName(String, StringHandleOnStack): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    CanonicalizePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetThrowOnRelative(Boolean): PrivateScope, Public, HideBySig
    AddExpressions(String): PrivateScope, Public, HideBySig
    AddExpressions(String[], Boolean, Boolean): PrivateScope, Public, HideBySig
    AddExpressions(ArrayList, Boolean): PrivateScope, Public, HideBySig
    CreateListFromExpressions(String[], Boolean): PrivateScope, Assembly, Static, HideBySig
    IsEmpty(): PrivateScope, Public, HideBySig
    IsSubsetOf(StringExpressionSet): PrivateScope, Public, HideBySig
    IsSubsetOfPathDiscovery(StringExpressionSet): PrivateScope, Public, HideBySig
    Union(StringExpressionSet): PrivateScope, Public, HideBySig
    Intersect(StringExpressionSet): PrivateScope, Public, HideBySig
    UnsafeToString(): PrivateScope, Public, HideBySig
    UnsafeToStringArray(): PrivateScope, Public, HideBySig
    CanonicalizePath(String): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Util.TokenBasedSet: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Util.TokenBasedSet): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    MoveNext(TokenBasedSetEnumerator&): PrivateScope, Assembly, HideBySig
    Reset(): PrivateScope, Assembly, HideBySig
    SetItem(Int32, Object): PrivateScope, Assembly, HideBySig
    GetItem(Int32): PrivateScope, Assembly, HideBySig
    RemoveItem(Int32): PrivateScope, Assembly, HideBySig
    GetStartingIndex(): PrivateScope, Assembly, HideBySig
    GetCount(): PrivateScope, Assembly, HideBySig
    GetMaxUsedIndex(): PrivateScope, Assembly, HideBySig
    FastIsEmpty(): PrivateScope, Assembly, HideBySig
    SpecialUnion(TokenBasedSet): PrivateScope, Assembly, HideBySig
    SpecialSplit(TokenBasedSet&, TokenBasedSet&, Boolean): PrivateScope, Assembly, HideBySig
Struct System.Security.Util.TokenBasedSetEnumerator: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Security.Util.TokenBasedSet): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object Current : Public
    Int32 Index : Public
  Methods:
    MoveNext(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
Class System.Security.Util.URLString: AutoLayout, AnsiClass, Class, Sealed, Serializable, BeforeFieldInit
  :System.Security.Util.SiteString
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Scheme 'get ' : 
    System.String Host 'get ' : 
    System.String Port 'get ' : 
    System.String Directory 'get ' : 
    Boolean IsRelativeFileUrl 'get ' : 
  Methods:
    OnDeserialized(StreamingContext): PrivateScope, Public, HideBySig
    PreProcessForExtendedPathRemoval(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    PreProcessForExtendedPathRemoval(Boolean, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    get_Scheme(): PrivateScope, Public, HideBySig, SpecialName
    get_Host(): PrivateScope, Public, HideBySig, SpecialName
    get_Port(): PrivateScope, Public, HideBySig, SpecialName
    get_Directory(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRelativeFileUrl(): PrivateScope, Public, HideBySig, SpecialName
    GetFileName(): PrivateScope, Public, HideBySig
    GetDirectoryName(): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, Virtual, HideBySig
    IsSubsetOf(SiteString): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(URLString): PrivateScope, Public, HideBySig
    CompareUrls(URLString, URLString): PrivateScope, Public, Static, HideBySig
    NormalizeUrl(): PrivateScope, Assembly, HideBySig
    SpecialNormalizeUrl(): PrivateScope, Assembly, HideBySig
Class System.Security.Util.DirectoryString: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Security.Util.SiteString
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsSubsetOf(DirectoryString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(DirectoryString, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Util.LocalSiteString: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  :System.Security.Util.SiteString
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsSubsetOf(LocalSiteString): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsSubsetOf(LocalSiteString, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Util.XMLUtil: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AddClassAttribute(SecurityElement, Type, String): PrivateScope, Public, Static, HideBySig
    CreatePermission(SecurityElement, PermissionState, Boolean): PrivateScope, Public, Static, HideBySig
    CreateCodeGroup(SecurityElement): PrivateScope, Public, Static, HideBySig
    CreateMembershipCondition(SecurityElement): PrivateScope, Assembly, Static, HideBySig
    GetClassFromElement(SecurityElement, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsPermissionElement(IPermission, SecurityElement): PrivateScope, Public, Static, HideBySig
    IsUnrestricted(SecurityElement): PrivateScope, Public, Static, HideBySig
    BitFieldEnumToString(Type, Object): PrivateScope, Public, Static, HideBySig
    NewPermissionElement(IPermission): PrivateScope, Public, Static, HideBySig
    NewPermissionElement(String): PrivateScope, Public, Static, HideBySig
    ParseElementForAssemblyIdentification(SecurityElement, String&(Out), String&(Out), String&(Out)): PrivateScope, Assembly, Static, HideBySig
    SecurityObjectToXmlString(Object): PrivateScope, Public, Static, HideBySig
    XmlStringToSecurityObject(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Util.Parser: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String[], System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], ByteTokenEncoding): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], ByteTokenEncoding, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.StreamReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTopElement(): PrivateScope, Assembly, HideBySig
Class System.Security.Util.Tokenizer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String[], System.String[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], ByteTokenEncoding, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Char[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.StreamReader): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 LineNo : Public
    Byte bra = 0 : Assembly, Static, Literal, HasDefault
    Byte ket = 1 : Assembly, Static, Literal, HasDefault
    Byte slash = 2 : Assembly, Static, Literal, HasDefault
    Byte cstr = 3 : Assembly, Static, Literal, HasDefault
    Byte equals = 4 : Assembly, Static, Literal, HasDefault
    Byte quest = 5 : Assembly, Static, Literal, HasDefault
    Byte bang = 6 : Assembly, Static, Literal, HasDefault
    Byte dash = 7 : Assembly, Static, Literal, HasDefault
    Int32 intOpenBracket = 60 : Assembly, Static, Literal, HasDefault
    Int32 intCloseBracket = 62 : Assembly, Static, Literal, HasDefault
    Int32 intSlash = 47 : Assembly, Static, Literal, HasDefault
    Int32 intEquals = 61 : Assembly, Static, Literal, HasDefault
    Int32 intQuote = 34 : Assembly, Static, Literal, HasDefault
    Int32 intQuest = 63 : Assembly, Static, Literal, HasDefault
    Int32 intBang = 33 : Assembly, Static, Literal, HasDefault
    Int32 intDash = 45 : Assembly, Static, Literal, HasDefault
    Int32 intTab = 9 : Assembly, Static, Literal, HasDefault
    Int32 intCR = 13 : Assembly, Static, Literal, HasDefault
    Int32 intLF = 10 : Assembly, Static, Literal, HasDefault
    Int32 intSpace = 32 : Assembly, Static, Literal, HasDefault
  Methods:
    BasicInitialization(): PrivateScope, Assembly, HideBySig
    Recycle(): PrivateScope, Public, HideBySig
    ChangeFormat(Encoding): PrivateScope, Assembly, HideBySig
    GetTokens(TokenizerStream, Int32, Boolean): PrivateScope, Assembly, HideBySig
Class System.Security.Util.TokenizerShortBlock: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int16[] m_block : Assembly
    System.Security.Util.TokenizerShortBlock m_next : Assembly
Class System.Security.Util.TokenizerStringBlock: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String[] m_block : Assembly
    System.Security.Util.TokenizerStringBlock m_next : Assembly
Class System.Security.Util.TokenizerStream: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddToken(Int16): PrivateScope, Assembly, HideBySig
    AddString(String): PrivateScope, Assembly, HideBySig
    Reset(): PrivateScope, Assembly, HideBySig
    GetNextFullToken(): PrivateScope, Assembly, HideBySig
    GetNextToken(): PrivateScope, Assembly, HideBySig
    GetNextString(): PrivateScope, Assembly, HideBySig
    ThrowAwayNextString(): PrivateScope, Assembly, HideBySig
    TagLastToken(Int16): PrivateScope, Assembly, HideBySig
    GetTokenCount(): PrivateScope, Assembly, HideBySig
    GoToPosition(Int32): PrivateScope, Assembly, HideBySig
Class System.Numerics.Hashing.HashHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Combine(Int32, Int32): PrivateScope, Public, Static, HideBySig
Class System.Resources.FastResourceComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IComparer
    System.Collections.IEqualityComparer
    System.Collections.Generic.IComparer`1[System.String]
    System.Collections.Generic.IEqualityComparer`1[System.String]
  Fields:
    System.Resources.FastResourceComparer Default : Assembly, Static, InitOnly
  Methods:
    GetHashCode(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    HashFunction(String): PrivateScope, Assembly, Static, HideBySig
    Compare(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Compare(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareOrdinal(String, Byte[], Int32): PrivateScope, Public, Static, HideBySig
    CompareOrdinal(Byte[], Int32, String): PrivateScope, Public, Static, HideBySig
    CompareOrdinal(Byte*, Int32, String): PrivateScope, Assembly, Static, HideBySig
Class System.Resources.__HResults: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 ERROR_MRM_MAP_NOT_FOUND = -2147009761 : Public, Static, Literal, HasDefault
Class System.Resources.FileBasedResourceGroveler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(ResourceManagerMediator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Resources.IResourceGroveler
  Methods:
    GrovelForResourceSet(CultureInfo, Dictionary`2, Boolean, Boolean, StackCrawlMark&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    HasNeutralResources(CultureInfo, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface System.Resources.IResourceGroveler: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GrovelForResourceSet(CultureInfo, Dictionary`2, Boolean, Boolean, StackCrawlMark&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    HasNeutralResources(CultureInfo, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Resources.IResourceReader: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IEnumerable
    System.IDisposable
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Resources.IResourceWriter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    AddResource(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddResource(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddResource(String, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Generate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Resources.ManifestBasedResourceGroveler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(ResourceManagerMediator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Resources.IResourceGroveler
  Methods:
    GrovelForResourceSet(CultureInfo, Dictionary`2, Boolean, Boolean, StackCrawlMark&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNeutralResourcesLanguage(Assembly, UltimateResourceFallbackLocation&): PrivateScope, Assembly, Static, HideBySig
    GetNeutralResourcesLanguageAttribute(RuntimeAssembly, StringHandleOnStack, Int16&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl, HasSecurity
    HasNeutralResources(CultureInfo, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateResourceSet(Stream, Assembly): PrivateScope, Assembly, HideBySig
Class System.Resources.MissingManifestResourceException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Resources.MissingSatelliteAssemblyException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.SystemException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CultureName 'get ' : 
  Methods:
    get_CultureName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Resources.NeutralResourcesLanguageAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Resources.UltimateResourceFallbackLocation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CultureName 'get ' : 
    System.Resources.UltimateResourceFallbackLocation Location 'get ' : 
  Methods:
    get_CultureName(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
Class System.Resources.ResourceFallbackManager: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Globalization.CultureInfo, System.Globalization.CultureInfo, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Globalization.CultureInfo]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Resources.WindowsRuntimeResourceManagerBase: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Globalization.CultureInfo GlobalResourceContextBestFitCultureInfo 'get ' : 
  Methods:
    Initialize(String, String, PRIExceptionInfo&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetString(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_GlobalResourceContextBestFitCultureInfo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetGlobalResourceContextDefaultCulture(CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Resources.PRIExceptionInfo: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String _PackageSimpleName : Public
    System.String _ResWFile : Public
Class System.Resources.ResourceManager: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(System.String, System.Reflection.Assembly): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Reflection.Assembly, System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 MagicNumber : Public, Static, InitOnly
    Int32 HeaderVersionNumber : Public, Static, InitOnly
    System.String ResReaderTypeName : Assembly, Static, InitOnly
    System.String ResSetTypeName : Assembly, Static, InitOnly
    System.String MscorlibName : Assembly, Static, InitOnly
    Int32 DEBUG : Assembly, Static, InitOnly
    System.String ResFileExtension = .resources : Assembly, Static, Literal, HasDefault
    Int32 ResFileExtensionLength = 10 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String BaseName 'get ' : 
    Boolean IgnoreCase 'get set' : 
    System.Type ResourceSetType 'get ' : 
  Methods:
    get_BaseName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IgnoreCase(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IgnoreCase(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ResourceSetType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReleaseAllResources(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFileBasedResourceManager(String, String, Type): PrivateScope, Public, Static, HideBySig
    GetFirstResourceSet(CultureInfo): PrivateScope, Assembly, HideBySig
    GetResourceSet(CultureInfo, Boolean, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareNames(String, String, AssemblyName): PrivateScope, Assembly, Static, HideBySig
    GetWinRTResourceManager(): PrivateScope, Assembly, Static, HideBySig
    GetString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetString(String, CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(String, CultureInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStream(String): PrivateScope, Public, HideBySig
    GetStream(String, CultureInfo): PrivateScope, Public, HideBySig
Struct System.Resources.ResourceLocator: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object _value : Assembly
    Int32 _dataPos : Assembly
  Properties:
    Int32 DataPosition 'get ' : 
    System.Object Value 'get set' : 
  Methods:
    get_DataPosition(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Assembly, HideBySig, SpecialName
    CanCache(ResourceTypeCode): PrivateScope, Assembly, Static, HideBySig
Class System.Resources.ResourceReader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Collections.Generic.Dictionary`2[System.String,System.Resources.ResourceLocator]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Resources.IResourceReader
    System.Collections.IEnumerable
    System.IDisposable
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Resources.ResourceLocator] _resCache : Assembly
  Methods:
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadUnalignedI4(Int32*): PrivateScope, Assembly, Static, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumeratorInternal(): PrivateScope, Assembly, HideBySig
    FindPosForResource(String): PrivateScope, Assembly, HideBySig
    LoadString(Int32): PrivateScope, Assembly, HideBySig
    LoadObject(Int32): PrivateScope, Assembly, HideBySig
    LoadObject(Int32, ResourceTypeCode&(Out)): PrivateScope, Assembly, HideBySig
    LoadObjectV1(Int32): PrivateScope, Assembly, HideBySig
    LoadObjectV2(Int32, ResourceTypeCode&(Out)): PrivateScope, Assembly, HideBySig
    GetResourceData(String, String&(Out), Byte[]&(Out)): PrivateScope, Public, HideBySig
Class System.Resources.ResourceSet: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Resources.IResourceReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.Collections.IEnumerable
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDefaultReader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDefaultWriter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetString(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(String, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.Resources.ResourceTypeCode: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Resources.ResourceTypeCode Null = 0 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode String = 1 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Boolean = 2 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Char = 3 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Byte = 4 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode SByte = 5 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Int16 = 6 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode UInt16 = 7 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Int32 = 8 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode UInt32 = 9 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Int64 = 10 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode UInt64 = 11 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Single = 12 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Double = 13 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Decimal = 14 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode DateTime = 15 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode TimeSpan = 16 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode LastPrimitive = 16 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode ByteArray = 32 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode Stream = 33 : Public, Static, Literal, HasDefault
    System.Resources.ResourceTypeCode StartOfUserTypes = 64 : Public, Static, Literal, HasDefault
Class System.Resources.ResourceWriter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Resources.IResourceWriter
    System.IDisposable
  Properties:
    System.Func`2[System.Type,System.String] TypeNameConverter 'get set' : 
  Methods:
    get_TypeNameConverter(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeNameConverter(Func`2): PrivateScope, Public, HideBySig, SpecialName
    AddResource(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddResource(String, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddResource(String, Stream): PrivateScope, Public, HideBySig
    AddResource(String, Stream, Boolean): PrivateScope, Public, HideBySig
    AddResource(String, Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddResourceData(String, String, Byte[]): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Generate(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Resources.RuntimeResourceSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Resources.ResourceSet
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Version = 2 : Assembly, Static, Literal, HasDefault
  Methods:
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    GetString(String): PrivateScope, Public, Virtual, HideBySig
    GetString(String, Boolean): PrivateScope, Public, Virtual, HideBySig
    GetObject(String): PrivateScope, Public, Virtual, HideBySig
    GetObject(String, Boolean): PrivateScope, Public, Virtual, HideBySig
Class System.Resources.SatelliteContractVersionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Version 'get ' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Resources.UltimateResourceFallbackLocation: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Resources.UltimateResourceFallbackLocation MainAssembly = 0 : Public, Static, Literal, HasDefault
    System.Resources.UltimateResourceFallbackLocation Satellite = 1 : Public, Static, Literal, HasDefault
Class System.Globalization.AppDomainSortingSetupInfo: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Globalization.AppDomainSortingSetupInfo): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr _pfnIsNLSDefinedString : Assembly
    IntPtr _pfnCompareStringEx : Assembly
    IntPtr _pfnLCMapStringEx : Assembly
    IntPtr _pfnFindNLSStringEx : Assembly
    IntPtr _pfnCompareStringOrdinal : Assembly
    IntPtr _pfnGetNLSVersionEx : Assembly
    IntPtr _pfnFindStringOrdinal : Assembly
    Boolean _useV2LegacySorting : Assembly
    Boolean _useV4LegacySorting : Assembly
Struct System.Globalization.BidiCategory: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Globalization.BidiCategory LeftToRight = 0 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory LeftToRightEmbedding = 1 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory LeftToRightOverride = 2 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory RightToLeft = 3 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory RightToLeftArabic = 4 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory RightToLeftEmbedding = 5 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory RightToLeftOverride = 6 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory PopDirectionalFormat = 7 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory EuropeanNumber = 8 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory EuropeanNumberSeparator = 9 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory EuropeanNumberTerminator = 10 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory ArabicNumber = 11 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory CommonNumberSeparator = 12 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory NonSpacingMark = 13 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory BoundaryNeutral = 14 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory ParagraphSeparator = 15 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory SegmentSeparator = 16 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory Whitespace = 17 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory OtherNeutrals = 18 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory LeftToRightIsolate = 19 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory RightToLeftIsolate = 20 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory FirstStrongIsolate = 21 : Public, Static, Literal, HasDefault
    System.Globalization.BidiCategory PopDirectionIsolate = 22 : Public, Static, Literal, HasDefault
Class System.Globalization.Calendar: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, BeforeFieldInit
  Interfaces:
    System.ICloneable
  Fields:
    Int32 m_currentEraValue : Assembly
    Int32 twoDigitYearMax : Assembly
    Int64 TicksPerMillisecond = 10000 : Assembly, Static, Literal, HasDefault
    Int64 TicksPerSecond = 10000000 : Assembly, Static, Literal, HasDefault
    Int64 TicksPerMinute = 600000000 : Assembly, Static, Literal, HasDefault
    Int64 TicksPerHour = 36000000000 : Assembly, Static, Literal, HasDefault
    Int64 TicksPerDay = 864000000000 : Assembly, Static, Literal, HasDefault
    Int32 MillisPerSecond = 1000 : Assembly, Static, Literal, HasDefault
    Int32 MillisPerMinute = 60000 : Assembly, Static, Literal, HasDefault
    Int32 MillisPerHour = 3600000 : Assembly, Static, Literal, HasDefault
    Int32 MillisPerDay = 86400000 : Assembly, Static, Literal, HasDefault
    Int32 DaysPerYear = 365 : Assembly, Static, Literal, HasDefault
    Int32 DaysPer4Years = 1461 : Assembly, Static, Literal, HasDefault
    Int32 DaysPer100Years = 36524 : Assembly, Static, Literal, HasDefault
    Int32 DaysPer400Years = 146097 : Assembly, Static, Literal, HasDefault
    Int32 DaysTo10000 = 3652059 : Assembly, Static, Literal, HasDefault
    Int64 MaxMillis = 315537897600000 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN = 1 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN_US = 2 : Assembly, Static, Literal, HasDefault
    Int32 CAL_JAPAN = 3 : Assembly, Static, Literal, HasDefault
    Int32 CAL_TAIWAN = 4 : Assembly, Static, Literal, HasDefault
    Int32 CAL_KOREA = 5 : Assembly, Static, Literal, HasDefault
    Int32 CAL_HIJRI = 6 : Assembly, Static, Literal, HasDefault
    Int32 CAL_THAI = 7 : Assembly, Static, Literal, HasDefault
    Int32 CAL_HEBREW = 8 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN_ME_FRENCH = 9 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN_ARABIC = 10 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN_XLIT_ENGLISH = 11 : Assembly, Static, Literal, HasDefault
    Int32 CAL_GREGORIAN_XLIT_FRENCH = 12 : Assembly, Static, Literal, HasDefault
    Int32 CAL_JULIAN = 13 : Assembly, Static, Literal, HasDefault
    Int32 CAL_JAPANESELUNISOLAR = 14 : Assembly, Static, Literal, HasDefault
    Int32 CAL_CHINESELUNISOLAR = 15 : Assembly, Static, Literal, HasDefault
    Int32 CAL_SAKA = 16 : Assembly, Static, Literal, HasDefault
    Int32 CAL_LUNAR_ETO_CHN = 17 : Assembly, Static, Literal, HasDefault
    Int32 CAL_LUNAR_ETO_KOR = 18 : Assembly, Static, Literal, HasDefault
    Int32 CAL_LUNAR_ETO_ROKUYOU = 19 : Assembly, Static, Literal, HasDefault
    Int32 CAL_KOREANLUNISOLAR = 20 : Assembly, Static, Literal, HasDefault
    Int32 CAL_TAIWANLUNISOLAR = 21 : Assembly, Static, Literal, HasDefault
    Int32 CAL_PERSIAN = 22 : Assembly, Static, Literal, HasDefault
    Int32 CAL_UMALQURA = 23 : Assembly, Static, Literal, HasDefault
    Int32 CurrentEra = 0 : Public, Static, Literal, HasDefault
  Properties:
    System.DateTime MinSupportedDateTime 'get ' : 
    System.DateTime MaxSupportedDateTime 'get ' : 
    Int32 ID   'get ' : 
    Int32 BaseCalendarID 'get ' : 
    System.Globalization.CalendarAlgorithmType AlgorithmType 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 CurrentEraValue 'get ' : 
    Int32[] Eras 'get ' : 
    Int32 TwoDigitYearMax 'get set' : 
  Methods:
    get_MinSupportedDateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxSupportedDateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ID(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_BaseCalendarID(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_AlgorithmType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReadOnly(Calendar): PrivateScope, Public, Static, HideBySig
    VerifyWritable(): PrivateScope, Assembly, HideBySig
    SetReadOnlyState(Boolean): PrivateScope, Assembly, HideBySig
    get_CurrentEraValue(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    CheckAddResult(Int64, DateTime, DateTime): PrivateScope, Assembly, Static, HideBySig
    Add(DateTime, Double, Int32): PrivateScope, Assembly, HideBySig
    AddMilliseconds(DateTime, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddDays(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddHours(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMinutes(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMonths(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddSeconds(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddWeeks(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddYears(DateTime, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDayOfMonth(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDayOfWeek(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDayOfYear(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDaysInMonth(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDaysInMonth(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDaysInYear(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDaysInYear(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEra(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Eras(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetHour(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMilliseconds(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMinute(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMonth(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMonthsInYear(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMonthsInYear(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSecond(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFirstDayWeekOfYear(DateTime, Int32): PrivateScope, Assembly, HideBySig
    GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetYear(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsLeapDay(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLeapDay(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsLeapMonth(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLeapMonth(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLeapMonth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLeapMonth(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLeapYear(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLeapYear(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TryToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTime&(Out)): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsValidYear(Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsValidMonth(Int32, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    IsValidDay(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    get_TwoDigitYearMax(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TwoDigitYearMax(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToFourDigitYear(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TimeToTicks(Int32, Int32, Int32, Int32): PrivateScope, Assembly, Static, HideBySig
    GetSystemTwoDigitYearSetting(Int32, Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Globalization.CalendarData: NotPublic
    Void .ctor(System.String, Int32, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sNativeName : Assembly
    System.String[] saShortDates : Assembly
    System.String[] saYearMonths : Assembly
    System.String[] saLongDates : Assembly
    System.String sMonthDay : Assembly
    System.String[] saEraNames : Assembly
    System.String[] saAbbrevEraNames : Assembly
    System.String[] saAbbrevEnglishEraNames : Assembly
    System.String[] saDayNames : Assembly
    System.String[] saAbbrevDayNames : Assembly
    System.String[] saSuperShortDayNames : Assembly
    System.String[] saMonthNames : Assembly
    System.String[] saAbbrevMonthNames : Assembly
    System.String[] saMonthGenitiveNames : Assembly
    System.String[] saAbbrevMonthGenitiveNames : Assembly
    System.String[] saLeapYearMonthNames : Assembly
    Int32 iTwoDigitYearMax : Assembly
    Int32 iCurrentEra : Assembly
    Boolean bUseUserOverrides : Assembly
    System.Globalization.CalendarData Invariant : Assembly, Static
    Int32 MAX_CALENDARS = 23 : Assembly, Static, Literal, HasDefault
  Methods:
    nativeGetCalendars(String, Boolean, Int32[](In, Out)): PrivateScope, Assembly, Static, HideBySig
    GetCalendarData(Int32): PrivateScope, Assembly, Static, HideBySig
    FixupWin7MonthDaySemicolonBug(): PrivateScope, Assembly, HideBySig
    nativeGetTwoDigitYearMax(Int32): PrivateScope, Assembly, Static, HideBySig
Struct System.Globalization.CalendarAlgorithmType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Globalization.CalendarAlgorithmType Unknown = 0 : Public, Static, Literal, HasDefault
    System.Globalization.CalendarAlgorithmType SolarCalendar = 1 : Public, Static, Literal, HasDefault
    